/**
 * jVectorMap version 2.0.2
 *
 * Copyright 2011-2014, Kirill Lebedev
 *
 */

(function( $ ){
  var apiParams = {
        set: {
          colors: 1,
          values: 1,
          backgroundColor: 1,
          scaleColors: 1,
          normalizeFunction: 1,
          focus: 1
        },
        get: {
          selectedRegions: 1,
          selectedMarkers: 1,
          mapObject: 1,
          regionName: 1
        }
      };

  $.fn.vectorMap = function(options) {
    var map,
        methodName,
        map = this.children('.jvectormap-container').data('mapObject');

    if (options === 'addMap') {
      jvm.Map.maps[arguments[1]] = arguments[2];
    } else if ((options === 'set' || options === 'get') && apiParams[options][arguments[1]]) {
      methodName = arguments[1].charAt(0).toUpperCase()+arguments[1].substr(1);
      return map[options+methodName].apply(map, Array.prototype.slice.call(arguments, 2));
    } else {
      options = options || {};
      options.container = this;
      map = new jvm.Map(options);
    }

    return this;
  };
})( jQuery );
/*! Copyright (c) 2013 Brandon Aaron (http://brandon.aaron.sh)
 * Licensed under the MIT License (LICENSE.txt).
 *
 * Version: 3.1.9
 *
 * Requires: jQuery 1.2.2+
 */

(function (factory) {
    if ( typeof define === 'function' && define.amd ) {
        // AMD. Register as an anonymous module.
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS style for Browserify
        module.exports = factory;
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function ($) {

    var toFix  = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],
        toBind = ( 'onwheel' in document || document.documentMode >= 9 ) ?
                    ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],
        slice  = Array.prototype.slice,
        nullLowestDeltaTimeout, lowestDelta;

    if ( $.event.fixHooks ) {
        for ( var i = toFix.length; i; ) {
            $.event.fixHooks[ toFix[--i] ] = $.event.mouseHooks;
        }
    }

    var special = $.event.special.mousewheel = {
        version: '3.1.9',

        setup: function() {
            if ( this.addEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.addEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = handler;
            }
            // Store the line height and page height for this particular element
            $.data(this, 'mousewheel-line-height', special.getLineHeight(this));
            $.data(this, 'mousewheel-page-height', special.getPageHeight(this));
        },

        teardown: function() {
            if ( this.removeEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.removeEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = null;
            }
        },

        getLineHeight: function(elem) {
            return parseInt($(elem)['offsetParent' in $.fn ? 'offsetParent' : 'parent']().css('fontSize'), 10);
        },

        getPageHeight: function(elem) {
            return $(elem).height();
        },

        settings: {
            adjustOldDeltas: true
        }
    };

    $.fn.extend({
        mousewheel: function(fn) {
            return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');
        },

        unmousewheel: function(fn) {
            return this.unbind('mousewheel', fn);
        }
    });


    function handler(event) {
        var orgEvent   = event || window.event,
            args       = slice.call(arguments, 1),
            delta      = 0,
            deltaX     = 0,
            deltaY     = 0,
            absDelta   = 0;
        event = $.event.fix(orgEvent);
        event.type = 'mousewheel';

        // Old school scrollwheel delta
        if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1;      }
        if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;       }
        if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY;      }
        if ( 'wheelDeltaX' in orgEvent ) { deltaX = orgEvent.wheelDeltaX * -1; }

        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event
        if ( 'axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {
            deltaX = deltaY * -1;
            deltaY = 0;
        }

        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy
        delta = deltaY === 0 ? deltaX : deltaY;

        // New school wheel delta (wheel event)
        if ( 'deltaY' in orgEvent ) {
            deltaY = orgEvent.deltaY * -1;
            delta  = deltaY;
        }
        if ( 'deltaX' in orgEvent ) {
            deltaX = orgEvent.deltaX;
            if ( deltaY === 0 ) { delta  = deltaX * -1; }
        }

        // No change actually happened, no reason to go any further
        if ( deltaY === 0 && deltaX === 0 ) { return; }

        // Need to convert lines and pages to pixels if we aren't already in pixels
        // There are three delta modes:
        //   * deltaMode 0 is by pixels, nothing to do
        //   * deltaMode 1 is by lines
        //   * deltaMode 2 is by pages
        if ( orgEvent.deltaMode === 1 ) {
            var lineHeight = $.data(this, 'mousewheel-line-height');
            delta  *= lineHeight;
            deltaY *= lineHeight;
            deltaX *= lineHeight;
        } else if ( orgEvent.deltaMode === 2 ) {
            var pageHeight = $.data(this, 'mousewheel-page-height');
            delta  *= pageHeight;
            deltaY *= pageHeight;
            deltaX *= pageHeight;
        }

        // Store lowest absolute delta to normalize the delta values
        absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );

        if ( !lowestDelta || absDelta < lowestDelta ) {
            lowestDelta = absDelta;

            // Adjust older deltas if necessary
            if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
                lowestDelta /= 40;
            }
        }

        // Adjust older deltas if necessary
        if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
            // Divide all the things by 40!
            delta  /= 40;
            deltaX /= 40;
            deltaY /= 40;
        }

        // Get a whole, normalized value for the deltas
        delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);
        deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);
        deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);

        // Add information to the event object
        event.deltaX = deltaX;
        event.deltaY = deltaY;
        event.deltaFactor = lowestDelta;
        // Go ahead and set deltaMode to 0 since we converted to pixels
        // Although this is a little odd since we overwrite the deltaX/Y
        // properties with normalized deltas.
        event.deltaMode = 0;

        // Add event and delta to the front of the arguments
        args.unshift(event, delta, deltaX, deltaY);

        // Clearout lowestDelta after sometime to better
        // handle multiple device types that give different
        // a different lowestDelta
        // Ex: trackpad = 3 and mouse wheel = 120
        if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }
        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);

        return ($.event.dispatch || $.event.handle).apply(this, args);
    }

    function nullLowestDelta() {
        lowestDelta = null;
    }

    function shouldAdjustOldDeltas(orgEvent, absDelta) {
        // If this is an older event and the delta is divisable by 120,
        // then we are assuming that the browser is treating this as an
        // older mouse wheel event and that we should divide the deltas
        // by 40 to try and get a more usable deltaFactor.
        // Side note, this actually impacts the reported scroll distance
        // in older browsers and can cause scrolling to be slower than native.
        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.
        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;
    }

}));/**
 * @namespace jvm Holds core methods and classes used by jVectorMap.
 */
var jvm = {

  /**
   * Inherits child's prototype from the parent's one.
   * @param {Function} child
   * @param {Function} parent
   */
  inherits: function(child, parent) {
    function temp() {}
    temp.prototype = parent.prototype;
    child.prototype = new temp();
    child.prototype.constructor = child;
    child.parentClass = parent;
  },

  /**
   * Mixes in methods from the source constructor to the target one.
   * @param {Function} target
   * @param {Function} source
   */
  mixin: function(target, source){
    var prop;

    for (prop in source.prototype) {
      if (source.prototype.hasOwnProperty(prop)) {
        target.prototype[prop] = source.prototype[prop];
      }
    }
  },

  min: function(values){
    var min = Number.MAX_VALUE,
        i;

    if (values instanceof Array) {
      for (i = 0; i < values.length; i++) {
        if (values[i] < min) {
          min = values[i];
        }
      }
    } else {
      for (i in values) {
        if (values[i] < min) {
          min = values[i];
        }
      }
    }
    return min;
  },

  max: function(values){
    var max = Number.MIN_VALUE,
        i;

    if (values instanceof Array) {
      for (i = 0; i < values.length; i++) {
        if (values[i] > max) {
          max = values[i];
        }
      }
    } else {
      for (i in values) {
        if (values[i] > max) {
          max = values[i];
        }
      }
    }
    return max;
  },

  keys: function(object){
    var keys = [],
        key;

    for (key in object) {
      keys.push(key);
    }
    return keys;
  },

  values: function(object){
    var values = [],
        key,
        i;

    for (i = 0; i < arguments.length; i++) {
      object = arguments[i];
      for (key in object) {
        values.push(object[key]);
      }
    }
    return values;
  },

  whenImageLoaded: function(url){
    var deferred = new jvm.$.Deferred(),
        img = jvm.$('<img/>');

    img.error(function(){
      deferred.reject();
    }).load(function(){
      deferred.resolve(img);
    });
    img.attr('src', url);

    return deferred;
  },

  isImageUrl: function(s){
    return /\.\w{3,4}$/.test(s);
  }
};

jvm.$ = jQuery;

/**
 * indexOf polyfill for IE < 9
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf
 */
if (!Array.prototype.indexOf) {
  Array.prototype.indexOf = function (searchElement, fromIndex) {

    var k;

    // 1. Let O be the result of calling ToObject passing
    //    the this value as the argument.
    if (this == null) {
      throw new TypeError('"this" is null or not defined');
    }

    var O = Object(this);

    // 2. Let lenValue be the result of calling the Get
    //    internal method of O with the argument "length".
    // 3. Let len be ToUint32(lenValue).
    var len = O.length >>> 0;

    // 4. If len is 0, return -1.
    if (len === 0) {
      return -1;
    }

    // 5. If argument fromIndex was passed let n be
    //    ToInteger(fromIndex); else let n be 0.
    var n = +fromIndex || 0;

    if (Math.abs(n) === Infinity) {
      n = 0;
    }

    // 6. If n >= len, return -1.
    if (n >= len) {
      return -1;
    }

    // 7. If n >= 0, then Let k be n.
    // 8. Else, n<0, Let k be len - abs(n).
    //    If k is less than 0, then let k be 0.
    k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);

    // 9. Repeat, while k < len
    while (k < len) {
      // a. Let Pk be ToString(k).
      //   This is implicit for LHS operands of the in operator
      // b. Let kPresent be the result of calling the
      //    HasProperty internal method of O with argument Pk.
      //   This step can be combined with c
      // c. If kPresent is true, then
      //    i.  Let elementK be the result of calling the Get
      //        internal method of O with the argument ToString(k).
      //   ii.  Let same be the result of applying the
      //        Strict Equality Comparison Algorithm to
      //        searchElement and elementK.
      //  iii.  If same is true, return k.
      if (k in O && O[k] === searchElement) {
        return k;
      }
      k++;
    }
    return -1;
  };
}/**
 * Basic wrapper for DOM element.
 * @constructor
 * @param {String} name Tag name of the element
 * @param {Object} config Set of parameters to initialize element with
 */
jvm.AbstractElement = function(name, config){
  /**
   * Underlying DOM element
   * @type {DOMElement}
   * @private
   */
  this.node = this.createElement(name);

  /**
   * Name of underlying element
   * @type {String}
   * @private
   */
  this.name = name;

  /**
   * Internal store of attributes
   * @type {Object}
   * @private
   */
  this.properties = {};

  if (config) {
    this.set(config);
  }
};

/**
 * Set attribute of the underlying DOM element.
 * @param {String} name Name of attribute
 * @param {Number|String} config Set of parameters to initialize element with
 */
jvm.AbstractElement.prototype.set = function(property, value){
  var key;

  if (typeof property === 'object') {
    for (key in property) {
      this.properties[key] = property[key];
      this.applyAttr(key, property[key]);
    }
  } else {
    this.properties[property] = value;
    this.applyAttr(property, value);
  }
};

/**
 * Returns value of attribute.
 * @param {String} name Name of attribute
 */
jvm.AbstractElement.prototype.get = function(property){
  return this.properties[property];
};

/**
 * Applies attribute value to the underlying DOM element.
 * @param {String} name Name of attribute
 * @param {Number|String} config Value of attribute to apply
 * @private
 */
jvm.AbstractElement.prototype.applyAttr = function(property, value){
  this.node.setAttribute(property, value);
};

jvm.AbstractElement.prototype.remove = function(){
  jvm.$(this.node).remove();
};/**
 * Implements abstract vector canvas.
 * @constructor
 * @param {HTMLElement} container Container to put element to.
 * @param {Number} width Width of canvas.
 * @param {Number} height Height of canvas.
 */
jvm.AbstractCanvasElement = function(container, width, height){
  this.container = container;
  this.setSize(width, height);
  this.rootElement = new jvm[this.classPrefix+'GroupElement']();
  this.node.appendChild( this.rootElement.node );
  this.container.appendChild(this.node);
}

/**
 * Add element to the certain group inside of the canvas.
 * @param {HTMLElement} element Element to add to canvas.
 * @param {HTMLElement} group Group to add element into or into root group if not provided.
 */
jvm.AbstractCanvasElement.prototype.add = function(element, group){
  group = group || this.rootElement;
  group.add(element);
  element.canvas = this;
}

/**
 * Create path and add it to the canvas.
 * @param {Object} config Parameters of path to create.
 * @param {Object} style Styles of the path to create.
 * @param {HTMLElement} group Group to add path into.
 */
jvm.AbstractCanvasElement.prototype.addPath = function(config, style, group){
  var el = new jvm[this.classPrefix+'PathElement'](config, style);

  this.add(el, group);
  return el;
};

/**
 * Create circle and add it to the canvas.
 * @param {Object} config Parameters of path to create.
 * @param {Object} style Styles of the path to create.
 * @param {HTMLElement} group Group to add circle into.
 */
jvm.AbstractCanvasElement.prototype.addCircle = function(config, style, group){
  var el = new jvm[this.classPrefix+'CircleElement'](config, style);

  this.add(el, group);
  return el;
};

/**
 * Create circle and add it to the canvas.
 * @param {Object} config Parameters of path to create.
 * @param {Object} style Styles of the path to create.
 * @param {HTMLElement} group Group to add circle into.
 */
jvm.AbstractCanvasElement.prototype.addImage = function(config, style, group){
  var el = new jvm[this.classPrefix+'ImageElement'](config, style);

  this.add(el, group);
  return el;
};

/**
 * Create text and add it to the canvas.
 * @param {Object} config Parameters of path to create.
 * @param {Object} style Styles of the path to create.
 * @param {HTMLElement} group Group to add circle into.
 */
jvm.AbstractCanvasElement.prototype.addText = function(config, style, group){
  var el = new jvm[this.classPrefix+'TextElement'](config, style);

  this.add(el, group);
  return el;
};

/**
 * Add group to the another group inside of the canvas.
 * @param {HTMLElement} group Group to add circle into or root group if not provided.
 */
jvm.AbstractCanvasElement.prototype.addGroup = function(parentGroup){
  var el = new jvm[this.classPrefix+'GroupElement']();

  if (parentGroup) {
    parentGroup.node.appendChild(el.node);
  } else {
    this.node.appendChild(el.node);
  }
  el.canvas = this;
  return el;
};/**
 * Abstract shape element. Shape element represents some visual vector or raster object.
 * @constructor
 * @param {String} name Tag name of the element.
 * @param {Object} config Set of parameters to initialize element with.
 * @param {Object} style Object with styles to set on element initialization.
 */
jvm.AbstractShapeElement = function(name, config, style){
  this.style = style || {};
  this.style.current = this.style.current || {};
  this.isHovered = false;
  this.isSelected = false;
  this.updateStyle();
};

/**
 * Set element's style.
 * @param {Object|String} property Could be string to set only one property or object to set several style properties at once.
 * @param {String} value Value to set in case only one property should be set.
 */
jvm.AbstractShapeElement.prototype.setStyle = function(property, value){
  var styles = {};

  if (typeof property === 'object') {
    styles = property;
  } else {
    styles[property] = value;
  }
  jvm.$.extend(this.style.current, styles);
  this.updateStyle();
};


jvm.AbstractShapeElement.prototype.updateStyle = function(){
  var attrs = {};

  jvm.AbstractShapeElement.mergeStyles(attrs, this.style.initial);
  jvm.AbstractShapeElement.mergeStyles(attrs, this.style.current);
  if (this.isHovered) {
    jvm.AbstractShapeElement.mergeStyles(attrs, this.style.hover);
  }
  if (this.isSelected) {
    jvm.AbstractShapeElement.mergeStyles(attrs, this.style.selected);
    if (this.isHovered) {
      jvm.AbstractShapeElement.mergeStyles(attrs, this.style.selectedHover);
    }
  }
  this.set(attrs);
};

jvm.AbstractShapeElement.mergeStyles = function(styles, newStyles){
  var key;

  newStyles = newStyles || {};
  for (key in newStyles) {
    if (newStyles[key] === null) {
      delete styles[key];
    } else {
      styles[key] = newStyles[key];
    }
  }
}/**
 * Wrapper for SVG element.
 * @constructor
 * @extends jvm.AbstractElement
 * @param {String} name Tag name of the element
 * @param {Object} config Set of parameters to initialize element with
 */

jvm.SVGElement = function(name, config){
  jvm.SVGElement.parentClass.apply(this, arguments);
}

jvm.inherits(jvm.SVGElement, jvm.AbstractElement);

jvm.SVGElement.svgns = "http://www.w3.org/2000/svg";

/**
 * Creates DOM element.
 * @param {String} tagName Name of element
 * @private
 * @returns DOMElement
 */
jvm.SVGElement.prototype.createElement = function( tagName ){
  return document.createElementNS( jvm.SVGElement.svgns, tagName );
};

/**
 * Adds CSS class for underlying DOM element.
 * @param {String} className Name of CSS class name
 */
jvm.SVGElement.prototype.addClass = function( className ){
  this.node.setAttribute('class', className);
};

/**
 * Returns constructor for element by name prefixed with 'VML'.
 * @param {String} ctr Name of basic constructor to return
 * proper implementation for.
 * @returns Function
 * @private
 */
jvm.SVGElement.prototype.getElementCtr = function( ctr ){
  return jvm['SVG'+ctr];
};

jvm.SVGElement.prototype.getBBox = function(){
  return this.node.getBBox();
};jvm.SVGGroupElement = function(){
  jvm.SVGGroupElement.parentClass.call(this, 'g');
}

jvm.inherits(jvm.SVGGroupElement, jvm.SVGElement);

jvm.SVGGroupElement.prototype.add = function(element){
  this.node.appendChild( element.node );
};jvm.SVGCanvasElement = function(container, width, height){
  this.classPrefix = 'SVG';
  jvm.SVGCanvasElement.parentClass.call(this, 'svg');

  this.defsElement = new jvm.SVGElement('defs');
  this.node.appendChild( this.defsElement.node );

  jvm.AbstractCanvasElement.apply(this, arguments);
}

jvm.inherits(jvm.SVGCanvasElement, jvm.SVGElement);
jvm.mixin(jvm.SVGCanvasElement, jvm.AbstractCanvasElement);

jvm.SVGCanvasElement.prototype.setSize = function(width, height){
  this.width = width;
  this.height = height;
  this.node.setAttribute('width', width);
  this.node.setAttribute('height', height);
};

jvm.SVGCanvasElement.prototype.applyTransformParams = function(scale, transX, transY) {
  this.scale = scale;
  this.transX = transX;
  this.transY = transY;
  this.rootElement.node.setAttribute('transform', 'scale('+scale+') translate('+transX+', '+transY+')');
};jvm.SVGShapeElement = function(name, config, style){
  jvm.SVGShapeElement.parentClass.call(this, name, config);
  jvm.AbstractShapeElement.apply(this, arguments);
};

jvm.inherits(jvm.SVGShapeElement, jvm.SVGElement);
jvm.mixin(jvm.SVGShapeElement, jvm.AbstractShapeElement);

jvm.SVGShapeElement.prototype.applyAttr = function(attr, value){
  var patternEl,
      imageEl,
      that = this;

  if (attr === 'fill' && jvm.isImageUrl(value)) {
    if (!jvm.SVGShapeElement.images[value]) {
      jvm.whenImageLoaded(value).then(function(img){
        imageEl = new jvm.SVGElement('image');
        imageEl.node.setAttributeNS('http://www.w3.org/1999/xlink', 'href', value);
        imageEl.applyAttr('x', '0');
        imageEl.applyAttr('y', '0');
        imageEl.applyAttr('width', img[0].width);
        imageEl.applyAttr('height', img[0].height);

        patternEl = new jvm.SVGElement('pattern');
        patternEl.applyAttr('id', 'image'+jvm.SVGShapeElement.imageCounter);
        patternEl.applyAttr('x', 0);
        patternEl.applyAttr('y', 0);
        patternEl.applyAttr('width', img[0].width / 2);
        patternEl.applyAttr('height', img[0].height / 2);
        patternEl.applyAttr('viewBox', '0 0 '+img[0].width+' '+img[0].height);
        patternEl.applyAttr('patternUnits', 'userSpaceOnUse');
        patternEl.node.appendChild( imageEl.node );

        that.canvas.defsElement.node.appendChild( patternEl.node );

        jvm.SVGShapeElement.images[value] = jvm.SVGShapeElement.imageCounter++;

        that.applyAttr('fill', 'url(#image'+jvm.SVGShapeElement.images[value]+')');
      });
    } else {
      this.applyAttr('fill', 'url(#image'+jvm.SVGShapeElement.images[value]+')');
    }
  } else {
    jvm.SVGShapeElement.parentClass.prototype.applyAttr.apply(this, arguments);
  }
};

jvm.SVGShapeElement.imageCounter = 1;
jvm.SVGShapeElement.images = {};jvm.SVGPathElement = function(config, style){
  jvm.SVGPathElement.parentClass.call(this, 'path', config, style);
  this.node.setAttribute('fill-rule', 'evenodd');
}

jvm.inherits(jvm.SVGPathElement, jvm.SVGShapeElement);jvm.SVGCircleElement = function(config, style){
  jvm.SVGCircleElement.parentClass.call(this, 'circle', config, style);
};

jvm.inherits(jvm.SVGCircleElement, jvm.SVGShapeElement);jvm.SVGImageElement = function(config, style){
  jvm.SVGImageElement.parentClass.call(this, 'image', config, style);
};

jvm.inherits(jvm.SVGImageElement, jvm.SVGShapeElement);

jvm.SVGImageElement.prototype.applyAttr = function(attr, value){
  var that = this;

  if (attr == 'image') {
    jvm.whenImageLoaded(value).then(function(img){
      that.node.setAttributeNS('http://www.w3.org/1999/xlink', 'href', value);
      that.width = img[0].width;
      that.height = img[0].height;
      that.applyAttr('width', that.width);
      that.applyAttr('height', that.height);

      that.applyAttr('x', that.cx - that.width / 2);
      that.applyAttr('y', that.cy - that.height / 2);

      jvm.$(that.node).trigger('imageloaded', [img]);
    });
  } else if(attr == 'cx') {
    this.cx = value;
    if (this.width) {
      this.applyAttr('x', value - this.width / 2);
    }
  } else if(attr == 'cy') {
    this.cy = value;
    if (this.height) {
      this.applyAttr('y', value - this.height / 2);
    }
  } else {
    jvm.SVGImageElement.parentClass.prototype.applyAttr.apply(this, arguments);
  }
};jvm.SVGTextElement = function(config, style){
  jvm.SVGTextElement.parentClass.call(this, 'text', config, style);
}

jvm.inherits(jvm.SVGTextElement, jvm.SVGShapeElement);

jvm.SVGTextElement.prototype.applyAttr = function(attr, value){
  if (attr === 'text') {
    this.node.textContent = value;
  } else {
    jvm.SVGTextElement.parentClass.prototype.applyAttr.apply(this, arguments);
  }
};/**
 * Wrapper for VML element.
 * @constructor
 * @extends jvm.AbstractElement
 * @param {String} name Tag name of the element
 * @param {Object} config Set of parameters to initialize element with
 */

jvm.VMLElement = function(name, config){
  if (!jvm.VMLElement.VMLInitialized) {
    jvm.VMLElement.initializeVML();
  }

  jvm.VMLElement.parentClass.apply(this, arguments);
};

jvm.inherits(jvm.VMLElement, jvm.AbstractElement);

/**
 * Shows if VML was already initialized for the current document or not.
 * @static
 * @private
 * @type {Boolean}
 */
jvm.VMLElement.VMLInitialized = false;

/**
 * Initializes VML handling before creating the first element
 * (adds CSS class and creates namespace). Adds one of two forms
 * of createElement method depending of support by browser.
 * @static
 * @private
 */

 // The following method of VML handling is borrowed from the
 // Raphael library by Dmitry Baranovsky.

jvm.VMLElement.initializeVML = function(){
  try {
    if (!document.namespaces.rvml) {
      document.namespaces.add("rvml","urn:schemas-microsoft-com:vml");
    }
    /**
     * Creates DOM element.
     * @param {String} tagName Name of element
     * @private
     * @returns DOMElement
     */
    jvm.VMLElement.prototype.createElement = function (tagName) {
      return document.createElement('<rvml:' + tagName + ' class="rvml">');
    };
  } catch (e) {
    /**
     * @private
     */
    jvm.VMLElement.prototype.createElement = function (tagName) {
      return document.createElement('<' + tagName + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">');
    };
  }
  document.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)");
  jvm.VMLElement.VMLInitialized = true;
};

/**
 * Returns constructor for element by name prefixed with 'VML'.
 * @param {String} ctr Name of basic constructor to return
 * proper implementation for.
 * @returns Function
 * @private
 */
jvm.VMLElement.prototype.getElementCtr = function( ctr ){
  return jvm['VML'+ctr];
};

/**
 * Adds CSS class for underlying DOM element.
 * @param {String} className Name of CSS class name
 */
jvm.VMLElement.prototype.addClass = function( className ){
  jvm.$(this.node).addClass(className);
};

/**
 * Applies attribute value to the underlying DOM element.
 * @param {String} name Name of attribute
 * @param {Number|String} config Value of attribute to apply
 * @private
 */
jvm.VMLElement.prototype.applyAttr = function( attr, value ){
  this.node[attr] = value;
};

/**
 * Returns boundary box for the element.
 * @returns {Object} Boundary box with numeric fields: x, y, width, height
 * @override
 */
jvm.VMLElement.prototype.getBBox = function(){
  var node = jvm.$(this.node);

  return {
    x: node.position().left / this.canvas.scale,
    y: node.position().top / this.canvas.scale,
    width: node.width() / this.canvas.scale,
    height: node.height() / this.canvas.scale
  };
};jvm.VMLGroupElement = function(){
  jvm.VMLGroupElement.parentClass.call(this, 'group');

  this.node.style.left = '0px';
  this.node.style.top = '0px';
  this.node.coordorigin = "0 0";
};

jvm.inherits(jvm.VMLGroupElement, jvm.VMLElement);

jvm.VMLGroupElement.prototype.add = function(element){
  this.node.appendChild( element.node );
};jvm.VMLCanvasElement = function(container, width, height){
  this.classPrefix = 'VML';
  jvm.VMLCanvasElement.parentClass.call(this, 'group');
  jvm.AbstractCanvasElement.apply(this, arguments);
  this.node.style.position = 'absolute';
};

jvm.inherits(jvm.VMLCanvasElement, jvm.VMLElement);
jvm.mixin(jvm.VMLCanvasElement, jvm.AbstractCanvasElement);

jvm.VMLCanvasElement.prototype.setSize = function(width, height){
  var paths,
      groups,
      i,
      l;

  this.width = width;
  this.height = height;
  this.node.style.width = width + "px";
  this.node.style.height = height + "px";
  this.node.coordsize = width+' '+height;
  this.node.coordorigin = "0 0";
  if (this.rootElement) {
    paths = this.rootElement.node.getElementsByTagName('shape');
    for(i = 0, l = paths.length; i < l; i++) {
      paths[i].coordsize = width+' '+height;
      paths[i].style.width = width+'px';
      paths[i].style.height = height+'px';
    }
    groups = this.node.getElementsByTagName('group');
    for(i = 0, l = groups.length; i < l; i++) {
      groups[i].coordsize = width+' '+height;
      groups[i].style.width = width+'px';
      groups[i].style.height = height+'px';
    }
  }
};

jvm.VMLCanvasElement.prototype.applyTransformParams = function(scale, transX, transY) {
  this.scale = scale;
  this.transX = transX;
  this.transY = transY;
  this.rootElement.node.coordorigin = (this.width-transX-this.width/100)+','+(this.height-transY-this.height/100);
  this.rootElement.node.coordsize = this.width/scale+','+this.height/scale;
};jvm.VMLShapeElement = function(name, config){
  jvm.VMLShapeElement.parentClass.call(this, name, config);

  this.fillElement = new jvm.VMLElement('fill');
  this.strokeElement = new jvm.VMLElement('stroke');
  this.node.appendChild(this.fillElement.node);
  this.node.appendChild(this.strokeElement.node);
  this.node.stroked = false;

  jvm.AbstractShapeElement.apply(this, arguments);
};

jvm.inherits(jvm.VMLShapeElement, jvm.VMLElement);
jvm.mixin(jvm.VMLShapeElement, jvm.AbstractShapeElement);

jvm.VMLShapeElement.prototype.applyAttr = function(attr, value){
  switch (attr) {
    case 'fill':
      this.node.fillcolor = value;
      break;
    case 'fill-opacity':
      this.fillElement.node.opacity = Math.round(value*100)+'%';
      break;
    case 'stroke':
      if (value === 'none') {
        this.node.stroked = false;
      } else {
        this.node.stroked = true;
      }
      this.node.strokecolor = value;
      break;
    case 'stroke-opacity':
      this.strokeElement.node.opacity = Math.round(value*100)+'%';
      break;
    case 'stroke-width':
      if (parseInt(value, 10) === 0) {
        this.node.stroked = false;
      } else {
        this.node.stroked = true;
      }
      this.node.strokeweight = value;
      break;
    case 'd':
      this.node.path = jvm.VMLPathElement.pathSvgToVml(value);
      break;
    default:
      jvm.VMLShapeElement.parentClass.prototype.applyAttr.apply(this, arguments);
  }
};jvm.VMLPathElement = function(config, style){
  var scale = new jvm.VMLElement('skew');

  jvm.VMLPathElement.parentClass.call(this, 'shape', config, style);

  this.node.coordorigin = "0 0";

  scale.node.on = true;
  scale.node.matrix = '0.01,0,0,0.01,0,0';
  scale.node.offset = '0,0';

  this.node.appendChild(scale.node);
};

jvm.inherits(jvm.VMLPathElement, jvm.VMLShapeElement);

jvm.VMLPathElement.prototype.applyAttr = function(attr, value){
  if (attr === 'd') {
    this.node.path = jvm.VMLPathElement.pathSvgToVml(value);
  } else {
    jvm.VMLShapeElement.prototype.applyAttr.call(this, attr, value);
  }
};

jvm.VMLPathElement.pathSvgToVml = function(path) {
  var cx = 0, cy = 0, ctrlx, ctrly;

  path = path.replace(/(-?\d+)e(-?\d+)/g, '0');
  return path.replace(/([MmLlHhVvCcSs])\s*((?:-?\d*(?:\.\d+)?\s*,?\s*)+)/g, function(segment, letter, coords, index){
    coords = coords.replace(/(\d)-/g, '$1,-')
            .replace(/^\s+/g, '')
            .replace(/\s+$/g, '')
            .replace(/\s+/g, ',').split(',');
    if (!coords[0]) coords.shift();
    for (var i=0, l=coords.length; i<l; i++) {
      coords[i] = Math.round(100*coords[i]);
    }
    switch (letter) {
      case 'm':
        cx += coords[0];
        cy += coords[1];
        return 't'+coords.join(',');
      case 'M':
        cx = coords[0];
        cy = coords[1];
        return 'm'+coords.join(',');
      case 'l':
        cx += coords[0];
        cy += coords[1];
        return 'r'+coords.join(',');
      case 'L':
        cx = coords[0];
        cy = coords[1];
        return 'l'+coords.join(',');
      case 'h':
        cx += coords[0];
        return 'r'+coords[0]+',0';
      case 'H':
        cx = coords[0];
        return 'l'+cx+','+cy;
      case 'v':
        cy += coords[0];
        return 'r0,'+coords[0];
      case 'V':
        cy = coords[0];
        return 'l'+cx+','+cy;
      case 'c':
        ctrlx = cx + coords[coords.length-4];
        ctrly = cy + coords[coords.length-3];
        cx += coords[coords.length-2];
        cy += coords[coords.length-1];
        return 'v'+coords.join(',');
      case 'C':
        ctrlx = coords[coords.length-4];
        ctrly = coords[coords.length-3];
        cx = coords[coords.length-2];
        cy = coords[coords.length-1];
        return 'c'+coords.join(',');
      case 's':
        coords.unshift(cy-ctrly);
        coords.unshift(cx-ctrlx);
        ctrlx = cx + coords[coords.length-4];
        ctrly = cy + coords[coords.length-3];
        cx += coords[coords.length-2];
        cy += coords[coords.length-1];
        return 'v'+coords.join(',');
      case 'S':
        coords.unshift(cy+cy-ctrly);
        coords.unshift(cx+cx-ctrlx);
        ctrlx = coords[coords.length-4];
        ctrly = coords[coords.length-3];
        cx = coords[coords.length-2];
        cy = coords[coords.length-1];
        return 'c'+coords.join(',');
    }
    return '';
  }).replace(/z/g, 'e');
};jvm.VMLCircleElement = function(config, style){
  jvm.VMLCircleElement.parentClass.call(this, 'oval', config, style);
};

jvm.inherits(jvm.VMLCircleElement, jvm.VMLShapeElement);

jvm.VMLCircleElement.prototype.applyAttr = function(attr, value){
  switch (attr) {
    case 'r':
      this.node.style.width = value*2+'px';
      this.node.style.height = value*2+'px';
      this.applyAttr('cx', this.get('cx') || 0);
      this.applyAttr('cy', this.get('cy') || 0);
      break;
    case 'cx':
      if (!value) return;
      this.node.style.left = value - (this.get('r') || 0) + 'px';
      break;
    case 'cy':
      if (!value) return;
      this.node.style.top = value - (this.get('r') || 0) + 'px';
      break;
    default:
      jvm.VMLCircleElement.parentClass.prototype.applyAttr.call(this, attr, value);
  }
};/**
 * Class for vector images manipulations.
 * @constructor
 * @param {DOMElement} container to place canvas to
 * @param {Number} width
 * @param {Number} height
 */
jvm.VectorCanvas = function(container, width, height) {
  this.mode = window.SVGAngle ? 'svg' : 'vml';

  if (this.mode == 'svg') {
    this.impl = new jvm.SVGCanvasElement(container, width, height);
  } else {
    this.impl = new jvm.VMLCanvasElement(container, width, height);
  }
  this.impl.mode = this.mode;
  return this.impl;
};jvm.SimpleScale = function(scale){
  this.scale = scale;
};

jvm.SimpleScale.prototype.getValue = function(value){
  return value;
};jvm.OrdinalScale = function(scale){
  this.scale = scale;
};

jvm.OrdinalScale.prototype.getValue = function(value){
  return this.scale[value];
};

jvm.OrdinalScale.prototype.getTicks = function(){
  var ticks = [],
      key;

  for (key in this.scale) {
    ticks.push({
      label: key,
      value: this.scale[key]
    });
  }

  return ticks;
};jvm.NumericScale = function(scale, normalizeFunction, minValue, maxValue) {
  this.scale = [];

  normalizeFunction = normalizeFunction || 'linear';

  if (scale) this.setScale(scale);
  if (normalizeFunction) this.setNormalizeFunction(normalizeFunction);
  if (typeof minValue !== 'undefined' ) this.setMin(minValue);
  if (typeof maxValue !== 'undefined' ) this.setMax(maxValue);
};

jvm.NumericScale.prototype = {
  setMin: function(min) {
    this.clearMinValue = min;
    if (typeof this.normalize === 'function') {
      this.minValue = this.normalize(min);
    } else {
      this.minValue = min;
    }
  },

  setMax: function(max) {
    this.clearMaxValue = max;
    if (typeof this.normalize === 'function') {
      this.maxValue = this.normalize(max);
    } else {
      this.maxValue = max;
    }
  },

  setScale: function(scale) {
    var i;

    this.scale = [];
    for (i = 0; i < scale.length; i++) {
      this.scale[i] = [scale[i]];
    }
  },

  setNormalizeFunction: function(f) {
    if (f === 'polynomial') {
      this.normalize = function(value) {
        return Math.pow(value, 0.2);
      }
    } else if (f === 'linear') {
      delete this.normalize;
    } else {
      this.normalize = f;
    }
    this.setMin(this.clearMinValue);
    this.setMax(this.clearMaxValue);
  },

  getValue: function(value) {
    var lengthes = [],
        fullLength = 0,
        l,
        i = 0,
        c;

    if (typeof this.normalize === 'function') {
      value = this.normalize(value);
    }
    for (i = 0; i < this.scale.length-1; i++) {
      l = this.vectorLength(this.vectorSubtract(this.scale[i+1], this.scale[i]));
      lengthes.push(l);
      fullLength += l;
    }

    c = (this.maxValue - this.minValue) / fullLength;
    for (i=0; i<lengthes.length; i++) {
      lengthes[i] *= c;
    }

    i = 0;
    value -= this.minValue;
    while (value - lengthes[i] >= 0) {
      value -= lengthes[i];
      i++;
    }

    if (i == this.scale.length - 1) {
      value = this.vectorToNum(this.scale[i])
    } else {
      value = (
        this.vectorToNum(
          this.vectorAdd(this.scale[i],
            this.vectorMult(
              this.vectorSubtract(this.scale[i+1], this.scale[i]),
              (value) / (lengthes[i])
            )
          )
        )
      );
    }

    return value;
  },

  vectorToNum: function(vector) {
    var num = 0,
        i;

    for (i = 0; i < vector.length; i++) {
      num += Math.round(vector[i])*Math.pow(256, vector.length-i-1);
    }
    return num;
  },

  vectorSubtract: function(vector1, vector2) {
    var vector = [],
        i;

    for (i = 0; i < vector1.length; i++) {
      vector[i] = vector1[i] - vector2[i];
    }
    return vector;
  },

  vectorAdd: function(vector1, vector2) {
    var vector = [],
        i;

    for (i = 0; i < vector1.length; i++) {
      vector[i] = vector1[i] + vector2[i];
    }
    return vector;
  },

  vectorMult: function(vector, num) {
    var result = [],
        i;

    for (i = 0; i < vector.length; i++) {
      result[i] = vector[i] * num;
    }
    return result;
  },

  vectorLength: function(vector) {
    var result = 0,
        i;
    for (i = 0; i < vector.length; i++) {
      result += vector[i] * vector[i];
    }
    return Math.sqrt(result);
  },

  /* Derived from d3 implementation https://github.com/mbostock/d3/blob/master/src/scale/linear.js#L94 */
  getTicks: function(){
    var m = 5,
        extent = [this.clearMinValue, this.clearMaxValue],
        span = extent[1] - extent[0],
        step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),
        err = m / span * step,
        ticks = [],
        tick,
        v;

    if (err <= .15) step *= 10;
    else if (err <= .35) step *= 5;
    else if (err <= .75) step *= 2;

    extent[0] = Math.floor(extent[0] / step) * step;
    extent[1] = Math.ceil(extent[1] / step) * step;

    tick = extent[0];
    while (tick <= extent[1]) {
      if (tick == extent[0]) {
        v = this.clearMinValue;
      } else if (tick == extent[1]) {
        v = this.clearMaxValue;
      } else {
        v = tick;
      }
      ticks.push({
        label: tick,
        value: this.getValue(v)
      });
      tick += step;
    }

    return ticks;
  }
};
jvm.ColorScale = function(colors, normalizeFunction, minValue, maxValue) {
  jvm.ColorScale.parentClass.apply(this, arguments);
}

jvm.inherits(jvm.ColorScale, jvm.NumericScale);

jvm.ColorScale.prototype.setScale = function(scale) {
  var i;

  for (i = 0; i < scale.length; i++) {
    this.scale[i] = jvm.ColorScale.rgbToArray(scale[i]);
  }
};

jvm.ColorScale.prototype.getValue = function(value) {
  return jvm.ColorScale.numToRgb(jvm.ColorScale.parentClass.prototype.getValue.call(this, value));
};

jvm.ColorScale.arrayToRgb = function(ar) {
  var rgb = '#',
      d,
      i;

  for (i = 0; i < ar.length; i++) {
    d = ar[i].toString(16);
    rgb += d.length == 1 ? '0'+d : d;
  }
  return rgb;
};

jvm.ColorScale.numToRgb = function(num) {
  num = num.toString(16);

  while (num.length < 6) {
    num = '0' + num;
  }

  return '#'+num;
};

jvm.ColorScale.rgbToArray = function(rgb) {
  rgb = rgb.substr(1);
  return [parseInt(rgb.substr(0, 2), 16), parseInt(rgb.substr(2, 2), 16), parseInt(rgb.substr(4, 2), 16)];
};/**
 * Represents map legend.
 * @constructor
 * @param {Object} params Configuration parameters.
 * @param {String} params.cssClass Additional CSS class to apply to legend element.
 * @param {Boolean} params.vertical If <code>true</code> legend will be rendered as vertical.
 * @param {String} params.title Legend title.
 * @param {Function} params.labelRender Method to convert series values to legend labels.
 */
jvm.Legend = function(params) {
  this.params = params || {};
  this.map = this.params.map;
  this.series = this.params.series;
  this.body = jvm.$('<div/>');
  this.body.addClass('jvectormap-legend');
  if (this.params.cssClass) {
    this.body.addClass(this.params.cssClass);
  }

  if (params.vertical) {
    this.map.legendCntVertical.append( this.body );
  } else {
    this.map.legendCntHorizontal.append( this.body );
  }

  this.render();
}

jvm.Legend.prototype.render = function(){
  var ticks = this.series.scale.getTicks(),
      i,
      inner = jvm.$('<div/>').addClass('jvectormap-legend-inner'),
      tick,
      sample,
      label;

  this.body.html('');
  if (this.params.title) {
    this.body.append(
      jvm.$('<div/>').addClass('jvectormap-legend-title').html(this.params.title)
    );
  }
  this.body.append(inner);

  for (i = 0; i < ticks.length; i++) {
    tick = jvm.$('<div/>').addClass('jvectormap-legend-tick');
    sample = jvm.$('<div/>').addClass('jvectormap-legend-tick-sample');

    switch (this.series.params.attribute) {
      case 'fill':
        if (jvm.isImageUrl(ticks[i].value)) {
          sample.css('background', 'url('+ticks[i].value+')');
        } else {
          sample.css('background', ticks[i].value);
        }
        break;
      case 'stroke':
        sample.css('background', ticks[i].value);
        break;
      case 'image':
        sample.css('background', 'url('+ticks[i].value+') no-repeat center center');
        break;
      case 'r':
        jvm.$('<div/>').css({
          'border-radius': ticks[i].value,
          border: this.map.params.markerStyle.initial['stroke-width']+'px '+
                  this.map.params.markerStyle.initial['stroke']+' solid',
          width: ticks[i].value * 2 + 'px',
          height: ticks[i].value * 2 + 'px',
          background: this.map.params.markerStyle.initial['fill']
        }).appendTo(sample);
        break;
    }
    tick.append( sample );
    label = ticks[i].label;
    if (this.params.labelRender) {
      label = this.params.labelRender(label);
    }
    tick.append( jvm.$('<div>'+label+' </div>').addClass('jvectormap-legend-tick-text') );
    inner.append(tick);
  }
  inner.append( jvm.$('<div/>').css('clear', 'both') );
}/**
 * Creates data series.
 * @constructor
 * @param {Object} params Parameters to initialize series with.
 * @param {Array} params.values The data set to visualize.
 * @param {String} params.attribute Numberic or color attribute to use for data visualization. This could be: <code>fill</code>, <code>stroke</code>, <code>fill-opacity</code>, <code>stroke-opacity</code> for markers and regions and <code>r</code> (radius) for markers only.
 * @param {Array} params.scale Values used to map a dimension of data to a visual representation. The first value sets visualization for minimum value from the data set and the last value sets visualization for the maximum value. There also could be intermidiate values. Default value is <code>['#C8EEFF', '#0071A4']</code>
 * @param {Function|String} params.normalizeFunction The function used to map input values to the provided scale. This parameter could be provided as function or one of the strings: <code>'linear'</code> or <code>'polynomial'</code>, while <code>'linear'</code> is used by default. The function provided takes value from the data set as an input and returns corresponding value from the scale.
 * @param {Number} params.min Minimum value of the data set. Could be calculated automatically if not provided.
 * @param {Number} params.min Maximum value of the data set. Could be calculated automatically if not provided.
 */
jvm.DataSeries = function(params, elements, map) {
  var scaleConstructor;

  params = params || {};
  params.attribute = params.attribute || 'fill';

  this.elements = elements;
  this.params = params;
  this.map = map;

  if (params.attributes) {
    this.setAttributes(params.attributes);
  }

  if (jvm.$.isArray(params.scale)) {
    scaleConstructor = (params.attribute === 'fill' || params.attribute === 'stroke') ? jvm.ColorScale : jvm.NumericScale;
    this.scale = new scaleConstructor(params.scale, params.normalizeFunction, params.min, params.max);
  } else if (params.scale) {
    this.scale = new jvm.OrdinalScale(params.scale);
  } else {
    this.scale = new jvm.SimpleScale(params.scale);
  }

  this.values = params.values || {};
  this.setValues(this.values);

  if (this.params.legend) {
    this.legend = new jvm.Legend($.extend({
      map: this.map,
      series: this
    }, this.params.legend))
  }
};

jvm.DataSeries.prototype = {
  setAttributes: function(key, attr){
    var attrs = key,
        code;

    if (typeof key == 'string') {
      if (this.elements[key]) {
        this.elements[key].setStyle(this.params.attribute, attr);
      }
    } else {
      for (code in attrs) {
        if (this.elements[code]) {
          this.elements[code].element.setStyle(this.params.attribute, attrs[code]);
        }
      }
    }
  },

  /**
   * Set values for the data set.
   * @param {Object} values Object which maps codes of regions or markers to values.
   */
  setValues: function(values) {
    var max = -Number.MAX_VALUE,
        min = Number.MAX_VALUE,
        val,
        cc,
        attrs = {};

    if (!(this.scale instanceof jvm.OrdinalScale) && !(this.scale instanceof jvm.SimpleScale)) {
      // we have a color scale as an array
      if (typeof this.params.min === 'undefined' || typeof this.params.max === 'undefined') {
        // min and/or max are not defined, so calculate them
        for (cc in values) {
          val = parseFloat(values[cc]);
          if (val > max) max = val;
          if (val < min) min = val;
        }
      }

      if (typeof this.params.min === 'undefined') {
        this.scale.setMin(min);
        this.params.min = min;
      } else {
        this.scale.setMin(this.params.min);
      }

      if (typeof this.params.max === 'undefined') {
        this.scale.setMax(max);
        this.params.max = max;
      } else {
        this.scale.setMax(this.params.max);
      }

      for (cc in values) {
        if (cc != 'indexOf') {
          val = parseFloat(values[cc]);
          if (!isNaN(val)) {
            attrs[cc] = this.scale.getValue(val);
          } else {
            attrs[cc] = this.elements[cc].element.style.initial[this.params.attribute];
          }
        }
      }
    } else {
      for (cc in values) {
        if (values[cc]) {
          attrs[cc] = this.scale.getValue(values[cc]);
        } else {
          attrs[cc] = this.elements[cc].element.style.initial[this.params.attribute];
        }
      }
    }

    this.setAttributes(attrs);
    jvm.$.extend(this.values, values);
  },

  clear: function(){
    var key,
        attrs = {};

    for (key in this.values) {
      if (this.elements[key]) {
        attrs[key] = this.elements[key].element.shape.style.initial[this.params.attribute];
      }
    }
    this.setAttributes(attrs);
    this.values = {};
  },

  /**
   * Set scale of the data series.
   * @param {Array} scale Values representing scale.
   */
  setScale: function(scale) {
    this.scale.setScale(scale);
    if (this.values) {
      this.setValues(this.values);
    }
  },

  /**
   * Set normalize function of the data series.
   * @param {Function|String} normilizeFunction.
   */
  setNormalizeFunction: function(f) {
    this.scale.setNormalizeFunction(f);
    if (this.values) {
      this.setValues(this.values);
    }
  }
};
/**
 * Contains methods for transforming point on sphere to
 * Cartesian coordinates using various projections.
 * @class
 */
jvm.Proj = {
  degRad: 180 / Math.PI,
  radDeg: Math.PI / 180,
  radius: 6381372,

  sgn: function(n){
    if (n > 0) {
      return 1;
    } else if (n < 0) {
      return -1;
    } else {
      return n;
    }
  },

  /**
   * Converts point on sphere to the Cartesian coordinates using Miller projection
   * @param {Number} lat Latitude in degrees
   * @param {Number} lng Longitude in degrees
   * @param {Number} c Central meridian in degrees
   */
  mill: function(lat, lng, c){
    return {
      x: this.radius * (lng - c) * this.radDeg,
      y: - this.radius * Math.log(Math.tan((45 + 0.4 * lat) * this.radDeg)) / 0.8
    };
  },

  /**
   * Inverse function of mill()
   * Converts Cartesian coordinates to point on sphere using Miller projection
   * @param {Number} x X of point in Cartesian system as integer
   * @param {Number} y Y of point in Cartesian system as integer
   * @param {Number} c Central meridian in degrees
   */
  mill_inv: function(x, y, c){
    return {
      lat: (2.5 * Math.atan(Math.exp(0.8 * y / this.radius)) - 5 * Math.PI / 8) * this.degRad,
      lng: (c * this.radDeg + x / this.radius) * this.degRad
    };
  },

  /**
   * Converts point on sphere to the Cartesian coordinates using Mercator projection
   * @param {Number} lat Latitude in degrees
   * @param {Number} lng Longitude in degrees
   * @param {Number} c Central meridian in degrees
   */
  merc: function(lat, lng, c){
    return {
      x: this.radius * (lng - c) * this.radDeg,
      y: - this.radius * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360))
    };
  },

  /**
   * Inverse function of merc()
   * Converts Cartesian coordinates to point on sphere using Mercator projection
   * @param {Number} x X of point in Cartesian system as integer
   * @param {Number} y Y of point in Cartesian system as integer
   * @param {Number} c Central meridian in degrees
   */
  merc_inv: function(x, y, c){
    return {
      lat: (2 * Math.atan(Math.exp(y / this.radius)) - Math.PI / 2) * this.degRad,
      lng: (c * this.radDeg + x / this.radius) * this.degRad
    };
  },

  /**
   * Converts point on sphere to the Cartesian coordinates using Albers Equal-Area Conic
   * projection
   * @see <a href="http://mathworld.wolfram.com/AlbersEqual-AreaConicProjection.html">Albers Equal-Area Conic projection</a>
   * @param {Number} lat Latitude in degrees
   * @param {Number} lng Longitude in degrees
   * @param {Number} c Central meridian in degrees
   */
  aea: function(lat, lng, c){
    var fi0 = 0,
        lambda0 = c * this.radDeg,
        fi1 = 29.5 * this.radDeg,
        fi2 = 45.5 * this.radDeg,
        fi = lat * this.radDeg,
        lambda = lng * this.radDeg,
        n = (Math.sin(fi1)+Math.sin(fi2)) / 2,
        C = Math.cos(fi1)*Math.cos(fi1)+2*n*Math.sin(fi1),
        theta = n*(lambda-lambda0),
        ro = Math.sqrt(C-2*n*Math.sin(fi))/n,
        ro0 = Math.sqrt(C-2*n*Math.sin(fi0))/n;

    return {
      x: ro * Math.sin(theta) * this.radius,
      y: - (ro0 - ro * Math.cos(theta)) * this.radius
    };
  },

  /**
   * Converts Cartesian coordinates to the point on sphere using Albers Equal-Area Conic
   * projection
   * @see <a href="http://mathworld.wolfram.com/AlbersEqual-AreaConicProjection.html">Albers Equal-Area Conic projection</a>
   * @param {Number} x X of point in Cartesian system as integer
   * @param {Number} y Y of point in Cartesian system as integer
   * @param {Number} c Central meridian in degrees
   */
  aea_inv: function(xCoord, yCoord, c){
    var x = xCoord / this.radius,
        y = yCoord / this.radius,
        fi0 = 0,
        lambda0 = c * this.radDeg,
        fi1 = 29.5 * this.radDeg,
        fi2 = 45.5 * this.radDeg,
        n = (Math.sin(fi1)+Math.sin(fi2)) / 2,
        C = Math.cos(fi1)*Math.cos(fi1)+2*n*Math.sin(fi1),
        ro0 = Math.sqrt(C-2*n*Math.sin(fi0))/n,
        ro = Math.sqrt(x*x+(ro0-y)*(ro0-y)),
        theta = Math.atan( x / (ro0 - y) );

    return {
      lat: (Math.asin((C - ro * ro * n * n) / (2 * n))) * this.degRad,
      lng: (lambda0 + theta / n) * this.degRad
    };
  },

  /**
   * Converts point on sphere to the Cartesian coordinates using Lambert conformal
   * conic projection
   * @see <a href="http://mathworld.wolfram.com/LambertConformalConicProjection.html">Lambert Conformal Conic Projection</a>
   * @param {Number} lat Latitude in degrees
   * @param {Number} lng Longitude in degrees
   * @param {Number} c Central meridian in degrees
   */
  lcc: function(lat, lng, c){
    var fi0 = 0,
        lambda0 = c * this.radDeg,
        lambda = lng * this.radDeg,
        fi1 = 33 * this.radDeg,
        fi2 = 45 * this.radDeg,
        fi = lat * this.radDeg,
        n = Math.log( Math.cos(fi1) * (1 / Math.cos(fi2)) ) / Math.log( Math.tan( Math.PI / 4 + fi2 / 2) * (1 / Math.tan( Math.PI / 4 + fi1 / 2) ) ),
        F = ( Math.cos(fi1) * Math.pow( Math.tan( Math.PI / 4 + fi1 / 2 ), n ) ) / n,
        ro = F * Math.pow( 1 / Math.tan( Math.PI / 4 + fi / 2 ), n ),
        ro0 = F * Math.pow( 1 / Math.tan( Math.PI / 4 + fi0 / 2 ), n );

    return {
      x: ro * Math.sin( n * (lambda - lambda0) ) * this.radius,
      y: - (ro0 - ro * Math.cos( n * (lambda - lambda0) ) ) * this.radius
    };
  },

  /**
   * Converts Cartesian coordinates to the point on sphere using Lambert conformal conic
   * projection
   * @see <a href="http://mathworld.wolfram.com/LambertConformalConicProjection.html">Lambert Conformal Conic Projection</a>
   * @param {Number} x X of point in Cartesian system as integer
   * @param {Number} y Y of point in Cartesian system as integer
   * @param {Number} c Central meridian in degrees
   */
  lcc_inv: function(xCoord, yCoord, c){
    var x = xCoord / this.radius,
        y = yCoord / this.radius,
        fi0 = 0,
        lambda0 = c * this.radDeg,
        fi1 = 33 * this.radDeg,
        fi2 = 45 * this.radDeg,
        n = Math.log( Math.cos(fi1) * (1 / Math.cos(fi2)) ) / Math.log( Math.tan( Math.PI / 4 + fi2 / 2) * (1 / Math.tan( Math.PI / 4 + fi1 / 2) ) ),
        F = ( Math.cos(fi1) * Math.pow( Math.tan( Math.PI / 4 + fi1 / 2 ), n ) ) / n,
        ro0 = F * Math.pow( 1 / Math.tan( Math.PI / 4 + fi0 / 2 ), n ),
        ro = this.sgn(n) * Math.sqrt(x*x+(ro0-y)*(ro0-y)),
        theta = Math.atan( x / (ro0 - y) );

    return {
      lat: (2 * Math.atan(Math.pow(F/ro, 1/n)) - Math.PI / 2) * this.degRad,
      lng: (lambda0 + theta / n) * this.degRad
    };
  }
};jvm.MapObject = function(config){};

jvm.MapObject.prototype.getLabelText = function(key){
  var text;

  if (this.config.label) {
    if (typeof this.config.label.render === 'function') {
      text = this.config.label.render(key);
    } else {
      text = key;
    }
  } else {
    text = null;
  }
  return text;
}

jvm.MapObject.prototype.getLabelOffsets = function(key){
  var offsets;

  if (this.config.label) {
    if (typeof this.config.label.offsets === 'function') {
      offsets = this.config.label.offsets(key);
    } else if (typeof this.config.label.offsets === 'object') {
      offsets = this.config.label.offsets[key];
    }
  }
  return offsets || [0, 0];
}

/**
 * Set hovered state to the element. Hovered state means mouse cursor is over element. Styles will be updates respectively.
 * @param {Boolean} isHovered <code>true</code> to make element hovered, <code>false</code> otherwise.
 */
jvm.MapObject.prototype.setHovered = function(isHovered){
  if (this.isHovered !== isHovered) {
    this.isHovered = isHovered;
    this.shape.isHovered = isHovered;
    this.shape.updateStyle();
    if (this.label) {
      this.label.isHovered = isHovered;
      this.label.updateStyle();
    }
  }
};

/**
 * Set selected state to the element. Styles will be updates respectively.
 * @param {Boolean} isSelected <code>true</code> to make element selected, <code>false</code> otherwise.
 */
jvm.MapObject.prototype.setSelected = function(isSelected){
  if (this.isSelected !== isSelected) {
    this.isSelected = isSelected;
    this.shape.isSelected = isSelected;
    this.shape.updateStyle();
    if (this.label) {
      this.label.isSelected = isSelected;
      this.label.updateStyle();
    }
    jvm.$(this.shape).trigger('selected', [isSelected]);
  }
};

jvm.MapObject.prototype.setStyle = function(){
	this.shape.setStyle.apply(this.shape, arguments);
};

jvm.MapObject.prototype.remove = function(){
  this.shape.remove();
  if (this.label) {
    this.label.remove();
  }
};jvm.Region = function(config){
  var bbox,
      text,
      offsets,
      labelDx,
      labelDy;

  this.config = config;
  this.map = this.config.map;

  this.shape = config.canvas.addPath({
    d: config.path,
    'data-code': config.code
  }, config.style, config.canvas.rootElement);
  this.shape.addClass('jvectormap-region jvectormap-element');

  bbox = this.shape.getBBox();

  text = this.getLabelText(config.code);
  if (this.config.label && text) {
    offsets = this.getLabelOffsets(config.code);
    this.labelX = bbox.x + bbox.width / 2 + offsets[0];
    this.labelY = bbox.y + bbox.height / 2 + offsets[1];
    this.label = config.canvas.addText({
      text: text,
      'text-anchor': 'middle',
      'alignment-baseline': 'central',
      x: this.labelX,
      y: this.labelY,
      'data-code': config.code
    }, config.labelStyle, config.labelsGroup);
    this.label.addClass('jvectormap-region jvectormap-element');
  }
};

jvm.inherits(jvm.Region, jvm.MapObject);

jvm.Region.prototype.updateLabelPosition = function(){
  if (this.label) {
    this.label.set({
      x: this.labelX * this.map.scale + this.map.transX * this.map.scale,
      y: this.labelY * this.map.scale + this.map.transY * this.map.scale
    });
  }
};jvm.Marker = function(config){
  var text,
      offsets;

  this.config = config;
  this.map = this.config.map;

  this.isImage = !!this.config.style.initial.image;
  this.createShape();

  text = this.getLabelText(config.index);
  if (this.config.label && text) {
    this.offsets = this.getLabelOffsets(config.index);
    this.labelX = config.cx / this.map.scale - this.map.transX;
    this.labelY = config.cy / this.map.scale - this.map.transY;
    this.label = config.canvas.addText({
      text: text,
      'data-index': config.index,
      dy: "0.6ex",
      x: this.labelX,
      y: this.labelY
    }, config.labelStyle, config.labelsGroup);

    this.label.addClass('jvectormap-marker jvectormap-element');
  }
};

jvm.inherits(jvm.Marker, jvm.MapObject);

jvm.Marker.prototype.createShape = function(){
  var that = this;

  if (this.shape) {
    this.shape.remove();
  }
  this.shape = this.config.canvas[this.isImage ? 'addImage' : 'addCircle']({
    "data-index": this.config.index,
    cx: this.config.cx,
    cy: this.config.cy
  }, this.config.style, this.config.group);

  this.shape.addClass('jvectormap-marker jvectormap-element');

  if (this.isImage) {
    jvm.$(this.shape.node).on('imageloaded', function(){
      that.updateLabelPosition();
    });
  }
};

jvm.Marker.prototype.updateLabelPosition = function(){
  if (this.label) {
    this.label.set({
      x: this.labelX * this.map.scale + this.offsets[0] +
         this.map.transX * this.map.scale + 5 + (this.isImage ? (this.shape.width || 0) / 2 : this.shape.properties.r),
      y: this.labelY * this.map.scale + this.map.transY * this.map.scale + this.offsets[1]
    });
  }
};

jvm.Marker.prototype.setStyle = function(property, value){
  var isImage;

  jvm.Marker.parentClass.prototype.setStyle.apply(this, arguments);

  if (property === 'r') {
    this.updateLabelPosition();
  }

  isImage = !!this.shape.get('image');
  if (isImage != this.isImage) {
    this.isImage = isImage;
    this.config.style = jvm.$.extend(true, {}, this.shape.style);
    this.createShape();
  }
};/**
 * Creates map, draws paths, binds events.
 * @constructor
 * @param {Object} params Parameters to initialize map with.
 * @param {String} params.map Name of the map in the format <code>territory_proj_lang</code> where <code>territory</code> is a unique code or name of the territory which the map represents (ISO 3166 standard is used where possible), <code>proj</code> is a name of projection used to generate representation of the map on the plane (projections are named according to the conventions of proj4 utility) and <code>lang</code> is a code of the language, used for the names of regions.
 * @param {String} params.backgroundColor Background color of the map in CSS format.
 * @param {Boolean} params.zoomOnScroll When set to true map could be zoomed using mouse scroll. Default value is <code>true</code>.
 * @param {Boolean} params.zoomOnScrollSpeed Mouse scroll speed. Number from 1 to 10. Default value is <code>3</code>.
 * @param {Boolean} params.panOnDrag When set to true, the map pans when being dragged. Default value is <code>true</code>.
 * @param {Number} params.zoomMax Indicates the maximum zoom ratio which could be reached zooming the map. Default value is <code>8</code>.
 * @param {Number} params.zoomMin Indicates the minimum zoom ratio which could be reached zooming the map. Default value is <code>1</code>.
 * @param {Number} params.zoomStep Indicates the multiplier used to zoom map with +/- buttons. Default value is <code>1.6</code>.
 * @param {Boolean} params.zoomAnimate Indicates whether or not to animate changing of map zoom with zoom buttons.
 * @param {Boolean} params.regionsSelectable When set to true regions of the map could be selected. Default value is <code>false</code>.
 * @param {Boolean} params.regionsSelectableOne Allow only one region to be selected at the moment. Default value is <code>false</code>.
 * @param {Boolean} params.markersSelectable When set to true markers on the map could be selected. Default value is <code>false</code>.
 * @param {Boolean} params.markersSelectableOne Allow only one marker to be selected at the moment. Default value is <code>false</code>.
 * @param {Object} params.regionStyle Set the styles for the map's regions. Each region or marker has four states: <code>initial</code> (default state), <code>hover</code> (when the mouse cursor is over the region or marker), <code>selected</code> (when region or marker is selected), <code>selectedHover</code> (when the mouse cursor is over the region or marker and it's selected simultaneously). Styles could be set for each of this states. Default value for that parameter is:
<pre>{
  initial: {
    fill: 'white',
    "fill-opacity": 1,
    stroke: 'none',
    "stroke-width": 0,
    "stroke-opacity": 1
  },
  hover: {
    "fill-opacity": 0.8,
    cursor: 'pointer'
  },
  selected: {
    fill: 'yellow'
  },
  selectedHover: {
  }
}</pre>
* @param {Object} params.regionLabelStyle Set the styles for the regions' labels. Each region or marker has four states: <code>initial</code> (default state), <code>hover</code> (when the mouse cursor is over the region or marker), <code>selected</code> (when region or marker is selected), <code>selectedHover</code> (when the mouse cursor is over the region or marker and it's selected simultaneously). Styles could be set for each of this states. Default value for that parameter is:
<pre>{
  initial: {
    'font-family': 'Verdana',
    'font-size': '12',
    'font-weight': 'bold',
    cursor: 'default',
    fill: 'black'
  },
  hover: {
    cursor: 'pointer'
  }
}</pre>
 * @param {Object} params.markerStyle Set the styles for the map's markers. Any parameter suitable for <code>regionStyle</code> could be used as well as numeric parameter <code>r</code> to set the marker's radius. Default value for that parameter is:
<pre>{
  initial: {
    fill: 'grey',
    stroke: '#505050',
    "fill-opacity": 1,
    "stroke-width": 1,
    "stroke-opacity": 1,
    r: 5
  },
  hover: {
    stroke: 'black',
    "stroke-width": 2,
    cursor: 'pointer'
  },
  selected: {
    fill: 'blue'
  },
  selectedHover: {
  }
}</pre>
 * @param {Object} params.markerLabelStyle Set the styles for the markers' labels. Default value for that parameter is:
<pre>{
  initial: {
    'font-family': 'Verdana',
    'font-size': '12',
    'font-weight': 'bold',
    cursor: 'default',
    fill: 'black'
  },
  hover: {
    cursor: 'pointer'
  }
}</pre>
 * @param {Object|Array} params.markers Set of markers to add to the map during initialization. In case of array is provided, codes of markers will be set as string representations of array indexes. Each marker is represented by <code>latLng</code> (array of two numeric values), <code>name</code> (string which will be show on marker's tip) and any marker styles.
 * @param {Object} params.series Object with two keys: <code>markers</code> and <code>regions</code>. Each of which is an array of series configs to be applied to the respective map elements. See <a href="jvm.DataSeries.html">DataSeries</a> description for a list of parameters available.
 * @param {Object|String} params.focusOn This parameter sets the initial position and scale of the map viewport. See <code>setFocus</code> docuemntation for possible parameters.
 * @param {Object} params.labels Defines parameters for rendering static labels. Object could contain two keys: <code>regions</code> and <code>markers</code>. Each key value defines configuration object with the following possible options:
<ul>
  <li><code>render {Function}</code> - defines method for converting region code or marker index to actual label value.</li>
  <li><code>offsets {Object|Function}</code> - provides method or object which could be used to define label offset by region code or marker index.</li>
</ul>
<b>Plase note: static labels feature is not supported in Internet Explorer 8 and below.</b>
 * @param {Array|Object|String} params.selectedRegions Set initially selected regions.
 * @param {Array|Object|String} params.selectedMarkers Set initially selected markers.
 * @param {Function} params.onRegionTipShow <code>(Event e, Object tip, String code)</code> Will be called right before the region tip is going to be shown.
 * @param {Function} params.onRegionOver <code>(Event e, String code)</code> Will be called on region mouse over event.
 * @param {Function} params.onRegionOut <code>(Event e, String code)</code> Will be called on region mouse out event.
 * @param {Function} params.onRegionClick <code>(Event e, String code)</code> Will be called on region click event.
 * @param {Function} params.onRegionSelected <code>(Event e, String code, Boolean isSelected, Array selectedRegions)</code> Will be called when region is (de)selected. <code>isSelected</code> parameter of the callback indicates whether region is selected or not. <code>selectedRegions</code> contains codes of all currently selected regions.
 * @param {Function} params.onMarkerTipShow <code>(Event e, Object tip, String code)</code> Will be called right before the marker tip is going to be shown.
 * @param {Function} params.onMarkerOver <code>(Event e, String code)</code> Will be called on marker mouse over event.
 * @param {Function} params.onMarkerOut <code>(Event e, String code)</code> Will be called on marker mouse out event.
 * @param {Function} params.onMarkerClick <code>(Event e, String code)</code> Will be called on marker click event.
 * @param {Function} params.onMarkerSelected <code>(Event e, String code, Boolean isSelected, Array selectedMarkers)</code> Will be called when marker is (de)selected. <code>isSelected</code> parameter of the callback indicates whether marker is selected or not. <code>selectedMarkers</code> contains codes of all currently selected markers.
 * @param {Function} params.onViewportChange <code>(Event e, Number scale)</code> Triggered when the map's viewport is changed (map was panned or zoomed).
 */
jvm.Map = function(params) {
  var map = this,
      e;

  this.params = jvm.$.extend(true, {}, jvm.Map.defaultParams, params);

  if (!jvm.Map.maps[this.params.map]) {
    throw new Error('Attempt to use map which was not loaded: '+this.params.map);
  }

  this.mapData = jvm.Map.maps[this.params.map];
  this.markers = {};
  this.regions = {};
  this.regionsColors = {};
  this.regionsData = {};

  this.container = jvm.$('<div>').addClass('jvectormap-container');
  if (this.params.container) {
    this.params.container.append( this.container );
  }
  this.container.data('mapObject', this);

  this.defaultWidth = this.mapData.width;
  this.defaultHeight = this.mapData.height;

  this.setBackgroundColor(this.params.backgroundColor);

  this.onResize = function(){
    map.updateSize();
  }
  jvm.$(window).resize(this.onResize);

  for (e in jvm.Map.apiEvents) {
    if (this.params[e]) {
      this.container.bind(jvm.Map.apiEvents[e]+'.jvectormap', this.params[e]);
    }
  }

  this.canvas = new jvm.VectorCanvas(this.container[0], this.width, this.height);

  if ( ('ontouchstart' in window) || (window.DocumentTouch && document instanceof DocumentTouch) ) {
    if (this.params.bindTouchEvents) {
      this.bindContainerTouchEvents();
    }
  }
  this.bindContainerEvents();
  this.bindElementEvents();
  this.createTip();
  if (this.params.zoomButtons) {
    this.bindZoomButtons();
  }

  this.createRegions();
  this.createMarkers(this.params.markers || {});

  this.updateSize();

  if (this.params.focusOn) {
    if (typeof this.params.focusOn === 'string') {
      this.params.focusOn = {region: this.params.focusOn};
    } else if (jvm.$.isArray(this.params.focusOn)) {
      this.params.focusOn = {regions: this.params.focusOn};
    }
    this.setFocus(this.params.focusOn);
  }

  if (this.params.selectedRegions) {
    this.setSelectedRegions(this.params.selectedRegions);
  }
  if (this.params.selectedMarkers) {
    this.setSelectedMarkers(this.params.selectedMarkers);
  }

  this.legendCntHorizontal = jvm.$('<div/>').addClass('jvectormap-legend-cnt jvectormap-legend-cnt-h');
  this.legendCntVertical = jvm.$('<div/>').addClass('jvectormap-legend-cnt jvectormap-legend-cnt-v');
  this.container.append(this.legendCntHorizontal);
  this.container.append(this.legendCntVertical);

  if (this.params.series) {
    this.createSeries();
  }
};

jvm.Map.prototype = {
  transX: 0,
  transY: 0,
  scale: 1,
  baseTransX: 0,
  baseTransY: 0,
  baseScale: 1,

  width: 0,
  height: 0,

  /**
   * Set background color of the map.
   * @param {String} backgroundColor Background color in CSS format.
   */
  setBackgroundColor: function(backgroundColor) {
    this.container.css('background-color', backgroundColor);
  },

  resize: function() {
    var curBaseScale = this.baseScale;
    if (this.width / this.height > this.defaultWidth / this.defaultHeight) {
      this.baseScale = this.height / this.defaultHeight;
      this.baseTransX = Math.abs(this.width - this.defaultWidth * this.baseScale) / (2 * this.baseScale);
    } else {
      this.baseScale = this.width / this.defaultWidth;
      this.baseTransY = Math.abs(this.height - this.defaultHeight * this.baseScale) / (2 * this.baseScale);
    }
    this.scale *= this.baseScale / curBaseScale;
    this.transX *= this.baseScale / curBaseScale;
    this.transY *= this.baseScale / curBaseScale;
  },

  /**
   * Synchronize the size of the map with the size of the container. Suitable in situations where the size of the container is changed programmatically or container is shown after it became visible.
   */
  updateSize: function(){
    this.width = this.container.width();
    this.height = this.container.height();
    this.resize();
    this.canvas.setSize(this.width, this.height);
    this.applyTransform();
  },

  /**
   * Reset all the series and show the map with the initial zoom.
   */
  reset: function() {
    var key,
        i;

    for (key in this.series) {
      for (i = 0; i < this.series[key].length; i++) {
        this.series[key][i].clear();
      }
    }
    this.scale = this.baseScale;
    this.transX = this.baseTransX;
    this.transY = this.baseTransY;
    this.applyTransform();
  },

  applyTransform: function() {
    var maxTransX,
        maxTransY,
        minTransX,
        minTransY;

    if (this.defaultWidth * this.scale <= this.width) {
      maxTransX = (this.width - this.defaultWidth * this.scale) / (2 * this.scale);
      minTransX = (this.width - this.defaultWidth * this.scale) / (2 * this.scale);
    } else {
      maxTransX = 0;
      minTransX = (this.width - this.defaultWidth * this.scale) / this.scale;
    }

    if (this.defaultHeight * this.scale <= this.height) {
      maxTransY = (this.height - this.defaultHeight * this.scale) / (2 * this.scale);
      minTransY = (this.height - this.defaultHeight * this.scale) / (2 * this.scale);
    } else {
      maxTransY = 0;
      minTransY = (this.height - this.defaultHeight * this.scale) / this.scale;
    }

    if (this.transY > maxTransY) {
      this.transY = maxTransY;
    } else if (this.transY < minTransY) {
      this.transY = minTransY;
    }
    if (this.transX > maxTransX) {
      this.transX = maxTransX;
    } else if (this.transX < minTransX) {
      this.transX = minTransX;
    }

    this.canvas.applyTransformParams(this.scale, this.transX, this.transY);

    if (this.markers) {
      this.repositionMarkers();
    }

    this.repositionLabels();

    this.container.trigger('viewportChange', [this.scale/this.baseScale, this.transX, this.transY]);
  },

  bindContainerEvents: function(){
    var mouseDown = false,
        oldPageX,
        oldPageY,
        map = this;

    if (this.params.panOnDrag) {
      this.container.mousemove(function(e){
        if (mouseDown) {
          map.transX -= (oldPageX - e.pageX) / map.scale;
          map.transY -= (oldPageY - e.pageY) / map.scale;

          map.applyTransform();

          oldPageX = e.pageX;
          oldPageY = e.pageY;
        }
        return false;
      }).mousedown(function(e){
        mouseDown = true;
        oldPageX = e.pageX;
        oldPageY = e.pageY;
        return false;
      });

      this.onContainerMouseUp = function(){
        mouseDown = false;
      };
      jvm.$('body').mouseup(this.onContainerMouseUp);
    }

    if (this.params.zoomOnScroll) {
      this.container.mousewheel(function(event, delta, deltaX, deltaY) {
        var offset = jvm.$(map.container).offset(),
            centerX = event.pageX - offset.left,
            centerY = event.pageY - offset.top,
            zoomStep = Math.pow(1 + map.params.zoomOnScrollSpeed / 1000, event.deltaFactor * event.deltaY);

        map.tip.hide();

        map.setScale(map.scale * zoomStep, centerX, centerY);
        event.preventDefault();
      });
    }
  },

  bindContainerTouchEvents: function(){
    var touchStartScale,
        touchStartDistance,
        map = this,
        touchX,
        touchY,
        centerTouchX,
        centerTouchY,
        lastTouchesLength,
        handleTouchEvent = function(e){
          var touches = e.originalEvent.touches,
              offset,
              scale,
              transXOld,
              transYOld;

          if (e.type == 'touchstart') {
            lastTouchesLength = 0;
          }

          if (touches.length == 1) {
            if (lastTouchesLength == 1) {
              transXOld = map.transX;
              transYOld = map.transY;
              map.transX -= (touchX - touches[0].pageX) / map.scale;
              map.transY -= (touchY - touches[0].pageY) / map.scale;
              map.applyTransform();
              map.tip.hide();
              if (transXOld != map.transX || transYOld != map.transY) {
                e.preventDefault();
              }
            }
            touchX = touches[0].pageX;
            touchY = touches[0].pageY;
          } else if (touches.length == 2) {
            if (lastTouchesLength == 2) {
              scale = Math.sqrt(
                Math.pow(touches[0].pageX - touches[1].pageX, 2) +
                Math.pow(touches[0].pageY - touches[1].pageY, 2)
              ) / touchStartDistance;
              map.setScale(
                touchStartScale * scale,
                centerTouchX,
                centerTouchY
              )
              map.tip.hide();
              e.preventDefault();
            } else {
              offset = jvm.$(map.container).offset();
              if (touches[0].pageX > touches[1].pageX) {
                centerTouchX = touches[1].pageX + (touches[0].pageX - touches[1].pageX) / 2;
              } else {
                centerTouchX = touches[0].pageX + (touches[1].pageX - touches[0].pageX) / 2;
              }
              if (touches[0].pageY > touches[1].pageY) {
                centerTouchY = touches[1].pageY + (touches[0].pageY - touches[1].pageY) / 2;
              } else {
                centerTouchY = touches[0].pageY + (touches[1].pageY - touches[0].pageY) / 2;
              }
              centerTouchX -= offset.left;
              centerTouchY -= offset.top;
              touchStartScale = map.scale;
              touchStartDistance = Math.sqrt(
                Math.pow(touches[0].pageX - touches[1].pageX, 2) +
                Math.pow(touches[0].pageY - touches[1].pageY, 2)
              );
            }
          }

          lastTouchesLength = touches.length;
        };

    jvm.$(this.container).bind('touchstart', handleTouchEvent);
    jvm.$(this.container).bind('touchmove', handleTouchEvent);
  },

  bindElementEvents: function(){
    var map = this,
        mouseMoved;

    this.container.mousemove(function(){
      mouseMoved = true;
    });

    /* Can not use common class selectors here because of the bug in jQuery
       SVG handling, use with caution. */
    this.container.delegate("[class~='jvectormap-element']", 'mouseover mouseout', function(e){
      var baseVal = jvm.$(this).attr('class').baseVal || jvm.$(this).attr('class'),
          type = baseVal.indexOf('jvectormap-region') === -1 ? 'marker' : 'region',
          code = type == 'region' ? jvm.$(this).attr('data-code') : jvm.$(this).attr('data-index'),
          element = type == 'region' ? map.regions[code].element : map.markers[code].element,
          tipText = type == 'region' ? map.mapData.paths[code].name : (map.markers[code].config.name || ''),
          tipShowEvent = jvm.$.Event(type+'TipShow.jvectormap'),
          overEvent = jvm.$.Event(type+'Over.jvectormap');

      if (e.type == 'mouseover') {
        map.container.trigger(overEvent, [code]);
        if (!overEvent.isDefaultPrevented()) {
          element.setHovered(true);
        }

        map.tip.text(tipText);
        map.container.trigger(tipShowEvent, [map.tip, code]);
        if (!tipShowEvent.isDefaultPrevented()) {
          map.tip.show();
          map.tipWidth = map.tip.width();
          map.tipHeight = map.tip.height();
        }
      } else {
        element.setHovered(false);
        map.tip.hide();
        map.container.trigger(type+'Out.jvectormap', [code]);
      }
    });

    /* Can not use common class selectors here because of the bug in jQuery
       SVG handling, use with caution. */
    this.container.delegate("[class~='jvectormap-element']", 'mousedown', function(){
      mouseMoved = false;
    });

    /* Can not use common class selectors here because of the bug in jQuery
       SVG handling, use with caution. */
    this.container.delegate("[class~='jvectormap-element']", 'mouseup', function(){
      var baseVal = jvm.$(this).attr('class').baseVal ? jvm.$(this).attr('class').baseVal : jvm.$(this).attr('class'),
          type = baseVal.indexOf('jvectormap-region') === -1 ? 'marker' : 'region',
          code = type == 'region' ? jvm.$(this).attr('data-code') : jvm.$(this).attr('data-index'),
          clickEvent = jvm.$.Event(type+'Click.jvectormap'),
          element = type == 'region' ? map.regions[code].element : map.markers[code].element;

      if (!mouseMoved) {
        map.container.trigger(clickEvent, [code]);
        if ((type === 'region' && map.params.regionsSelectable) || (type === 'marker' && map.params.markersSelectable)) {
          if (!clickEvent.isDefaultPrevented()) {
            if (map.params[type+'sSelectableOne']) {
              map.clearSelected(type+'s');
            }
            element.setSelected(!element.isSelected);
          }
        }
      }
    });
  },

  bindZoomButtons: function() {
    var map = this;

    jvm.$('<div/>').addClass('jvectormap-zoomin').text('+').appendTo(this.container);
    jvm.$('<div/>').addClass('jvectormap-zoomout').html('&#x2212;').appendTo(this.container);

    this.container.find('.jvectormap-zoomin').click(function(){
      map.setScale(map.scale * map.params.zoomStep, map.width / 2, map.height / 2, false, map.params.zoomAnimate);
    });
    this.container.find('.jvectormap-zoomout').click(function(){
      map.setScale(map.scale / map.params.zoomStep, map.width / 2, map.height / 2, false, map.params.zoomAnimate);
    });
  },

  createTip: function(){
    var map = this;

    this.tip = jvm.$('<div/>').addClass('jvectormap-tip').appendTo(jvm.$('body'));

    this.container.mousemove(function(e){
      var left = e.pageX-15-map.tipWidth,
          top = e.pageY-15-map.tipHeight;

      if (left < 5) {
        left = e.pageX + 15;
      }
      if (top < 5) {
        top = e.pageY + 15;
      }

      map.tip.css({
        left: left,
        top: top
      });
    });
  },

  setScale: function(scale, anchorX, anchorY, isCentered, animate) {
    var viewportChangeEvent = jvm.$.Event('zoom.jvectormap'),
        interval,
        that = this,
        i = 0,
        count = Math.abs(Math.round((scale - this.scale) * 60 / Math.max(scale, this.scale))),
        scaleStart,
        scaleDiff,
        transXStart,
        transXDiff,
        transYStart,
        transYDiff,
        transX,
        transY,
        deferred = new jvm.$.Deferred();

    if (scale > this.params.zoomMax * this.baseScale) {
      scale = this.params.zoomMax * this.baseScale;
    } else if (scale < this.params.zoomMin * this.baseScale) {
      scale = this.params.zoomMin * this.baseScale;
    }

    if (typeof anchorX != 'undefined' && typeof anchorY != 'undefined') {
      zoomStep = scale / this.scale;
      if (isCentered) {
        transX = anchorX + this.defaultWidth * (this.width / (this.defaultWidth * scale)) / 2;
        transY = anchorY + this.defaultHeight * (this.height / (this.defaultHeight * scale)) / 2;
      } else {
        transX = this.transX - (zoomStep - 1) / scale * anchorX;
        transY = this.transY - (zoomStep - 1) / scale * anchorY;
      }
    }

    if (animate && count > 0)  {
      scaleStart = this.scale;
      scaleDiff = (scale - scaleStart) / count;
      transXStart = this.transX * this.scale;
      transYStart = this.transY * this.scale;
      transXDiff = (transX * scale - transXStart) / count;
      transYDiff = (transY * scale - transYStart) / count;
      interval = setInterval(function(){
        i += 1;
        that.scale = scaleStart + scaleDiff * i;
        that.transX = (transXStart + transXDiff * i) / that.scale;
        that.transY = (transYStart + transYDiff * i) / that.scale;
        that.applyTransform();
        if (i == count) {
          clearInterval(interval);
          that.container.trigger(viewportChangeEvent, [scale/that.baseScale]);
          deferred.resolve();
        }
      }, 10);
    } else {
      this.transX = transX;
      this.transY = transY;
      this.scale = scale;
      this.applyTransform();
      this.container.trigger(viewportChangeEvent, [scale/this.baseScale]);
      deferred.resolve();
    }

    return deferred;
  },

  /**
   * Set the map's viewport to the specific point and set zoom of the map to the specific level. Point and zoom level could be defined in two ways: using the code of some region to focus on or a central point and zoom level as numbers.
   * @param This method takes a configuration object as the single argument. The options passed to it are the following:
   * @param {Array} params.regions Array of region codes to zoom to.
   * @param {String} params.region Region code to zoom to.
   * @param {Number} params.scale Map scale to set.
   * @param {Number} params.lat Latitude to set viewport to.
   * @param {Number} params.lng Longitude to set viewport to.
   * @param {Number} params.x Number from 0 to 1 specifying the horizontal coordinate of the central point of the viewport.
   * @param {Number} params.y Number from 0 to 1 specifying the vertical coordinate of the central point of the viewport.
   * @param {Boolean} params.animate Indicates whether or not to animate the scale change and transition.
   */
  setFocus: function(config){
    var bbox,
        itemBbox,
        newBbox,
        codes,
        i,
        point;

    config = config || {};

    if (config.region) {
      codes = [config.region];
    } else if (config.regions) {
      codes = config.regions;
    }

    if (codes) {
      for (i = 0; i < codes.length; i++) {
        if (this.regions[codes[i]]) {
          itemBbox = this.regions[codes[i]].element.shape.getBBox();
          if (itemBbox) {
            if (typeof bbox == 'undefined') {
              bbox = itemBbox;
            } else {
              newBbox = {
                x: Math.min(bbox.x, itemBbox.x),
                y: Math.min(bbox.y, itemBbox.y),
                width: Math.max(bbox.x + bbox.width, itemBbox.x + itemBbox.width) - Math.min(bbox.x, itemBbox.x),
                height: Math.max(bbox.y + bbox.height, itemBbox.y + itemBbox.height) - Math.min(bbox.y, itemBbox.y)
              }
              bbox = newBbox;
            }
          }
        }
      }
      return this.setScale(
        Math.min(this.width / bbox.width, this.height / bbox.height),
        - (bbox.x + bbox.width / 2),
        - (bbox.y + bbox.height / 2),
        true,
        config.animate
      );
    } else {
      if (config.lat && config.lng) {
        point = this.latLngToPoint(config.lat, config.lng);
        config.x = this.transX - point.x / this.scale;
        config.y = this.transY - point.y / this.scale;
      } else if (config.x && config.y) {
        config.x *= -this.defaultWidth;
        config.y *= -this.defaultHeight;
      }
      return this.setScale(config.scale * this.baseScale, config.x, config.y, true, config.animate);
    }
  },

  getSelected: function(type){
    var key,
        selected = [];

    for (key in this[type]) {
      if (this[type][key].element.isSelected) {
        selected.push(key);
      }
    }
    return selected;
  },

  /**
   * Return the codes of currently selected regions.
   * @returns {Array}
   */
  getSelectedRegions: function(){
    return this.getSelected('regions');
  },

  /**
   * Return the codes of currently selected markers.
   * @returns {Array}
   */
  getSelectedMarkers: function(){
    return this.getSelected('markers');
  },

  setSelected: function(type, keys){
    var i;

    if (typeof keys != 'object') {
      keys = [keys];
    }

    if (jvm.$.isArray(keys)) {
      for (i = 0; i < keys.length; i++) {
        this[type][keys[i]].element.setSelected(true);
      }
    } else {
      for (i in keys) {
        this[type][i].element.setSelected(!!keys[i]);
      }
    }
  },

  /**
   * Set or remove selected state for the regions.
   * @param {String|Array|Object} keys If <code>String</code> or <code>Array</code> the region(s) with the corresponding code(s) will be selected. If <code>Object</code> was provided its keys are  codes of regions, state of which should be changed. Selected state will be set if value is true, removed otherwise.
   */
  setSelectedRegions: function(keys){
    this.setSelected('regions', keys);
  },

  /**
   * Set or remove selected state for the markers.
   * @param {String|Array|Object} keys If <code>String</code> or <code>Array</code> the marker(s) with the corresponding code(s) will be selected. If <code>Object</code> was provided its keys are  codes of markers, state of which should be changed. Selected state will be set if value is true, removed otherwise.
   */
  setSelectedMarkers: function(keys){
    this.setSelected('markers', keys);
  },

  clearSelected: function(type){
    var select = {},
        selected = this.getSelected(type),
        i;

    for (i = 0; i < selected.length; i++) {
      select[selected[i]] = false;
    };

    this.setSelected(type, select);
  },

  /**
   * Remove the selected state from all the currently selected regions.
   */
  clearSelectedRegions: function(){
    this.clearSelected('regions');
  },

  /**
   * Remove the selected state from all the currently selected markers.
   */
  clearSelectedMarkers: function(){
    this.clearSelected('markers');
  },

  /**
   * Return the instance of Map. Useful when instantiated as a jQuery plug-in.
   * @returns {Map}
   */
  getMapObject: function(){
    return this;
  },

  /**
   * Return the name of the region by region code.
   * @returns {String}
   */
  getRegionName: function(code){
    return this.mapData.paths[code].name;
  },

  createRegions: function(){
    var key,
        region,
        map = this;

    this.regionLabelsGroup = this.regionLabelsGroup || this.canvas.addGroup();

    for (key in this.mapData.paths) {
      region = new jvm.Region({
        map: this,
        path: this.mapData.paths[key].path,
        code: key,
        style: jvm.$.extend(true, {}, this.params.regionStyle),
        labelStyle: jvm.$.extend(true, {}, this.params.regionLabelStyle),
        canvas: this.canvas,
        labelsGroup: this.regionLabelsGroup,
        label: this.canvas.mode != 'vml' ? (this.params.labels && this.params.labels.regions) : null
      });

      jvm.$(region.shape).bind('selected', function(e, isSelected){
        map.container.trigger('regionSelected.jvectormap', [jvm.$(this.node).attr('data-code'), isSelected, map.getSelectedRegions()]);
      });
      this.regions[key] = {
        element: region,
        config: this.mapData.paths[key]
      };
    }
  },

  createMarkers: function(markers) {
    var i,
        marker,
        point,
        markerConfig,
        markersArray,
        map = this;

    this.markersGroup = this.markersGroup || this.canvas.addGroup();
    this.markerLabelsGroup = this.markerLabelsGroup || this.canvas.addGroup();

    if (jvm.$.isArray(markers)) {
      markersArray = markers.slice();
      markers = {};
      for (i = 0; i < markersArray.length; i++) {
        markers[i] = markersArray[i];
      }
    }

    for (i in markers) {
      markerConfig = markers[i] instanceof Array ? {latLng: markers[i]} : markers[i];
      point = this.getMarkerPosition( markerConfig );

      if (point !== false) {
        marker = new jvm.Marker({
          map: this,
          style: jvm.$.extend(true, {}, this.params.markerStyle, {initial: markerConfig.style || {}}),
          labelStyle: jvm.$.extend(true, {}, this.params.markerLabelStyle),
          index: i,
          cx: point.x,
          cy: point.y,
          group: this.markersGroup,
          canvas: this.canvas,
          labelsGroup: this.markerLabelsGroup,
          label: this.canvas.mode != 'vml' ? (this.params.labels && this.params.labels.markers) : null
        });

        jvm.$(marker.shape).bind('selected', function(e, isSelected){
          map.container.trigger('markerSelected.jvectormap', [jvm.$(this.node).attr('data-index'), isSelected, map.getSelectedMarkers()]);
        });
        if (this.markers[i]) {
          this.removeMarkers([i]);
        }
        this.markers[i] = {element: marker, config: markerConfig};
      }
    }
  },

  repositionMarkers: function() {
    var i,
        point;

    for (i in this.markers) {
      point = this.getMarkerPosition( this.markers[i].config );
      if (point !== false) {
        this.markers[i].element.setStyle({cx: point.x, cy: point.y});
      }
    }
  },

  repositionLabels: function() {
    var key;

    for (key in this.regions) {
      this.regions[key].element.updateLabelPosition();
    }

    for (key in this.markers) {
      this.markers[key].element.updateLabelPosition();
    }
  },

  getMarkerPosition: function(markerConfig) {
    if (jvm.Map.maps[this.params.map].projection) {
      return this.latLngToPoint.apply(this, markerConfig.latLng || [0, 0]);
    } else {
      return {
        x: markerConfig.coords[0]*this.scale + this.transX*this.scale,
        y: markerConfig.coords[1]*this.scale + this.transY*this.scale
      };
    }
  },

  /**
   * Add one marker to the map.
   * @param {String} key Marker unique code.
   * @param {Object} marker Marker configuration parameters.
   * @param {Array} seriesData Values to add to the data series.
   */
  addMarker: function(key, marker, seriesData){
    var markers = {},
        data = [],
        values,
        i,
        seriesData = seriesData || [];

    markers[key] = marker;

    for (i = 0; i < seriesData.length; i++) {
      values = {};
      if (typeof seriesData[i] !== 'undefined') {
        values[key] = seriesData[i];
      }
      data.push(values);
    }
    this.addMarkers(markers, data);
  },

  /**
   * Add set of marker to the map.
   * @param {Object|Array} markers Markers to add to the map. In case of array is provided, codes of markers will be set as string representations of array indexes.
   * @param {Array} seriesData Values to add to the data series.
   */
  addMarkers: function(markers, seriesData){
    var i;

    seriesData = seriesData || [];

    this.createMarkers(markers);
    for (i = 0; i < seriesData.length; i++) {
      this.series.markers[i].setValues(seriesData[i] || {});
    };
  },

  /**
   * Remove some markers from the map.
   * @param {Array} markers Array of marker codes to be removed.
   */
  removeMarkers: function(markers){
    var i;

    for (i = 0; i < markers.length; i++) {
      this.markers[ markers[i] ].element.remove();
      delete this.markers[ markers[i] ];
    };
  },

  /**
   * Remove all markers from the map.
   */
  removeAllMarkers: function(){
    var i,
        markers = [];

    for (i in this.markers) {
      markers.push(i);
    }
    this.removeMarkers(markers)
  },

  /**
   * Converts coordinates expressed as latitude and longitude to the coordinates in pixels on the map.
   * @param {Number} lat Latitide of point in degrees.
   * @param {Number} lng Longitude of point in degrees.
   */
  latLngToPoint: function(lat, lng) {
    var point,
        proj = jvm.Map.maps[this.params.map].projection,
        centralMeridian = proj.centralMeridian,
        inset,
        bbox;

    if (lng < (-180 + centralMeridian)) {
      lng += 360;
    }

    point = jvm.Proj[proj.type](lat, lng, centralMeridian);

    inset = this.getInsetForPoint(point.x, point.y);
    if (inset) {
      bbox = inset.bbox;

      point.x = (point.x - bbox[0].x) / (bbox[1].x - bbox[0].x) * inset.width * this.scale;
      point.y = (point.y - bbox[0].y) / (bbox[1].y - bbox[0].y) * inset.height * this.scale;

      return {
        x: point.x + this.transX*this.scale + inset.left*this.scale,
        y: point.y + this.transY*this.scale + inset.top*this.scale
      };
     } else {
       return false;
     }
  },

  /**
   * Converts cartesian coordinates into coordinates expressed as latitude and longitude.
   * @param {Number} x X-axis of point on map in pixels.
   * @param {Number} y Y-axis of point on map in pixels.
   */
  pointToLatLng: function(x, y) {
    var proj = jvm.Map.maps[this.params.map].projection,
        centralMeridian = proj.centralMeridian,
        insets = jvm.Map.maps[this.params.map].insets,
        i,
        inset,
        bbox,
        nx,
        ny;

    for (i = 0; i < insets.length; i++) {
      inset = insets[i];
      bbox = inset.bbox;

      nx = x - (this.transX*this.scale + inset.left*this.scale);
      ny = y - (this.transY*this.scale + inset.top*this.scale);

      nx = (nx / (inset.width * this.scale)) * (bbox[1].x - bbox[0].x) + bbox[0].x;
      ny = (ny / (inset.height * this.scale)) * (bbox[1].y - bbox[0].y) + bbox[0].y;

      if (nx > bbox[0].x && nx < bbox[1].x && ny > bbox[0].y && ny < bbox[1].y) {
        return jvm.Proj[proj.type + '_inv'](nx, -ny, centralMeridian);
      }
    }

    return false;
  },

  getInsetForPoint: function(x, y){
    var insets = jvm.Map.maps[this.params.map].insets,
        i,
        bbox;

    for (i = 0; i < insets.length; i++) {
      bbox = insets[i].bbox;
      if (x > bbox[0].x && x < bbox[1].x && y > bbox[0].y && y < bbox[1].y) {
        return insets[i];
      }
    }
  },

  createSeries: function(){
    var i,
        key;

    this.series = {
      markers: [],
      regions: []
    };

    for (key in this.params.series) {
      for (i = 0; i < this.params.series[key].length; i++) {
        this.series[key][i] = new jvm.DataSeries(
          this.params.series[key][i],
          this[key],
          this
        );
      }
    }
  },

  /**
   * Gracefully remove the map and and all its accessories, unbind event handlers.
   */
  remove: function(){
    this.tip.remove();
    this.container.remove();
    jvm.$(window).unbind('resize', this.onResize);
    jvm.$('body').unbind('mouseup', this.onContainerMouseUp);
  }
};

jvm.Map.maps = {};
jvm.Map.defaultParams = {
  map: 'world_mill_en',
  backgroundColor: '#505050',
  zoomButtons: true,
  zoomOnScroll: true,
  zoomOnScrollSpeed: 3,
  panOnDrag: true,
  zoomMax: 8,
  zoomMin: 1,
  zoomStep: 1.6,
  zoomAnimate: true,
  regionsSelectable: false,
  markersSelectable: false,
  bindTouchEvents: true,
  regionStyle: {
    initial: {
      fill: 'white',
      "fill-opacity": 1,
      stroke: 'none',
      "stroke-width": 0,
      "stroke-opacity": 1
    },
    hover: {
      "fill-opacity": 0.8,
      cursor: 'pointer'
    },
    selected: {
      fill: 'yellow'
    },
    selectedHover: {
    }
  },
  regionLabelStyle: {
    initial: {
      'font-family': 'Verdana',
      'font-size': '12',
      'font-weight': 'bold',
      cursor: 'default',
      fill: 'black'
    },
    hover: {
      cursor: 'pointer'
    }
  },
  markerStyle: {
    initial: {
      fill: 'grey',
      stroke: '#505050',
      "fill-opacity": 1,
      "stroke-width": 1,
      "stroke-opacity": 1,
      r: 5
    },
    hover: {
      stroke: 'black',
      "stroke-width": 2,
      cursor: 'pointer'
    },
    selected: {
      fill: 'blue'
    },
    selectedHover: {
    }
  },
  markerLabelStyle: {
    initial: {
      'font-family': 'Verdana',
      'font-size': '12',
      'font-weight': 'bold',
      cursor: 'default',
      fill: 'black'
    },
    hover: {
      cursor: 'pointer'
    }
  }
};
jvm.Map.apiEvents = {
  onRegionTipShow: 'regionTipShow',
  onRegionOver: 'regionOver',
  onRegionOut: 'regionOut',
  onRegionClick: 'regionClick',
  onRegionSelected: 'regionSelected',
  onMarkerTipShow: 'markerTipShow',
  onMarkerOver: 'markerOver',
  onMarkerOut: 'markerOut',
  onMarkerClick: 'markerClick',
  onMarkerSelected: 'markerSelected',
  onViewportChange: 'viewportChange'
};
/**
 * Creates map with drill-down functionality.
 * @constructor
 * @param {Object} params Parameters to initialize map with.
 * @param {Number} params.maxLevel Maximum number of levels user can go through
 * @param {Object} params.main Config of the main map. See <a href="./jvm-map/">jvm.Map</a> for more information.
 * @param {Function} params.mapNameByCode Function go generate map name by region code. Default value is:
<pre>
function(code, multiMap) {
  return code.toLowerCase()+'_'+
         multiMap.defaultProjection+'_en';
}
</pre>
 * @param {Function} params.mapUrlByCode Function to generate map url by region code. Default value is:
<pre>
function(code, multiMap){
  return 'jquery-jvectormap-data-'+
         code.toLowerCase()+'-'+
         multiMap.defaultProjection+'-en.js';
}
</pre>
 */
jvm.MultiMap = function(params) {
  var that = this;

  this.maps = {};
  this.params = jvm.$.extend(true, {}, jvm.MultiMap.defaultParams, params);
  this.params.maxLevel = this.params.maxLevel || Number.MAX_VALUE;
  this.params.main = this.params.main || {};
  this.params.main.multiMapLevel = 0;
  this.history = [ this.addMap(this.params.main.map, this.params.main) ];
  this.defaultProjection = this.history[0].mapData.projection.type;
  this.mapsLoaded = {};

  this.params.container.css({position: 'relative'});
  this.backButton = jvm.$('<div/>').addClass('jvectormap-goback').text('Back').appendTo(this.params.container);
  this.backButton.hide();
  this.backButton.click(function(){
    that.goBack();
  });

  this.spinner = jvm.$('<div/>').addClass('jvectormap-spinner').appendTo(this.params.container);
  this.spinner.hide();
};

jvm.MultiMap.prototype = {
  addMap: function(name, config){
    var cnt = jvm.$('<div/>').css({
      width: '100%',
      height: '100%'
    });

    this.params.container.append(cnt);

    this.maps[name] = new jvm.Map(jvm.$.extend(config, {container: cnt}));
    if (this.params.maxLevel > config.multiMapLevel) {
      this.maps[name].container.on('regionClick.jvectormap', {scope: this}, function(e, code){
        var multimap = e.data.scope,
            mapName = multimap.params.mapNameByCode(code, multimap);

        if (!multimap.drillDownPromise || multimap.drillDownPromise.state() !== 'pending') {
          multimap.drillDown(mapName, code);
        }
      });
    }


    return this.maps[name];
  },

  downloadMap: function(code){
    var that = this,
        deferred = jvm.$.Deferred();

    if (!this.mapsLoaded[code]) {
      jvm.$.get(this.params.mapUrlByCode(code, this)).then(function(){
        that.mapsLoaded[code] = true;
        deferred.resolve();
      }, function(){
        deferred.reject();
      });
    } else {
      deferred.resolve();
    }
    return deferred;
  },

  drillDown: function(name, code){
    var currentMap = this.history[this.history.length - 1],
        that = this,
        focusPromise = currentMap.setFocus({region: code, animate: true}),
        downloadPromise = this.downloadMap(code);

    focusPromise.then(function(){
      if (downloadPromise.state() === 'pending') {
        that.spinner.show();
      }
    });
    downloadPromise.always(function(){
      that.spinner.hide();
    });
    this.drillDownPromise = jvm.$.when(downloadPromise, focusPromise);
    this.drillDownPromise.then(function(){
      currentMap.params.container.hide();
      if (!that.maps[name]) {
        that.addMap(name, {map: name, multiMapLevel: currentMap.params.multiMapLevel + 1});
      } else {
        that.maps[name].params.container.show();
      }
      that.history.push( that.maps[name] );
      that.backButton.show();
    });
  },

  goBack: function(){
    var currentMap = this.history.pop(),
        prevMap = this.history[this.history.length - 1],
        that = this;

    currentMap.setFocus({scale: 1, x: 0.5, y: 0.5, animate: true}).then(function(){
      currentMap.params.container.hide();
      prevMap.params.container.show();
      prevMap.updateSize();
      if (that.history.length === 1) {
        that.backButton.hide();
      }
      prevMap.setFocus({scale: 1, x: 0.5, y: 0.5, animate: true});
    });
  }
};

jvm.MultiMap.defaultParams = {
  mapNameByCode: function(code, multiMap){
    return code.toLowerCase()+'_'+multiMap.defaultProjection+'_en';
  },
  mapUrlByCode: function(code, multiMap){
    return 'jquery-jvectormap-data-'+code.toLowerCase()+'-'+multiMap.defaultProjection+'-en.js';
  }
}

jvm.$.fn.vectorMap("addMap","us_mill_en",{insets:[{width:200,top:370,height:108.45409710972798,bbox:[{y:-9738357.401846493,x:-19771895.08914502},{y:-6263499.827694392,x:-13363916.66001029}],left:10},{width:100,top:400,height:63.893599348051154,bbox:[{y:-2517270.404349643,x:-16734018.10404535},{y:-2130577.470608624,x:-16128804.220829029}],left:220},{width:900,top:0,height:447.82945185075204,bbox:[{y:-5994178.75039794,x:-12778676.130802875},{y:-2788573.3575807624,x:-6336391.369020486}],left:0}],paths:{"US-VA":{path:"M758.7,228.27l0.64,-1.33l-0.16,-0.64l0.65,-0.59l-0.36,-0.68l0.65,-0.53l-0.04,-1.04l0.41,-0.17l0.06,-0.64l0.56,-0.07l0.37,-0.53l0.66,-1.7l0.94,-0.11l0.2,-0.72l0.35,-0.03l0.21,-1.09l-0.46,-0.69l0.88,-0.42l0.11,-0.54l2.48,-0.24l-0.28,1.9l-5.77,7.43l-0.16,0.9l-0.99,0.98l-0.74,3.32l-0.49,-1.56l0.38,-0.59l-0.11,-0.6ZM760.26,231.11l-0.01,-0.02l0.02,0.01l-0.01,0.01ZM640.45,240.92l7.16,-1.96l1.02,-1.75l3.06,-0.93l0.34,-1.44l2.1,-1.18l0.43,-1.56l5.1,-2.51l5.13,-3.98l0.13,0.53l0.67,0.45l0.07,1.16l1.55,1.56l1.29,0.3l1.66,1.22l1.26,0.15l0.78,-0.2l0.89,-0.85l1.14,-0.27l0.71,-1.01l2.14,1.62l1.46,-0.64l2.17,-0.43l0.66,0.17l1.13,-0.6l0.48,-0.66l-0.25,-0.86l0.24,-0.22l1.57,0.77l3.37,-1.55l0.59,0.64l0.6,0.05l2.54,-1.46l0.35,-0.72l-0.33,-0.48l1.05,-0.67l0.23,-0.54l-0.18,-0.51l-0.77,-0.46l1.18,-2.26l3.22,-3.39l0.91,-1.64l0.35,-1.5l1.93,-1.76l-0.01,-0.8l0.91,-0.91l0.69,-1.32l0.6,-2.5l1.04,0.36l0.73,1.59l3.32,1.02l0.58,-0.12l1.45,-1.85l0.65,-1.86l0.84,-0.7l0.3,-1.32l1.12,-1.68l1.45,0.92l0.62,-0.02l1.85,-2.4l1.11,-0.06l0.72,-0.87l0.88,-0.4l0.77,-1.37l1.75,-1.7l0.23,-2.15l0.85,-1.31l0.13,-1.64l7.32,5.41l0.62,-0.15l1.41,-3.06l2.35,0.44l0.44,0.58l0.89,0.38l-0.85,1.2l0.37,0.92l1.28,1.0l2.27,0.46l0.67,1.14l1.31,0.4l1.58,1.7l-0.16,2.13l-1.66,0.43l-0.29,0.48l-0.92,0.35l-1.51,3.88l-0.32,0.03l-0.17,0.48l0.71,0.91l-0.35,0.74l1.83,0.4l2.46,-0.69l0.6,-0.48l0.09,0.51l-0.59,0.47l1.48,1.26l0.13,0.96l1.34,0.74l1.75,0.22l0.67,0.51l0.87,-0.35l0.72,0.21l0.12,0.51l1.06,0.64l0.18,0.98l0.8,0.1l1.1,0.89l2.33,1.06l0.13,0.73l-0.64,-0.47l-0.62,0.25l0.37,1.6l-0.43,0.76l0.32,0.4l-0.53,0.55l0.0,0.45l-0.43,-0.15l-0.92,-1.04l-0.83,0.27l-1.64,-2.25l-0.47,-0.07l-0.22,-0.51l-0.55,0.14l-1.0,-1.33l-0.96,-0.54l-0.23,-0.57l-0.72,-0.5l-0.34,-1.17l-0.55,-0.67l-1.16,-0.37l-0.82,-0.86l-1.05,-0.19l-0.48,0.35l0.28,0.79l0.95,0.21l0.42,0.65l1.17,0.32l0.4,0.41l0.0,1.26l2.09,1.82l1.22,1.85l1.58,0.87l0.92,1.97l0.83,0.4l1.28,-0.08l0.77,0.55l-0.47,0.42l0.19,0.52l1.64,0.69l0.13,0.6l0.35,0.18l-0.14,1.43l-0.26,-0.68l-0.82,-0.25l-0.77,-1.01l-0.62,0.14l-0.51,1.15l0.39,0.74l-0.23,0.43l0.94,0.56l-1.31,0.28l-4.35,-4.94l-0.55,-0.03l-0.38,0.67l0.11,0.53l1.68,1.67l1.37,2.1l2.17,1.48l1.19,-0.26l0.21,0.88l0.96,0.38l-0.45,0.39l0.15,0.64l0.82,0.05l-0.25,0.82l-1.52,0.58l-0.36,-0.78l-2.47,-1.62l-0.01,-1.25l-0.42,-0.63l-0.75,-0.27l-1.18,0.28l-1.38,-0.66l-0.06,-0.94l-0.66,-0.22l-0.69,1.27l-0.97,-1.31l-1.0,0.32l-0.49,-0.43l-0.97,0.16l-1.94,-0.5l-0.55,0.76l0.23,0.48l3.61,0.92l0.64,-0.44l0.34,0.8l1.1,0.61l1.78,0.14l0.56,0.73l0.71,0.26l0.54,-0.27l0.14,1.98l1.14,0.39l1.42,1.26l0.22,0.54l-0.71,0.72l0.43,0.53l1.79,-0.69l0.75,0.15l0.72,0.73l0.67,-0.14l-0.39,-1.79l2.59,0.78l0.92,0.06l0.79,-0.37l0.95,3.05l-0.47,0.51l-0.14,2.49l-0.87,-0.68l-0.25,0.67l-62.55,0.19l-17.69,-0.53l-10.55,-0.85l-0.83,0.37l-25.14,-0.12Z",name:"Virginia"},"US-PA":{path:"M693.9,140.78l0.62,-0.03l4.81,-2.33l0.0,4.45l0.4,0.4l68.51,0.05l1.16,0.78l0.34,1.3l1.36,0.14l0.94,0.7l-0.01,0.78l0.61,0.41l-0.28,0.45l0.16,2.44l1.26,2.14l1.77,1.09l2.08,0.32l0.45,0.78l-1.02,0.41l-1.04,1.05l-0.73,1.8l-2.12,2.4l-1.66,1.0l-0.17,0.72l1.21,1.74l-0.67,1.23l-0.88,0.18l-0.35,0.47l-0.26,1.26l0.25,2.59l0.44,0.36l1.13,0.11l0.29,1.75l0.49,0.79l0.45,0.31l0.66,-0.07l0.33,0.85l3.22,3.27l-2.74,1.24l-1.04,0.88l-2.03,1.01l-0.48,1.32l-1.48,0.61l-0.79,-0.06l-1.91,1.05l-1.53,-0.46l-2.03,0.25l-1.37,0.86l-0.7,1.03l-73.15,-0.0l-0.01,-41.14l2.03,-0.67l3.52,-2.0Z",name:"Pennsylvania"},"US-TN":{path:"M537.01,269.35l0.72,-0.73l0.2,-0.77l0.85,0.12l0.67,-0.6l-0.41,-3.99l1.4,-1.4l0.18,-1.05l1.43,-0.62l-0.38,-1.14l0.59,-0.94l-0.66,-1.1l2.35,-1.0l1.07,-0.81l-0.02,-0.8l-0.58,-0.52l1.01,0.28l0.48,-0.27l-0.11,-1.14l-0.65,-0.78l0.67,-1.58l1.01,-0.82l-0.91,-1.73l1.3,-0.09l0.44,-0.38l-0.08,-0.63l-0.88,-0.61l1.26,-0.46l0.19,-0.59l-0.38,-1.22l0.96,0.4l0.9,-0.79l21.27,0.01l0.4,-0.36l0.07,-1.1l-0.44,-1.92l2.56,0.23l0.68,0.55l20.63,-0.36l9.94,0.63l11.62,0.07l21.63,0.7l1.07,-0.32l26.6,0.13l0.75,-0.37l3.1,0.12l-0.52,0.96l0.22,0.77l-0.68,1.5l0.1,0.62l-0.89,-0.16l-1.81,1.16l-1.72,2.91l-0.68,0.51l-0.81,-0.77l-1.26,-0.23l-2.62,0.98l-1.69,1.95l-0.97,0.55l-0.16,-1.15l-0.57,-0.55l-0.49,0.04l-2.2,1.02l-0.57,1.06l-0.76,-0.31l-0.87,0.26l-0.29,0.59l0.14,0.67l-1.02,1.53l-1.12,-0.14l-1.7,0.65l-2.01,1.55l-0.72,0.11l-2.36,1.62l-3.62,0.06l-2.56,1.03l-0.54,0.76l-1.46,0.9l-0.59,2.28l-0.37,0.39l-1.49,0.18l-0.75,-0.24l-1.11,0.78l-0.59,4.14l-37.0,-0.04l-22.53,-0.35l-0.31,0.21l-31.54,-0.04Z",name:"Tennessee"},"US-ID":{path:"M117.62,96.04l1.16,-1.25l1.43,-3.41l1.49,-1.05l1.11,-1.54l0.69,-2.04l-0.17,-1.04l1.77,-2.43l0.95,-2.56l0.13,-1.25l1.62,-2.25l1.41,-2.79l-0.15,-0.91l-1.32,-2.48l-2.47,-1.37l-0.95,-0.19l-1.14,-1.27l-0.96,-2.57l-0.78,-0.91l0.7,-1.19l-0.56,-2.08l-1.53,-2.17l0.08,-51.29l14.6,0.0l-0.01,19.34l1.86,2.45l1.25,0.99l0.55,1.35l1.51,1.4l0.02,0.77l0.59,0.93l-0.86,1.01l1.05,1.42l-0.75,0.24l-0.13,0.71l2.29,1.23l1.4,1.67l2.51,0.76l0.82,1.33l1.34,1.03l1.98,2.27l0.21,0.6l1.94,1.36l0.34,1.68l2.1,1.27l-0.11,0.75l0.26,0.46l0.73,0.06l0.88,-0.64l0.4,0.31l-0.26,0.53l0.17,0.53l1.27,0.7l1.65,-0.09l1.82,-0.56l-0.27,2.34l-0.9,0.6l0.44,0.92l-1.29,3.59l0.33,1.49l-0.8,0.17l-0.31,0.57l0.81,1.12l-0.48,0.83l0.16,1.08l1.08,0.69l-0.2,0.84l0.4,0.72l-1.47,0.55l-1.01,1.43l0.27,1.0l0.57,0.59l-0.0,0.61l-0.71,0.8l0.05,1.43l1.59,0.35l1.66,1.38l0.79,0.13l1.02,-0.44l0.44,-0.77l1.79,-0.6l1.02,-1.28l0.77,-0.36l0.08,-0.69l1.25,1.21l1.16,0.43l-0.26,1.07l0.87,0.78l-0.14,1.23l0.76,1.1l0.03,1.44l1.93,2.12l0.57,1.47l0.87,0.21l0.96,1.71l-0.04,0.81l-0.68,0.66l0.78,1.64l1.39,0.85l0.42,0.66l1.62,-0.46l1.18,0.68l1.43,2.28l-0.39,0.75l1.11,1.49l-0.16,0.61l0.25,0.79l2.6,1.82l0.91,-0.24l-0.15,-1.0l0.92,-0.87l0.92,-0.3l4.68,0.88l0.64,-0.35l0.49,-1.24l1.14,-0.49l2.37,0.56l3.26,-0.45l1.05,0.66l2.2,-0.75l3.29,0.34l0.4,-0.53l-0.77,-0.63l-0.04,-0.39l0.84,-0.98l-0.15,-0.84l1.12,-0.54l0.55,0.28l1.31,1.73l0.26,0.96l1.58,1.55l0.75,0.31l0.02,46.51l-92.03,0.01l-0.19,-33.98l0.87,-1.16l0.58,-2.47l-0.51,-1.41l0.8,-0.44l0.35,-1.39l-1.11,-0.96l-0.4,-1.01l-1.22,0.13l-0.58,-0.55l-1.0,0.35l-0.43,-0.33l-0.26,-1.68l0.22,-1.54Z",name:"Idaho"},"US-NV":{path:"M156.76,268.73l-30.85,-27.45l-22.82,-19.75l-29.02,-23.55l-0.01,-54.71l91.91,-0.01l0.01,104.88l-1.21,2.83l-0.34,0.18l-1.19,-0.01l-1.14,-1.65l-0.73,-0.43l-1.21,0.35l-1.85,-0.57l-1.38,0.38l-1.46,1.01l-0.34,2.12l1.12,1.94l-0.39,0.82l-0.04,1.1l0.75,2.43l-0.3,2.14l1.17,2.82l0.3,2.43l-0.11,0.81l-0.87,0.42l0.34,1.02l-0.33,0.46Z",name:"Nevada"},"US-TX":{path:"M281.72,322.45l55.44,-0.02l0.4,-0.4l0.37,-78.46l46.49,-0.0l0.05,33.65l0.44,0.4l1.55,0.11l3.26,3.05l1.46,0.17l0.76,-0.46l2.17,0.52l0.43,-0.3l0.23,-1.03l0.47,0.57l0.79,0.18l0.95,1.32l0.06,1.59l0.41,0.43l2.49,0.36l1.08,-0.15l1.19,0.72l2.4,0.58l2.13,-0.33l1.62,1.45l1.22,-0.07l1.1,-1.12l2.1,0.24l1.4,-0.33l0.04,1.72l0.82,0.62l1.33,0.33l-0.13,1.33l0.72,0.76l1.72,0.08l2.88,-2.13l0.35,0.22l0.33,1.24l1.71,0.19l0.17,0.79l0.66,0.45l1.28,-0.13l0.78,-0.71l0.87,0.19l0.5,-0.74l-0.15,1.86l0.56,0.94l0.69,0.37l1.05,-0.41l0.71,-1.85l0.8,-0.57l0.32,-1.14l0.44,-0.08l0.94,1.37l1.12,0.1l0.7,0.42l1.1,-0.13l0.64,-1.04l0.3,0.1l-0.07,0.62l0.4,0.52l1.02,0.39l0.42,0.6l1.3,0.01l1.21,1.41l0.49,0.03l0.59,-0.52l0.1,-0.51l1.25,-0.03l0.85,-1.1l1.63,-0.26l1.46,-0.82l1.27,0.7l1.33,-0.12l0.33,-0.64l1.93,-0.5l0.49,-0.4l0.68,0.96l3.03,0.42l1.7,-0.87l0.35,-0.77l0.89,0.28l1.85,1.32l0.99,0.18l1.44,1.71l1.82,0.42l0.87,0.78l3.62,0.81l0.28,0.64l1.15,0.84l1.28,-0.04l0.35,-0.53l0.64,0.31l0.79,-0.27l1.43,0.24l0.47,0.29l0.08,26.85l1.21,1.42l1.04,0.7l0.93,1.51l0.37,1.29l-0.21,2.07l1.36,1.35l-0.02,0.73l0.57,0.42l0.64,1.21l-0.15,1.02l0.75,0.77l0.41,1.31l0.86,0.28l-0.25,1.21l0.51,0.97l-0.64,0.31l-0.13,0.44l0.54,0.99l-0.48,0.64l0.07,1.11l-0.77,2.04l-0.66,0.61l-0.37,1.15l-0.73,0.91l0.41,1.59l-0.81,1.73l0.09,0.87l0.61,0.93l-0.2,0.8l0.31,1.24l-0.28,1.06l-1.02,1.26l-1.02,0.32l-1.09,2.05l-0.13,1.67l1.02,1.23l-2.72,-0.07l-6.1,2.55l-1.43,-0.71l-2.65,0.67l0.84,-2.29l-0.23,-1.24l-0.42,-0.57l-1.76,-0.04l-1.35,2.03l-0.28,-0.5l-1.91,-1.06l-0.6,0.91l0.22,0.48l0.72,0.31l-0.19,0.6l0.35,0.63l-0.48,0.89l0.14,0.42l0.99,0.61l-0.23,0.42l0.36,0.8l0.9,0.49l-0.25,0.75l-1.23,0.6l-1.56,1.71l-0.84,-0.39l-0.49,0.11l0.19,2.74l-3.17,2.63l-4.21,2.33l-2.69,0.23l-2.09,0.74l-0.23,0.78l-0.86,-0.16l-1.37,0.57l-0.25,-0.27l-0.72,0.06l0.26,-0.48l-0.47,-0.61l-1.2,0.13l-0.96,0.77l-0.39,-0.4l-0.1,-0.98l-1.14,-0.69l-0.5,0.42l0.45,1.9l-1.44,-0.33l-0.44,-1.04l-1.18,-0.34l-0.58,0.37l0.02,0.42l0.72,1.37l0.0,0.98l1.59,0.72l-0.51,0.22l-0.19,0.82l0.63,0.25l0.88,-0.39l0.65,0.35l-3.4,1.69l-0.41,-0.12l-0.27,-1.1l-1.26,-1.31l-0.47,-0.05l-0.93,1.64l0.89,1.23l-0.27,0.77l0.22,0.66l-1.33,1.3l0.21,-1.65l-0.41,-0.36l-0.48,0.15l-0.61,0.84l0.17,0.61l-0.23,0.52l0.01,-0.71l-0.47,-0.49l-1.58,0.93l-0.65,-0.26l-0.63,0.44l-0.0,0.6l-0.62,0.7l0.14,0.67l0.73,0.25l0.66,0.87l0.5,-0.37l0.3,-0.78l0.55,-0.22l0.02,0.29l-2.29,3.19l-0.94,-0.74l-1.15,0.27l-0.24,-0.28l-2.82,0.12l-0.2,0.59l0.34,0.5l0.47,0.32l1.13,0.05l0.46,1.19l1.59,0.85l-2.3,5.69l-0.96,-1.23l-1.88,1.38l-1.28,-1.76l-0.94,-0.73l-0.61,0.39l0.06,0.4l1.09,1.56l-0.14,0.51l-0.6,-0.07l-0.34,0.63l0.44,0.47l1.6,0.1l0.52,0.49l1.68,0.21l0.82,-0.4l-0.04,1.6l-0.78,0.52l0.24,1.18l-0.82,0.08l-0.4,0.38l0.24,1.62l-0.26,1.25l0.4,0.58l0.62,0.17l0.61,2.18l0.5,2.17l-0.74,0.59l0.46,0.45l-0.05,0.98l1.08,0.97l0.33,1.37l0.46,0.28l0.36,2.46l0.95,0.52l-0.28,0.75l0.17,0.81l-0.29,0.42l-0.78,0.06l-0.52,0.45l0.01,0.68l-0.56,0.09l-0.26,-0.47l-1.17,-0.39l-2.25,-2.01l-1.7,-0.18l-0.68,-0.41l-3.3,0.0l-0.65,0.29l-0.64,-0.47l-1.29,0.16l-1.62,-0.7l-1.21,-1.44l-0.91,-0.39l-2.31,-0.72l-1.16,0.28l-2.21,-2.07l-1.58,-0.03l-1.17,-0.5l-1.84,-0.18l0.26,-0.67l-0.23,-0.77l-0.81,-0.55l0.45,-2.23l-0.23,-0.5l0.62,-0.21l0.13,-0.52l-0.88,-0.49l-0.89,0.32l0.01,-0.83l-0.45,-0.6l0.78,-1.54l-0.64,-0.31l-1.04,0.83l-0.46,-0.68l-0.64,-0.18l-0.21,-1.05l-1.15,-0.56l0.3,-2.76l-1.11,-1.55l0.5,-2.55l-0.55,-0.74l-0.13,-1.37l-1.51,-1.16l-0.68,0.13l-0.87,-0.38l-0.59,-1.0l-1.73,-1.29l-0.31,-1.65l-0.78,-0.72l-0.08,-0.6l-0.88,-0.45l-1.05,-2.23l-2.13,-1.15l-0.34,-0.71l-0.87,-0.43l-0.05,-0.9l-0.65,-0.91l-0.4,-1.44l0.17,-0.84l-0.8,-0.36l-0.19,-0.97l-0.65,-0.46l-0.78,-1.32l-0.51,-1.85l-1.5,-1.82l-0.74,-3.28l-1.49,-1.04l0.04,-0.53l-0.65,-0.96l-3.37,-2.24l-0.18,-0.86l1.34,-0.03l0.66,-0.72l-0.78,-0.44l-0.05,-1.01l0.62,-0.89l-0.18,-0.44l-1.06,0.57l-0.45,1.09l-0.65,0.12l-0.34,0.83l-0.37,-0.03l-1.43,-1.31l-0.37,-1.08l-1.14,0.05l-0.87,-0.45l-0.72,-1.56l-1.28,-0.72l-0.64,0.15l-0.42,-0.6l-0.57,0.12l-0.18,0.45l-0.82,0.13l-2.32,-0.32l-0.38,-0.3l-4.67,0.16l-2.96,-1.46l-0.6,-0.03l-0.84,0.67l-0.48,1.24l-1.62,-0.09l-2.89,0.91l-2.38,4.94l-0.12,1.35l-0.6,0.59l-0.26,1.21l0.21,0.63l-1.46,0.76l-0.58,1.05l-1.36,1.22l-0.19,0.79l-2.25,-0.21l-0.95,-0.64l-0.42,0.23l-1.38,-0.86l-1.11,-1.22l-2.39,-0.58l-0.9,-0.67l-0.47,-0.85l-2.26,-0.31l-1.87,-0.71l-3.2,-3.11l-1.3,-0.2l-2.63,-2.02l-0.78,-2.21l-0.74,-0.75l-0.91,-1.79l-0.3,-1.76l0.31,-2.4l-2.68,-3.83l-0.15,-1.54l-1.14,-1.89l-0.84,-0.34l-0.43,-0.94l-1.22,-0.57l-1.89,-1.61l-0.86,-0.06l-1.7,-0.85l-2.8,-2.48l-0.58,-1.19l-2.72,-1.84l-3.03,-3.29l-3.86,-1.84l-2.25,-4.05l-0.71,-0.64l-1.52,-0.22l-1.48,-1.13l-0.83,-2.26ZM428.65,423.89l0.13,-0.1l0.18,-0.23l0.02,0.31l-0.33,0.03ZM465.8,367.81l0.19,0.04l-0.27,0.19l0.08,-0.18l0.01,-0.06ZM465.1,368.48l-0.08,0.05l0.02,-0.04l0.06,-0.02ZM434.93,387.58l-0.06,-0.27l0.65,-0.15l-0.01,0.01l-0.58,0.41ZM432.54,389.84l0.58,-0.96l0.4,-0.3l-0.02,0.21l-0.97,1.04Z",name:"Texas"},"US-NH":{path:"M813.59,128.8l-1.19,-1.57l-0.13,-0.76l0.45,-1.63l0.67,-0.37l0.19,-0.45l0.5,-4.6l0.55,-0.95l0.17,-4.77l0.92,-1.07l0.35,-1.88l1.48,-1.3l0.53,-1.94l1.26,-1.74l-0.22,-0.67l0.94,-1.88l0.19,-3.31l0.69,-0.84l1.98,-0.2l1.07,-0.98l1.85,-0.99l1.23,-1.31l0.1,-1.0l0.68,-0.38l0.03,-0.62l-1.23,-2.93l1.8,-2.51l0.12,-0.74l-0.39,-1.22l1.85,-3.64l-0.03,-0.78l1.26,-1.0l2.26,0.92l0.88,-0.59l1.92,32.37l-0.29,3.24l1.79,2.53l0.69,0.45l-0.06,1.59l1.65,2.08l-1.51,2.74l-1.52,-0.22l-2.33,1.27l-1.01,0.05l-0.96,1.24l-1.44,0.89l-17.77,-0.51Z",name:"New Hampshire"},"US-NY":{path:"M789.78,168.99l-0.56,-0.66l1.57,-2.4l1.01,-0.0l0.46,-0.31l0.62,0.33l0.69,-0.14l0.1,-0.45l1.55,-0.51l0.18,-1.19l0.78,-0.21l0.18,0.53l1.0,0.12l0.52,-0.16l0.15,-0.45l1.39,0.2l0.43,-0.54l1.49,0.4l0.97,-0.22l0.75,-0.91l0.49,0.38l0.52,-0.31l4.41,-0.01l2.42,-0.35l1.21,-0.65l-1.66,1.53l0.42,0.54l1.51,0.1l0.06,0.47l-1.44,0.62l-2.01,-0.06l-0.49,0.37l-1.2,0.1l0.1,0.37l-0.27,0.17l-0.58,-0.29l-0.86,0.39l-0.99,-0.11l-0.49,0.35l-1.4,0.03l-0.43,0.48l-1.25,-0.16l-2.07,0.91l-2.87,0.44l-1.16,0.48l-0.96,-0.17l-0.56,0.67l-0.31,-0.64l-1.24,-0.53l-0.99,0.4l-0.24,0.78l-0.93,0.24ZM813.74,163.34l1.31,-1.43l1.21,-0.1l0.8,-0.6l0.66,0.47l0.34,-0.62l0.4,0.6l-4.39,1.98l-0.32,-0.29ZM812.22,161.41l1.15,-0.64l0.05,-0.04l-0.53,0.51l-0.67,0.17ZM813.56,160.59l0.14,-0.18l0.05,0.08l-0.19,0.09ZM816.16,158.86l0.01,-0.0l-0.01,0.0l-0.0,-0.0ZM815.4,160.13l0.04,0.03l-0.09,0.0l0.05,-0.03ZM700.13,138.11l4.33,-2.5l1.67,-1.59l3.32,-1.66l1.92,-2.56l2.46,-1.4l0.2,-1.63l-1.0,-2.33l0.63,-0.81l-0.01,-0.76l-0.67,-0.6l-1.98,-0.38l0.18,-2.7l5.38,-1.52l4.7,-0.64l2.33,0.3l1.92,-0.26l5.46,0.92l2.69,1.67l3.4,-0.77l5.5,0.24l0.45,0.5l0.67,-0.03l0.37,-0.8l3.5,-0.88l1.14,-1.56l2.21,-1.07l1.05,-0.89l1.08,0.26l1.19,-0.2l1.41,-1.14l-0.24,-0.77l0.61,-0.84l-0.12,-0.59l-0.6,-0.12l0.12,-1.01l-0.51,-1.52l-0.76,-0.72l0.59,0.4l0.55,-0.12l1.06,-1.04l0.22,-0.77l0.93,-0.36l0.23,-0.92l-0.82,-0.37l-0.82,0.48l0.62,-0.86l-0.64,-0.79l-1.19,-0.23l-1.05,0.48l-0.78,-0.71l2.58,-1.67l2.08,-0.86l2.27,-1.86l0.82,-0.32l1.26,-1.11l0.22,-0.51l-0.21,-0.89l1.19,-1.38l6.62,-5.36l5.82,-2.74l2.9,0.22l20.6,-0.12l0.14,0.77l-0.64,1.69l0.64,1.26l-0.63,3.3l1.3,3.26l-0.61,1.57l0.15,2.2l-0.85,0.74l-0.95,2.89l0.43,0.93l0.5,2.6l-0.12,0.96l0.35,0.83l-0.96,3.29l0.31,0.88l0.47,0.19l0.67,-0.38l0.3,-0.7l0.36,0.02l0.66,1.15l-0.3,12.84l-0.33,1.36l0.27,1.04l-3.68,12.25l0.39,0.71l-0.99,13.98l0.76,1.35l-3.34,1.88l-0.13,0.56l1.16,1.7l-2.56,2.21l-0.11,0.88l-0.95,0.13l0.83,-3.42l0.06,-1.94l-0.27,-1.52l-1.04,-1.2l0.13,-0.94l-0.63,-0.29l-0.75,1.03l0.37,1.42l0.68,0.77l0.14,2.36l-11.55,-6.35l-0.83,-1.49l-2.26,-0.33l-1.41,-0.83l-1.12,-1.93l-0.09,-1.99l0.27,-0.62l-0.69,-1.71l-1.36,-0.91l-1.07,0.03l-0.36,-1.32l-1.39,-0.98l-68.43,-0.05l-0.0,-4.36ZM786.08,170.13l0.55,-0.54l0.17,-1.08l1.09,-0.01l0.18,0.27l-0.54,0.63l-1.45,0.73ZM711.68,123.72l0.15,-0.49l0.71,0.07l-0.53,0.76l-0.32,-0.34Z",name:"New York"},"US-HI":{path:"M302.77,438.69l0.56,0.92l2.21,1.35l1.25,0.02l1.89,0.67l4.55,2.69l1.34,1.48l0.03,2.43l0.42,0.37l1.17,-0.29l0.27,0.19l0.12,1.11l0.58,1.03l2.42,1.86l-0.94,1.37l-0.85,0.35l-1.09,1.04l-3.86,1.54l-1.74,-0.04l-4.05,2.42l-0.89,0.88l-0.15,1.02l-1.68,2.13l-2.56,-1.7l-1.03,-0.3l-0.47,-0.76l-0.21,-0.99l0.59,-4.25l-1.77,-4.85l-1.02,-1.22l-0.37,-1.01l0.3,-0.74l1.18,-1.25l0.92,-0.43l0.95,-1.55l0.76,-0.62l0.2,-1.07l-1.32,-2.41l0.23,-1.65l2.07,0.27ZM286.64,423.71l1.24,0.34l1.46,1.99l1.96,-0.39l0.88,-0.52l1.47,0.23l2.01,1.83l2.2,0.77l0.21,1.14l-1.0,1.01l-1.37,0.5l-1.44,0.01l-1.69,0.8l-1.75,-0.1l-0.45,-0.56l-0.49,-3.07l-0.66,-0.38l-0.89,0.36l-1.38,-0.58l-0.98,-1.16l-0.03,-1.32l0.7,-0.9ZM285.82,432.9l1.31,-0.87l0.7,0.1l-0.05,0.63l-1.96,0.14ZM275.61,419.99l3.59,0.67l1.14,-0.2l1.24,0.57l2.31,-0.22l0.68,0.27l-1.17,0.92l-1.25,0.39l-3.74,-0.88l-3.77,0.16l0.97,-1.67ZM281.3,428.51l-0.63,0.03l-0.35,-1.84l-1.23,-0.9l0.87,-0.19l1.63,0.23l1.25,1.24l0.15,0.29l-0.37,0.65l-1.31,0.48ZM257.12,412.95l1.93,-0.02l1.37,-1.05l0.88,-1.21l0.5,-0.11l1.26,2.21l0.92,0.89l-0.24,0.48l0.14,0.89l1.28,1.15l0.64,-0.07l0.54,0.52l0.28,0.93l0.61,0.43l-2.25,0.53l-1.86,-1.45l-0.72,0.28l0.57,-0.52l-0.12,-0.49l-1.49,-0.43l-0.62,0.2l-0.13,0.48l0.63,0.85l-1.56,0.29l-0.5,-1.21l-1.62,-2.13l-0.03,-0.85l-0.43,-0.6ZM228.92,403.51l1.13,-1.66l2.68,-1.33l0.93,0.41l0.51,-0.41l2.14,0.14l0.89,1.28l-0.75,1.64l0.04,1.41l-1.68,1.64l-3.08,-0.58l-0.83,-0.89l-1.61,-0.51l-0.35,-1.13ZM220.64,408.28l-0.23,-0.45l0.18,-0.62l1.9,-1.46l0.4,-0.94l0.23,0.04l-0.39,1.44l-1.59,0.89l-0.5,1.11Z",name:"Hawaii"},"US-VT":{path:"M798.54,104.07l0.87,-2.6l0.89,-0.82l-0.11,-2.36l0.61,-1.61l-0.12,-0.89l-1.18,-2.5l0.64,-3.2l-0.64,-1.32l0.63,-1.53l-0.12,-0.92l27.4,-0.17l0.32,1.69l-1.41,1.79l-0.49,1.31l1.28,2.83l-0.62,0.38l-0.09,1.0l-1.09,1.14l-1.72,0.9l-1.0,0.94l-1.86,0.15l-0.86,0.63l-0.38,0.82l-0.19,3.33l-0.97,1.95l0.19,0.58l-1.13,1.55l-0.48,1.84l-1.49,1.31l-0.42,2.02l-0.95,1.16l-0.18,4.83l-0.55,0.97l-0.5,4.6l-0.78,0.55l-0.54,1.95l0.22,1.22l1.06,1.17l-11.76,-0.29l0.52,-14.82l-1.21,-1.79l-0.99,0.03l-0.56,0.85l0.94,-3.43l-0.76,-4.58l-0.41,-0.68Z",name:"Vermont"},"US-NM":{path:"M244.48,333.23l0.01,-98.59l93.27,0.0l0.01,8.13l-0.65,0.42l-0.36,78.44l-55.56,0.02l-0.39,0.71l0.48,1.51l0.58,1.29l0.69,0.39l-25.52,-0.07l-0.4,0.4l0.0,7.35l-12.15,0.0Z",name:"New Mexico"},"US-NC":{path:"M630.24,265.44l0.78,0.25l1.81,-0.36l0.62,-0.72l0.5,-2.1l1.33,-0.75l0.55,-0.75l2.16,-0.85l3.78,-0.11l2.44,-1.66l0.71,-0.08l1.96,-1.55l1.44,-0.57l1.39,0.07l1.45,-1.97l-0.07,-0.97l1.42,0.29l0.74,-1.25l0.9,-0.45l1.05,-0.44l0.17,1.24l0.91,0.45l1.37,-0.73l1.6,-1.89l2.42,-0.88l0.65,0.17l0.61,0.76l0.97,-0.01l0.93,-0.73l1.98,-3.07l1.12,-0.7l1.27,0.3l0.46,-0.2l-0.37,-1.15l0.68,-1.49l-0.2,-0.82l0.51,-0.85l6.65,0.48l17.71,0.53l62.7,-0.19l0.1,0.98l2.33,3.26l0.43,1.17l-0.67,-1.44l-0.71,-0.51l-0.47,-0.07l-0.38,0.58l0.44,0.56l0.2,1.21l-3.14,-2.41l-0.52,-0.0l-0.45,0.51l-0.02,0.61l1.1,0.64l1.05,1.3l-0.98,0.26l-1.88,-1.43l-0.46,0.4l0.04,0.4l0.96,1.04l-3.05,-1.66l-0.48,0.04l0.25,1.11l1.13,0.92l-0.75,0.23l-0.62,0.79l-1.42,0.29l-0.58,-0.77l-0.86,0.18l-0.62,-2.01l0.74,-2.06l-1.02,-0.84l-0.49,0.55l0.38,0.6l-0.83,1.53l0.05,1.48l0.87,2.01l-0.51,0.93l0.4,0.4l2.68,0.12l2.13,-0.75l0.35,0.74l2.08,0.25l0.38,-0.23l-0.33,-0.71l2.83,-0.29l-0.28,0.86l0.45,0.39l-0.67,0.67l0.51,0.91l-0.71,-0.1l-0.34,0.61l1.09,0.65l-0.06,0.62l-0.95,-0.18l-0.34,0.61l0.46,0.61l1.49,0.43l0.47,-0.25l0.59,-1.5l0.08,-2.69l0.43,-0.27l1.19,0.67l0.75,-1.13l1.01,1.72l-0.31,1.09l0.32,0.72l-0.81,0.42l0.38,1.28l-0.44,0.31l-0.69,-0.08l-0.58,-0.85l-0.39,0.23l-0.17,0.99l-1.28,1.07l0.02,0.44l-0.62,0.81l-0.76,0.31l-0.15,0.73l-0.93,0.55l-0.91,-0.04l-0.45,-0.41l-0.56,0.29l-0.61,-0.8l-0.72,-0.09l-0.17,-0.68l-0.49,-0.32l-0.55,0.2l-0.13,0.74l-0.48,0.07l-0.69,-1.06l1.15,-0.28l0.23,-0.48l-0.44,-0.57l-1.79,-0.16l-1.2,0.57l-0.19,0.4l0.59,0.47l0.04,0.82l-0.31,-0.28l-1.62,0.31l-4.85,-1.94l0.14,1.02l0.75,0.57l0.14,0.52l1.37,0.18l1.3,0.81l4.87,1.53l0.26,0.36l-0.11,0.3l-0.83,-0.15l-2.08,1.33l0.17,0.66l1.4,0.37l-2.74,2.05l-1.41,-0.28l-1.87,-1.38l-0.83,-1.03l-1.02,-0.12l-0.03,0.47l2.19,3.15l3.26,1.37l1.9,-1.34l1.25,0.94l0.52,-0.47l-0.28,-0.69l0.6,0.26l0.41,0.77l1.55,-0.32l0.07,0.62l-1.05,0.16l-0.15,0.68l-1.19,1.14l-0.16,0.59l-0.46,-0.12l0.03,-0.65l-0.83,-0.7l-0.51,0.36l-0.04,0.58l-0.39,-0.6l-0.71,-0.01l-0.97,0.61l-0.11,0.53l-1.72,-0.14l-2.67,0.88l-0.34,-0.83l-0.62,-0.46l-0.47,0.39l0.13,0.95l-0.46,-0.09l-1.42,1.79l-0.92,0.47l-0.31,-0.24l0.46,-0.39l0.14,-0.7l-0.67,-0.87l-0.01,-0.48l-1.41,-0.65l-0.25,0.42l0.13,1.0l0.7,0.9l-0.78,0.09l-0.25,0.65l0.95,1.08l-2.1,0.88l-2.17,1.71l-2.55,2.96l-0.76,1.75l-0.49,-1.32l-0.48,-0.28l-0.4,0.4l0.2,3.26l-0.93,1.57l-3.31,-0.56l-1.33,0.25l-0.64,-0.7l-0.68,0.73l-1.83,0.55l-0.47,-0.13l-16.8,-15.95l-17.44,-0.54l-0.1,-2.25l-2.31,-2.76l-1.63,0.76l0.18,-0.9l-0.65,-0.61l-20.21,-0.86l-0.52,-0.31l-0.96,0.74l-3.73,0.94l-0.97,0.84l-0.87,-0.09l-4.54,1.41l-18.61,0.23l0.35,-3.52l0.7,-0.61ZM760.79,249.51l0.03,0.14l0.02,0.05l-0.09,-0.12l0.04,-0.08ZM753.41,270.45l0.07,-0.12l0.03,0.03l-0.1,0.09ZM751.16,269.88l0.0,-0.07l0.05,0.06l-0.05,0.01ZM759.04,242.8l0.28,-0.11l0.01,0.2l-0.23,0.0l-0.06,-0.09Z",name:"North Carolina"},"US-ND":{path:"M427.57,7.98l1.98,6.4l-0.86,2.32l0.53,2.21l-0.32,1.08l0.43,1.83l-0.09,3.01l1.37,3.67l0.44,0.49l-0.1,0.88l0.36,1.41l0.64,0.71l1.39,3.43l-0.17,3.52l0.41,0.66l0.23,7.56l0.49,1.43l0.49,0.23l-0.57,2.31l0.31,1.49l-0.21,1.58l0.68,1.04l0.13,1.95l0.46,1.02l1.76,2.34l0.07,1.94l0.6,2.22l-0.3,1.19l0.21,1.52l-115.63,-0.01l-0.04,-59.42l105.29,-0.0Z",name:"North Dakota"},"US-NE":{path:"M408.26,124.49l3.79,2.38l3.79,1.69l1.29,-0.16l0.51,-0.4l0.36,-0.91l0.48,-0.16l2.42,0.34l1.3,-0.38l1.54,0.25l3.39,-0.47l2.26,1.76l1.36,0.16l1.49,0.7l1.41,0.11l0.83,0.97l1.37,0.17l-0.03,0.85l1.57,1.83l3.18,0.61l-0.13,2.11l1.02,1.71l-0.07,1.96l1.09,0.98l0.26,1.47l1.61,1.29l-0.01,1.57l1.35,1.81l-0.56,1.94l0.3,2.63l0.5,0.53l0.84,-0.13l-0.04,1.02l1.11,0.48l-0.47,1.89l0.2,0.48l0.96,0.35l-0.54,0.57l-0.11,1.17l0.83,0.69l-0.06,2.83l0.57,0.74l0.2,1.59l-0.26,1.1l0.17,0.62l-0.55,0.73l-0.0,0.73l0.39,0.76l1.14,0.58l0.14,2.11l0.98,0.44l0.01,0.67l0.97,2.26l-0.24,0.85l1.1,0.25l0.71,0.86l0.98,0.21l-0.15,0.82l1.11,1.41l-0.23,0.91l0.27,0.7l-102.62,0.0l-0.01,-18.02l-0.4,-0.4l-30.75,-0.0l0.01,-36.57l86.07,0.0Z",name:"Nebraska"},"US-LA":{path:"M477.94,321.98l0.03,-17.03l43.91,-0.05l0.27,0.67l1.14,0.56l-0.86,0.95l-0.38,1.7l0.39,0.66l0.93,0.24l-1.0,0.21l-0.49,0.67l0.28,1.13l0.81,0.73l-0.11,1.66l1.57,1.18l0.31,0.87l1.14,0.38l-0.82,0.85l-0.88,1.73l-0.61,-0.02l-0.54,0.41l-0.08,0.61l0.47,0.65l-0.25,0.79l-1.21,0.65l-1.05,1.39l-1.19,0.42l-0.66,0.63l-0.85,1.85l-0.46,2.69l-1.42,1.25l-0.0,1.02l0.44,0.79l-0.46,1.76l-1.46,0.13l-0.45,0.44l0.63,1.33l-0.29,1.07l0.68,1.17l-1.02,0.8l-0.13,0.45l0.38,0.27l29.52,0.0l-1.37,3.25l-0.37,1.76l0.77,2.2l1.02,0.67l0.87,1.18l0.66,2.67l0.69,1.39l-1.44,0.13l-0.64,-1.01l-1.06,0.11l-0.92,-0.56l-1.24,0.01l-0.38,-0.76l-0.97,-0.81l-2.33,-0.61l-1.11,0.41l-2.53,2.68l-0.43,0.72l-0.03,0.98l1.04,1.28l3.42,0.98l2.85,-0.51l1.8,-1.57l1.0,0.77l1.32,-0.19l-0.37,0.4l-1.38,0.04l-0.41,0.5l-0.06,0.78l0.52,0.97l1.21,0.15l0.75,0.97l0.6,0.22l1.29,-0.42l0.49,-0.86l0.09,-1.02l0.8,-0.35l0.51,-0.68l-0.23,0.95l0.36,0.72l-0.14,0.34l1.1,1.18l-0.14,0.73l-1.28,-0.68l-1.03,1.39l-0.67,0.03l-0.46,0.39l-0.09,0.81l-1.07,-0.49l-0.44,0.15l0.0,0.47l0.71,0.72l-1.31,-0.06l-0.33,0.38l1.4,2.15l2.08,0.95l-0.14,0.91l0.27,0.38l1.72,-0.06l1.27,0.93l1.1,-0.13l0.39,0.63l1.1,-0.18l0.65,0.67l-0.35,0.51l1.09,0.82l-0.3,0.43l0.28,0.52l-0.23,0.41l-0.84,0.88l-0.69,-1.07l-0.62,-0.05l0.11,-0.61l-0.37,-0.43l-0.7,-0.37l-0.53,0.41l0.05,0.91l-0.36,0.24l-0.12,-0.78l-0.99,-1.21l0.02,-0.69l-2.09,-0.04l-0.78,-0.71l-1.69,-0.25l0.21,-1.14l-0.45,-0.57l-0.78,-0.11l0.19,-0.65l-0.32,-0.36l-2.06,0.13l-1.99,-1.18l-1.01,-0.14l-0.47,-0.51l-0.61,0.12l-0.28,0.39l-0.16,1.07l1.35,0.9l1.24,0.34l-0.18,1.74l-0.73,1.21l0.54,0.86l-0.82,0.91l-1.05,0.58l-0.49,-0.85l0.28,-1.1l-0.22,-0.8l-0.43,-0.21l-0.34,0.24l-0.88,-0.92l-0.48,0.22l-0.51,-0.8l-0.53,-0.22l-0.65,0.97l-0.7,0.13l-0.67,-0.47l-0.78,0.38l-0.15,0.53l0.3,0.39l-0.51,0.27l-0.23,1.08l-0.71,0.67l-0.63,-0.06l-0.08,-0.42l-1.31,-0.48l-0.71,0.67l-1.43,-0.84l-0.24,-0.44l-0.86,-0.06l-0.29,0.42l-0.68,-0.42l0.32,-1.03l-0.16,-0.76l-1.52,-1.16l-0.65,-1.02l-0.01,-0.64l0.73,-1.12l-0.27,-0.71l-0.75,-0.24l-0.83,1.4l0.01,0.63l-1.29,-0.41l-0.34,-0.73l-1.6,0.42l-0.47,-1.74l-1.02,0.07l0.13,-1.17l-0.37,-0.63l-2.36,-0.14l-0.97,0.44l-0.13,-0.38l0.72,-0.21l0.01,-0.66l-0.49,-0.56l-0.86,-0.15l-0.73,0.25l-0.77,-0.16l-0.4,0.6l-1.67,0.69l-0.86,-0.16l-0.82,0.49l0.35,1.12l0.67,0.35l0.53,1.08l-2.38,0.9l-6.14,-1.17l-5.33,-2.18l-2.81,-0.71l-5.66,0.17l-4.12,0.92l-0.62,-0.97l0.98,-0.29l0.73,-0.77l0.34,-1.77l-0.4,-0.75l0.96,-1.08l0.3,-1.26l-0.3,-1.48l0.13,-1.14l-0.52,-0.62l-0.1,-0.76l0.81,-1.67l-0.42,-1.54l1.69,-2.42l0.82,-2.19l-0.06,-1.13l0.53,-0.71l-0.51,-1.04l0.65,-0.25l0.2,-0.69l-0.62,-0.83l0.13,-1.68l-0.89,-0.31l-0.38,-1.2l-0.71,-0.69l0.29,-1.0l-1.28,-1.69l0.14,-0.77l-1.55,-1.26l0.27,-1.89l-0.48,-1.59l-1.01,-1.62l-2.07,-1.84ZM551.74,371.8l0.02,0.12l-0.08,0.01l0.06,-0.14ZM544.8,354.82l0.12,-0.23l0.16,-0.01l-0.02,0.15l-0.25,0.09ZM522.04,368.98l-0.59,-0.1l-1.13,-0.64l0.79,-0.72l0.86,0.54l0.07,0.9ZM509.25,363.33l1.37,-0.61l2.34,1.02l-0.58,0.86l-0.48,0.08l-2.65,-1.36Z",name:"Louisiana"},"US-SD":{path:"M322.14,86.28l0.28,-0.51l-0.1,-17.57l115.48,0.01l-0.22,1.43l-0.8,1.48l-3.03,2.09l-0.48,1.15l2.56,3.84l2.29,0.6l0.99,0.77l0.53,0.9l0.0,33.78l-1.81,0.02l-0.43,0.55l0.19,1.26l0.82,0.98l-0.04,1.19l-0.64,0.31l0.11,1.34l0.47,0.42l1.05,0.07l0.26,1.39l-0.18,0.74l-0.64,0.7l-0.05,1.5l-0.75,2.03l-0.49,0.37l-0.73,1.62l0.46,1.03l1.19,0.91l-0.13,0.55l0.52,0.46l0.37,1.03l-1.59,-0.29l-0.29,-0.79l-0.79,-0.65l0.2,-0.45l-0.28,-0.6l-1.52,-0.24l-0.97,-1.04l-4.27,-0.96l-2.27,-1.76l-3.69,0.42l-1.6,-0.25l-1.19,0.37l-2.53,-0.34l-0.97,0.4l-0.76,1.22l-0.72,0.03l-3.55,-1.62l-3.97,-2.46l-86.24,-0.0l-0.05,-37.4Z",name:"South Dakota"},"US-DC":{path:"M742.85,200.74l-0.28,-0.58l-1.18,-0.76l0.68,-0.63l1.47,1.33l-0.69,0.64Z",name:"District of Columbia"},"US-DE":{path:"M761.97,185.3l0.78,-1.14l1.08,-0.7l1.09,-0.22l1.51,0.24l-0.71,1.4l-1.35,1.08l-0.33,0.82l0.75,1.27l-0.43,1.9l2.78,3.49l0.06,3.4l1.35,1.76l0.13,1.12l2.3,2.48l1.21,0.23l0.12,0.93l-0.54,0.07l-0.52,0.62l0.07,0.72l-1.02,0.55l-0.1,0.71l0.57,0.37l0.92,-0.4l0.84,0.33l0.14,1.2l-9.28,0.03l-1.44,-22.27Z",name:"Delaware"},"US-FL":{path:"M578.2,339.65l39.57,-0.01l0.98,1.61l0.35,2.18l1.15,1.02l40.45,2.62l0.64,1.14l-0.14,0.82l0.29,0.92l0.83,0.57l1.39,0.02l0.86,-0.51l0.6,-3.54l-0.57,-1.3l0.09,-1.35l1.09,-1.12l4.33,1.57l3.3,0.5l-0.13,0.71l-0.55,-0.12l-0.38,0.34l-0.05,1.25l1.43,1.73l0.22,2.66l2.43,9.58l5.03,11.52l3.05,4.86l-1.47,-0.82l-0.55,0.43l1.3,5.83l5.98,13.19l0.57,2.57l1.91,4.44l-1.08,-0.43l-0.31,0.62l0.52,0.63l1.12,0.28l0.94,0.91l1.04,2.52l-0.6,0.59l0.82,0.62l0.38,1.49l-0.24,0.77l0.3,0.82l0.03,2.07l-0.33,0.52l-0.75,6.88l-0.42,0.78l0.24,0.61l-0.12,2.32l-0.86,1.01l-0.31,1.67l-0.73,0.38l-0.99,1.93l-0.59,2.4l0.37,1.66l-1.55,1.94l-2.22,-0.06l-0.46,0.7l-0.72,0.14l-0.94,0.77l-1.08,-0.08l-0.17,-0.32l-0.99,-0.25l-0.85,0.65l-2.54,0.36l-0.65,-0.57l-0.36,-0.85l0.28,-1.22l2.25,2.01l1.19,-0.35l0.19,-1.12l-1.08,-1.13l-2.39,-1.02l-0.38,-1.35l-0.52,-0.62l0.28,-0.75l-0.77,-0.34l-0.65,-1.99l-0.82,-0.41l-0.18,-0.42l0.24,-0.73l-0.45,-0.6l-2.13,-1.37l-2.71,-0.75l-0.31,-0.71l-0.63,-0.01l-0.9,-2.31l-0.44,-0.26l-0.66,-4.97l-0.87,-1.01l-0.31,0.67l-0.7,-0.29l0.97,-0.82l0.36,-1.04l1.72,-1.67l-0.52,-0.5l-1.26,0.51l-0.9,0.86l-0.65,1.56l-0.98,0.08l0.05,-1.0l-0.41,-1.11l0.42,-2.67l-0.12,-0.62l-0.44,-0.36l1.48,-0.83l0.24,-0.6l-0.49,-0.52l-2.63,0.99l-1.68,-1.3l-0.51,0.62l1.13,1.17l0.66,1.6l-1.74,-0.5l-0.41,-1.29l-0.81,-0.65l-1.13,-2.17l-0.48,-1.89l-0.85,-0.8l0.19,-0.64l-0.5,-1.52l-1.21,-1.0l0.12,-0.35l0.84,-0.26l-0.13,-0.44l0.37,-0.46l-0.24,-0.32l0.48,-0.86l2.6,-3.04l-0.46,-2.05l-0.54,-0.52l-0.82,0.19l-0.34,0.46l-0.08,1.14l-0.22,-1.94l-1.53,-1.16l-1.26,-0.47l-0.13,1.55l-0.4,0.38l0.16,0.64l1.58,0.71l-0.43,2.4l-2.22,-2.17l-0.33,0.1l-0.12,-0.42l1.11,-3.11l0.15,-1.1l-0.26,-1.12l1.06,-1.73l-0.09,-0.5l0.95,-2.2l0.5,-4.16l-0.03,-3.34l-1.49,-1.34l-0.27,-1.53l-0.62,-0.75l-0.23,-1.19l-0.57,-0.36l-1.98,-0.25l-1.26,0.21l-0.67,-1.47l-1.14,-0.57l-0.94,-1.83l-2.76,-1.94l-0.05,-2.19l-2.31,-1.29l-0.67,-1.52l-1.5,-1.8l-5.33,-3.15l-2.46,0.35l-0.8,-0.41l-2.47,1.02l-0.59,0.92l-0.93,-0.07l-0.2,0.26l0.55,1.01l-1.08,0.03l-2.28,1.2l-1.34,1.08l-1.38,0.56l-0.07,-0.74l-0.58,-0.11l-1.96,1.46l-1.8,-0.09l-2.43,0.5l-0.16,-2.01l-0.95,-1.52l-1.64,-1.0l-0.14,-0.36l0.58,0.07l0.78,-0.41l0.13,-0.69l-1.12,-0.46l-0.24,0.18l-0.16,-1.03l-0.43,-0.4l-1.18,0.31l-1.67,-0.79l0.54,-0.65l0.71,-0.01l1.04,-1.1l-0.66,-0.88l-0.46,0.05l-0.52,0.7l-1.03,0.25l-0.44,-0.72l-0.7,-0.01l-1.37,0.67l-0.15,0.78l-2.87,-1.4l-2.76,-0.78l0.41,-0.28l1.2,0.51l0.65,-0.14l0.16,-0.51l-0.62,-0.92l0.13,-0.51l-0.57,-0.38l-0.39,0.18l-0.14,-0.34l-1.65,-0.12l-1.69,0.41l-0.22,-0.76l-1.3,-0.09l-0.21,0.92l-1.66,0.86l-4.03,0.19l-0.15,-0.78l-1.51,-0.81l0.5,-0.22l0.12,-0.75l-1.16,-0.79l-0.47,0.06l-0.43,1.77l-1.03,-1.36l-0.67,-0.12l-0.39,0.62l0.47,1.44l-0.29,0.55l-1.21,0.58l-0.21,0.8l-0.72,0.55l-0.96,0.2l0.03,-0.69l0.99,-0.62l0.2,-0.52l-0.3,-0.67l-0.94,-0.31l-0.23,-0.65l0.53,-2.37l-1.76,-1.3l-1.65,-2.04l0.38,-1.85ZM588.21,349.05l-0.18,0.02l0.09,-0.07l0.09,0.05ZM605.56,352.7l0.56,-0.09l0.13,0.58l-0.69,-0.48ZM684.75,377.74l1.13,1.61l-0.56,0.4l-1.05,-0.31l0.48,-1.69ZM687.23,382.04l0.13,0.21l-0.24,0.29l0.11,-0.51ZM609.62,355.21l-0.09,-0.07l0.02,0.01l0.07,0.07ZM685.36,383.9l-0.42,-2.39l1.1,-0.96l-0.63,2.19l-0.06,1.16ZM616.12,362.01l0.09,-0.07l0.16,0.02l-0.07,0.15l-0.18,-0.1Z",name:"Florida"},"US-WA":{path:"M0.51,24.18l0.56,-0.88l-0.13,-0.65l0.58,-1.51l-0.94,-1.12l1.74,0.37l4.4,2.19l1.03,0.05l2.85,1.64l4.18,0.48l1.28,-0.22l1.0,0.45l0.77,0.12l0.55,-0.28l1.92,0.61l1.63,0.08l1.35,-0.04l1.06,-0.79l0.71,0.13l0.66,0.54l0.26,1.11l0.74,0.54l0.71,-0.44l-0.11,-0.64l0.51,-0.07l1.0,1.09l-0.27,0.57l0.44,0.4l0.54,-0.15l0.54,-0.91l-0.84,-1.3l0.79,-0.46l-0.15,0.86l2.34,3.58l-1.72,2.17l-0.1,-1.26l-0.3,-0.33l-1.24,0.56l-0.2,0.84l0.31,0.8l-0.95,1.78l-1.67,1.65l-0.73,1.48l-0.8,0.81l-0.71,1.74l0.13,0.69l0.74,0.38l0.98,-0.1l2.68,-1.02l1.09,-0.78l-0.19,-0.7l-0.67,-0.06l-2.8,1.34l-0.46,-0.17l2.4,-3.66l2.89,-1.44l0.54,-1.54l1.43,-1.78l0.69,0.43l0.47,-0.3l-0.21,-1.67l1.02,2.75l-1.06,0.0l-0.47,0.85l-0.64,-0.59l-0.53,-0.05l-0.24,0.7l0.49,0.58l0.45,1.51l-0.55,-1.04l-0.67,-0.05l-0.31,0.74l0.12,0.72l0.6,0.48l-0.46,0.59l0.08,0.44l0.44,0.09l1.61,-0.89l0.5,0.93l-0.64,1.76l0.16,0.97l-0.65,0.83l0.37,0.79l-1.03,-0.4l0.74,-1.51l-0.45,-0.82l-1.7,1.36l-0.28,0.72l-0.55,-1.9l-0.5,0.11l-0.65,1.62l-1.14,0.74l-0.69,1.89l-1.46,0.59l-0.36,0.49l0.06,1.13l1.11,-0.26l-0.15,0.34l0.36,0.31l0.94,-0.2l0.25,0.61l0.63,0.29l0.44,-0.39l-0.05,-1.63l0.22,0.38l0.8,-0.36l1.47,1.12l1.17,-0.82l1.3,-1.65l0.62,-1.61l0.87,0.58l0.73,-0.03l0.39,-0.29l-0.24,-0.77l1.42,-0.78l0.14,-0.95l-0.65,-1.05l-0.06,-1.1l-0.52,-1.17l0.21,0.25l0.69,-0.2l0.08,-0.91l-0.39,-0.64l-0.83,-0.37l0.59,-1.17l-0.35,-1.57l0.95,-1.34l0.29,-1.34l1.53,-0.77l0.52,-1.25l-0.61,-0.51l-0.53,0.11l-1.23,-1.0l-0.34,-1.89l-0.47,-0.73l0.29,-0.74l-0.15,-0.82l-1.62,-1.31l-0.75,-0.22l-0.31,-0.51l0.03,-0.49l0.68,0.13l0.46,-0.41l-0.16,-1.66l0.73,-0.4l0.07,-0.99l-1.19,-1.96l0.3,-0.88l-0.27,-0.47l-1.19,-0.57l-0.9,0.53l-1.83,-2.2l0.53,-1.79l87.87,0.0l-0.09,51.26l1.6,2.52l0.5,1.69l-0.77,1.35l1.04,1.45l-32.44,0.04l-1.5,0.99l-7.46,0.41l-1.47,1.1l-4.21,0.66l-3.07,0.98l-1.49,0.96l-3.63,0.51l-2.61,-0.35l-0.79,0.57l-3.33,1.11l-2.25,-0.21l-1.59,0.58l-1.06,-1.42l-5.47,-0.65l-2.32,0.37l-1.68,-0.13l-2.43,1.48l-4.33,1.42l-4.34,-1.06l-1.96,-0.06l-0.91,-0.79l-0.08,-1.99l-0.4,-0.73l0.09,-1.04l-0.52,-2.02l-0.69,-0.73l-0.69,-1.61l-0.82,-0.7l-2.84,-1.29l-1.61,0.15l-1.26,0.53l-2.76,-2.39l-2.09,0.26l-0.65,-0.14l-0.86,-0.72l-1.15,0.53l-0.51,-0.12l-1.19,0.82l-1.52,-1.31l-0.97,0.02l0.08,-1.0l1.12,0.4l0.85,-0.94l0.71,0.48l0.67,-0.19l-0.04,-0.78l-1.32,-1.04l0.62,-0.87l-0.41,-1.15l0.35,-0.51l-0.35,-0.82l0.77,-0.38l0.75,0.68l0.83,-0.47l-0.24,-0.66l-1.93,-1.27l-1.82,0.35l-0.07,0.31l-1.04,-0.55l-0.14,-1.4l0.82,0.33l0.46,-0.18l0.16,-0.6l-0.28,-0.51l3.14,-1.19l0.06,-0.74l-2.92,-0.54l-0.27,-0.68l-0.81,-0.35l-1.39,0.04l-0.87,-4.23l-0.85,-1.03l0.06,-0.69l-0.64,-0.3l-0.49,-3.56l-1.12,-3.87l-0.84,-0.78l-0.31,-0.86l-2.21,-1.69l-0.81,-3.83l-0.54,-1.04ZM30.48,41.84l0.32,0.59l-0.26,0.59l-0.27,-0.86l0.21,-0.32ZM35.25,22.66l-0.36,0.86l-0.01,0.6l-0.21,-1.34l0.59,-0.13ZM33.93,18.37l-0.07,-0.02l0.02,-0.03l0.05,0.05ZM33.12,18.43l-0.73,0.49l0.22,-0.67l-0.19,-0.49l0.21,-0.13l0.48,0.79ZM31.38,22.33l1.22,-2.18l0.53,-0.13l0.2,0.62l0.79,0.57l-1.04,-0.24l-0.46,0.52l-0.38,-0.01l-0.18,0.73l-0.67,0.13ZM31.87,23.4l0.4,-0.07l0.76,0.32l0.15,0.25l-0.9,-0.02l-0.41,-0.47ZM33.48,25.47l0.04,0.64l0.0,0.04l-0.13,-0.25l0.09,-0.43ZM34.41,27.63l0.01,0.0l0.07,-0.04l-0.06,0.06l-0.02,-0.02ZM34.75,27.37l0.2,-0.89l1.4,0.91l0.37,0.92l-0.24,0.37l-0.42,0.01l-0.43,-1.16l-0.87,-0.15ZM34.93,39.25l0.08,-0.98l0.17,-0.28l0.23,0.9l-0.48,0.35ZM34.09,35.0l-0.16,-0.88l0.3,-0.48l0.16,1.5l-0.29,-0.14ZM31.5,44.2l0.13,-0.22l0.06,0.01l-0.04,0.22l-0.15,-0.0ZM27.61,14.38l0.4,-0.42l0.54,1.31l-0.26,-0.0l-0.68,-0.88ZM29.24,13.74l1.05,0.53l-0.56,0.43l-0.49,-0.96ZM28.74,16.72l0.04,0.3l-0.04,0.7l0.1,0.46l-0.55,-0.25l0.45,-1.21ZM29.09,18.49l0.18,0.12l0.31,-0.0l-0.44,0.01l-0.05,-0.13ZM28.61,42.52l0.03,-0.11l0.06,0.2l-0.05,-0.05l-0.04,-0.05ZM26.36,17.65l-1.36,-0.54l-0.27,-1.59l1.61,1.0l0.27,0.38l-0.25,0.75Z",name:"Washington"},"US-KS":{path:"M459.05,181.37l0.38,0.54l1.64,0.89l2.09,-0.8l-0.04,0.62l0.95,0.67l0.07,1.13l-0.78,-0.2l-0.58,0.25l-0.21,0.78l-1.13,1.11l-0.12,0.9l-0.76,0.44l0.02,0.58l1.35,1.82l1.76,1.33l0.14,0.92l1.0,1.22l0.27,0.96l1.71,0.84l1.39,0.28l0.0,38.17l-114.68,0.0l-0.18,-53.55l104.23,0.0l1.48,1.09Z",name:"Kansas"},"US-WI":{path:"M588.15,78.41l0.26,0.11l0.6,-0.13l-0.23,0.6l-0.58,-0.06l-0.05,-0.52ZM582.48,85.4l0.54,-0.34l0.56,-1.99l0.61,0.1l0.91,-0.58l0.62,-1.36l0.51,-0.51l0.64,0.06l0.01,0.25l-0.75,-0.05l-0.26,0.5l-0.01,1.05l-0.39,0.11l-0.19,0.58l0.43,0.52l-0.81,0.72l-0.95,1.58l-0.16,1.1l-1.29,1.83l-0.46,0.08l-0.72,-0.93l-0.09,-0.61l0.5,-1.29l0.76,-0.84ZM497.3,84.67l0.76,-1.0l-0.33,-1.37l0.18,-1.64l0.79,-0.97l0.71,-1.98l-1.42,-2.7l-2.12,-0.47l-0.03,-1.98l1.86,-1.87l0.03,-0.72l0.88,-1.28l2.08,-0.83l0.55,-0.63l1.01,-0.15l0.53,-0.64l1.19,-0.03l1.21,-1.36l0.01,-10.82l1.08,-0.23l0.33,-0.97l0.87,-0.83l0.77,0.7l1.65,0.69l2.73,-0.3l3.51,-1.15l2.79,-0.52l2.53,-1.76l0.3,0.33l1.39,0.02l1.44,-1.22l0.88,-0.47l1.08,0.02l0.51,-0.44l1.0,0.96l-0.64,1.4l-0.77,0.78l-0.17,0.9l0.23,0.62l-1.29,1.5l0.01,0.92l1.17,0.12l1.94,-0.73l0.76,-0.69l2.12,1.3l2.34,0.62l0.41,0.53l0.88,-0.06l1.58,0.79l1.89,3.35l15.51,3.74l4.48,2.21l1.73,0.03l1.58,0.54l1.45,-0.38l3.12,0.97l2.2,0.32l0.82,0.46l0.43,0.81l-0.56,0.9l0.33,0.78l3.35,0.93l1.22,1.1l-0.21,0.62l0.45,1.02l-0.46,0.68l0.27,1.13l-0.94,1.0l-0.26,1.59l0.83,0.67l1.4,-0.07l1.15,-0.52l0.13,0.19l-1.09,2.02l-0.13,1.19l1.15,1.46l0.73,0.37l-0.44,1.65l-2.57,0.77l-0.61,0.63l-0.13,1.1l-2.05,2.86l-0.83,3.08l1.0,0.84l1.42,-0.19l0.66,-1.13l2.0,-1.07l1.0,-2.14l1.3,-1.36l0.53,0.24l1.62,-0.81l1.53,1.34l-0.56,1.79l-1.55,2.33l-1.29,4.77l0.08,1.01l0.67,1.31l-2.07,1.78l-1.36,3.27l-0.19,2.25l0.55,1.12l-0.09,1.02l-1.45,2.64l-0.15,1.82l-0.97,1.72l-0.59,2.09l0.32,1.82l-0.19,1.15l0.4,0.51l-0.4,1.43l0.79,0.76l0.22,2.12l0.97,1.43l-0.63,2.6l0.09,2.5l-43.11,-0.37l-0.13,-0.67l-1.32,-2.01l-4.71,-1.12l-0.88,-1.2l-0.2,-1.46l-0.77,-1.11l-0.39,-4.21l1.25,-2.12l0.02,-0.9l-0.64,-0.79l-1.36,-0.52l-0.52,-1.54l0.09,-5.2l-0.57,-1.28l-0.29,-2.27l-1.09,-0.63l-0.95,-1.44l-0.91,-0.17l-1.09,-0.74l-1.7,-0.06l-2.49,-1.75l-1.98,-3.19l-2.45,-2.02l-2.88,-0.67l-0.62,-1.12l-1.04,-0.95l-3.07,-0.6l-3.28,-2.59l0.52,-1.01l0.01,-1.43l0.31,-0.7l-0.63,-2.73ZM533.53,46.46l0.1,-0.3l0.02,0.18l-0.12,0.12ZM529.43,50.95l0.1,-0.06l0.01,0.03l-0.12,0.03Z",name:"Wisconsin"},"US-OR":{path:"M3.26,127.2l1.64,-3.58l0.91,-4.41l-0.16,-0.95l0.31,-0.27l0.22,0.65l0.71,-0.1l0.12,-1.0l0.63,-0.88l0.46,0.74l1.37,-0.07l0.19,-0.41l-0.76,-0.45l-0.54,-1.34l-0.81,0.25l1.01,-3.51l0.87,-0.89l0.87,0.17l0.44,-0.43l-0.98,-1.06l-0.63,-0.12l0.53,-3.95l0.3,-0.43l-0.19,-0.84l0.32,-4.99l0.42,-1.85l0.49,0.21l0.55,-0.47l-0.38,-0.82l-0.6,-0.15l0.25,-2.45l0.83,-0.04l0.11,-0.47l-0.29,-0.44l-0.55,-0.12l-0.2,-2.51l0.85,-2.63l0.06,-2.75l0.66,-1.73l0.17,-2.87l-0.32,-0.88l0.87,-1.15l-0.71,-1.46l0.69,0.44l0.44,-0.08l0.22,-0.85l-0.19,-1.01l-0.9,-0.5l0.18,-1.07l1.06,-0.95l-0.04,-0.46l-1.0,-0.28l-0.52,-0.82l0.28,-2.08l-0.4,-1.21l0.73,-0.68l0.18,-0.87l-0.86,-3.19l0.71,0.64l1.0,0.15l0.19,0.8l0.67,0.32l0.55,-1.04l-0.47,-0.77l1.28,0.51l1.51,-0.33l1.3,-0.91l2.03,1.73l2.15,0.25l1.21,-0.88l0.94,-0.14l2.11,0.94l1.02,0.73l0.67,1.6l0.61,0.57l0.46,1.75l-0.08,1.14l0.41,0.77l-0.01,1.6l0.62,1.22l0.97,0.56l2.06,0.08l4.3,1.06l4.76,-1.47l2.65,-1.5l1.24,0.21l2.24,-0.37l4.55,0.39l0.82,0.34l0.44,0.94l0.68,0.4l1.78,-0.6l2.24,0.21l3.64,-1.2l0.62,-0.5l2.37,0.39l3.85,-0.55l1.59,-1.0l2.97,-0.94l4.19,-0.65l1.41,-1.09l7.39,-0.4l1.58,-0.98l32.57,-0.04l0.56,1.53l1.26,1.46l3.31,1.44l1.26,2.3l0.02,0.83l-2.88,4.52l-0.16,1.31l-0.91,2.47l-1.77,2.43l-0.17,2.42l-1.14,1.8l-1.77,1.37l-1.46,3.46l-1.24,1.32l-0.2,1.43l0.17,2.1l0.46,0.78l0.66,0.44l0.84,-0.43l0.76,0.57l0.85,-0.18l0.33,0.84l0.82,0.54l-0.22,0.87l-0.62,0.15l-0.27,0.45l0.53,1.49l-0.55,2.34l-0.93,1.44l0.21,33.96l-111.37,0.0l-2.06,-1.77l-0.33,-2.0l-0.83,-2.07l0.49,-5.4l-0.34,-1.07l-0.6,-0.44l-0.42,-0.9l-0.46,-0.17l-0.52,-1.45Z",name:"Oregon"},"US-KY":{path:"M549.96,242.79l0.47,-1.55l1.03,0.93l1.2,-0.07l1.52,-2.93l0.14,-1.08l-0.28,-0.95l0.42,-0.65l0.09,-1.66l-0.91,-1.61l1.43,-2.02l1.01,-0.58l1.26,0.05l5.4,2.57l1.57,-0.01l0.92,-1.45l-0.05,-0.75l-1.17,-2.26l0.32,-1.25l0.39,-0.36l1.01,-0.04l4.64,-1.37l0.28,-1.01l-1.14,-1.81l0.01,-0.48l1.41,-1.43l0.28,-0.91l1.05,0.46l1.18,-0.97l-0.37,-1.69l1.6,0.94l1.6,-0.48l-0.1,0.87l0.89,0.54l1.01,-0.67l0.23,-1.03l0.98,0.01l1.22,-0.46l3.77,1.7l0.48,0.82l0.77,0.24l0.62,-0.44l0.96,-1.94l1.31,-0.28l1.42,-0.93l0.61,1.13l0.65,0.43l0.98,0.04l0.07,0.6l0.84,0.27l0.71,-0.46l0.15,-0.77l0.99,-0.39l0.17,-1.92l0.79,-0.21l0.45,-0.97l1.16,-0.32l0.42,-0.53l0.11,1.2l0.49,0.58l1.24,0.69l1.12,0.15l0.89,0.78l0.51,-0.03l1.94,-1.16l0.52,-2.83l1.06,-1.64l0.88,0.29l1.57,-0.78l1.15,-2.71l1.0,-0.17l1.82,-1.61l0.12,-0.76l-0.66,-2.39l2.58,-0.11l1.28,0.85l3.91,-1.79l2.1,-0.08l0.03,-0.97l0.53,-1.14l-0.27,-0.41l-0.98,-0.16l0.64,-1.04l-0.76,-1.33l1.74,-1.24l1.48,1.2l2.76,-0.54l0.58,0.82l1.51,0.66l1.49,3.6l2.26,0.9l1.79,-0.2l1.43,0.44l2.5,2.28l1.18,0.04l0.78,-0.99l0.96,-0.29l2.35,0.81l1.03,1.07l1.25,-0.38l1.3,0.09l2.06,-1.8l1.7,-0.58l0.44,1.99l0.5,0.8l2.09,1.03l1.05,0.98l0.48,0.92l0.27,2.74l-1.01,1.84l1.59,2.49l1.05,0.93l-0.14,0.86l0.87,0.68l0.33,1.23l1.23,1.28l0.51,1.36l1.87,1.09l0.78,1.06l1.67,0.53l-5.17,4.02l-5.18,2.57l-0.54,0.68l0.01,0.98l-2.15,1.24l-0.21,1.29l-2.96,0.86l-1.13,1.79l-1.55,0.23l-2.66,1.07l-1.54,0.15l-3.36,1.45l-21.59,-0.7l-11.61,-0.07l-9.96,-0.63l-20.55,0.35l-0.52,-0.51l-3.24,-0.3l-0.47,0.51l0.52,2.89l-20.58,-0.01ZM547.47,242.76l0.02,-0.31l0.36,0.03l0.07,0.27l-0.46,0.01Z",name:"Kentucky"},"US-CO":{path:"M352.54,179.89l0.18,53.95l-108.22,0.0l0.0,-71.98l108.03,0.0l0.01,18.02Z",name:"Colorado"},"US-OH":{path:"M641.88,148.26l1.51,0.54l0.97,-0.11l1.4,1.11l1.98,0.56l1.19,1.2l1.14,0.38l-1.83,0.6l-0.22,0.44l0.38,0.32l2.27,0.52l1.5,-0.7l1.71,0.06l3.03,1.32l0.87,0.07l1.61,-0.85l1.73,-0.22l3.23,-1.12l2.47,0.39l1.14,-0.34l1.17,0.15l1.15,-0.49l5.0,-3.83l4.92,-2.12l7.36,-2.44l0.0,23.99l-1.82,0.48l-0.58,0.73l1.1,2.18l-0.39,1.69l0.43,1.09l-1.17,1.94l-0.91,2.56l-0.45,2.53l-0.58,0.29l0.09,0.96l-1.08,1.7l-0.06,0.4l0.51,0.78l-0.57,1.42l-2.67,1.74l-1.1,1.38l-1.52,0.99l-1.93,0.81l-0.62,-0.88l-1.11,-0.08l-1.52,1.2l-0.33,1.05l-1.5,0.2l-1.26,1.65l-0.15,1.6l-1.0,0.58l0.66,1.08l-0.03,0.93l-0.68,0.06l-0.38,0.83l-0.35,0.39l0.25,-0.68l-0.62,-1.21l-1.3,-0.69l-1.18,0.48l-1.03,1.43l-0.76,2.1l-0.64,0.63l0.49,3.05l-1.4,0.26l-0.97,2.65l-2.48,0.52l-0.9,-0.1l-0.5,-0.95l-1.19,-1.13l-1.99,-0.94l-0.81,-2.64l-0.64,-0.44l-2.27,0.74l-1.2,0.88l-0.53,0.79l-1.32,-0.08l-0.88,0.37l-0.84,-0.97l-2.76,-0.93l-1.36,0.39l-0.68,0.94l-0.65,-0.06l-2.41,-2.25l-1.71,-0.5l-1.7,0.21l-1.85,-0.71l-0.27,-1.36l-0.71,-0.88l-0.44,-1.3l-1.68,-0.82l-0.89,-0.97l-2.25,0.63l-0.43,-0.04l-1.45,-1.23l-1.21,0.56l0.27,-46.79l20.21,-0.65ZM651.67,151.7l0.37,-0.44l0.34,0.37l-0.29,0.17l-0.42,-0.1Z",name:"Ohio"},"US-OK":{path:"M385.27,276.77l-0.05,-33.61l-0.39,-0.4l-46.25,-0.01l-0.01,-8.12l129.63,0.0l-0.0,8.59l2.78,19.73l-0.69,30.08l-1.2,-0.52l-1.81,-0.27l-0.89,-0.74l-1.58,-0.31l-1.43,-1.7l-1.06,-0.23l-1.87,-1.33l-1.3,-0.38l-0.73,0.34l-0.26,0.71l-0.67,0.13l-0.45,0.48l-2.11,-0.2l-1.46,-1.24l-2.06,0.94l-1.03,0.14l-0.72,0.62l-1.8,-0.68l-1.5,0.87l-1.81,0.34l-0.75,1.05l-1.27,0.0l-0.52,0.96l-1.01,-1.24l-1.45,-0.15l-0.36,-0.51l-0.94,-0.34l0.04,-0.72l-0.4,-0.45l-1.09,-0.17l-0.69,1.08l-0.53,0.06l-0.72,-0.42l-0.83,0.04l-0.55,-1.2l-0.97,-0.32l-1.05,0.44l-0.43,1.32l-0.57,-0.09l-0.5,0.42l0.17,0.55l-0.41,1.29l-0.33,0.11l-0.65,-1.08l0.38,-1.32l-0.66,-0.75l-0.74,0.13l-0.43,0.57l-0.73,-0.14l-0.82,0.75l-0.91,0.07l-0.42,-1.08l-1.69,-0.18l-0.22,-1.16l-1.07,-0.48l-0.73,0.25l-1.88,1.67l-1.03,0.37l-0.77,-0.28l0.16,-1.4l-0.23,-0.51l-1.98,-0.57l-0.02,-1.67l-0.4,-0.52l-1.85,0.27l-2.18,-0.23l-0.58,0.21l-0.71,0.94l-0.79,0.03l-1.51,-1.43l-0.85,-0.11l-1.3,0.42l-2.3,-0.53l-1.61,-0.82l-0.92,0.19l-2.12,-0.26l-0.12,-1.67l-1.1,-1.5l-1.03,-0.36l-0.6,-0.66l-0.77,0.08l-0.36,1.28l-1.92,-0.55l-0.94,0.47l-0.83,-0.07l-3.28,-3.01l-1.64,-0.29Z",name:"Oklahoma"},"US-WV":{path:"M655.44,213.29l0.99,-1.46l0.05,-1.36l-0.36,-1.19l3.79,-0.66l0.47,-0.55l0.57,-2.19l1.06,0.01l0.48,-0.44l-0.07,-2.17l-0.35,-1.03l0.55,-0.45l0.8,-2.18l0.89,-1.22l0.47,-0.24l1.01,0.62l0.21,0.56l-0.29,0.96l0.58,0.5l0.79,-0.24l0.68,-1.05l0.95,0.17l0.3,-0.4l-0.21,-1.8l-0.52,-0.52l0.8,-0.49l0.08,-1.46l1.01,-1.46l1.59,-0.16l0.44,-1.27l1.16,-0.97l0.4,0.0l0.46,0.74l0.58,0.27l2.36,-0.92l1.67,-1.09l1.05,-1.35l2.94,-2.05l0.61,-1.64l-0.43,-0.94l1.03,-1.77l-0.04,-0.61l0.59,-0.4l0.41,-2.86l1.17,-3.09l0.64,-0.56l0.3,-0.96l-0.42,-1.43l0.34,-1.62l-1.08,-1.8l0.48,-0.3l1.13,-0.14l0.01,16.37l0.4,0.4l15.81,-0.0l-0.16,8.94l0.41,0.46l2.36,-1.65l1.0,-0.29l0.51,-0.76l1.88,-1.32l0.43,-0.79l0.56,-0.23l0.99,0.58l0.73,-0.13l1.73,-1.86l0.64,-0.26l0.11,-0.65l0.33,0.54l1.49,0.73l3.02,0.13l0.91,-0.58l0.43,-1.14l1.9,-0.22l1.28,-1.17l1.23,0.39l1.6,1.34l1.88,0.01l-0.38,0.59l0.3,0.84l1.05,0.62l-0.11,0.79l0.89,0.51l0.02,1.38l-1.27,2.73l-7.17,-5.29l-0.63,0.07l-0.55,0.91l0.01,1.35l-0.82,1.23l-0.09,1.88l-1.73,1.67l-0.74,1.33l-0.76,0.29l-0.6,0.81l-1.21,0.03l-1.78,2.39l-1.49,-0.96l-0.64,0.09l-1.35,1.93l-0.3,1.33l-0.88,0.79l-0.63,1.83l-1.22,1.58l-2.8,-0.85l-0.98,-1.67l-1.49,-0.5l-0.55,0.27l-0.74,2.78l-1.57,2.16l0.01,0.8l-1.87,1.66l-0.45,1.68l-0.84,1.5l-3.18,3.33l-1.27,2.41l-0.01,0.74l0.85,0.57l-1.17,0.87l0.16,0.92l-2.14,1.23l-0.4,-0.61l-0.77,-0.02l-3.23,1.5l-0.81,-0.61l-1.21,-0.01l-0.58,0.69l0.2,0.98l-0.94,0.55l-0.64,-0.16l-2.19,0.43l-1.24,0.57l-1.69,-1.42l-0.65,-0.12l-1.01,1.14l-1.05,0.22l-1.34,0.97l-0.97,-0.1l-1.56,-1.18l-1.15,-0.21l-1.36,-1.34l-0.01,-1.03l-0.63,-0.6l0.38,-0.58l-0.17,-0.64l-0.71,-0.45l-1.94,-0.27l-0.91,-1.14l-1.69,-0.93l-0.47,-1.3l-1.17,-1.18l-0.38,-1.31l-0.74,-0.6l0.02,-0.92l-1.08,-0.96l-1.42,-2.12ZM729.06,187.45l0.16,-0.14l0.1,0.03l-0.08,0.06l-0.18,0.04Z",name:"West Virginia"},"US-WY":{path:"M213.31,86.41l108.03,-0.0l0.05,74.65l-108.06,0.0l-0.01,-74.65Z",name:"Wyoming"},"US-UT":{path:"M212.52,143.27l0.0,18.19l0.4,0.4l30.77,0.0l-0.0,71.98l-76.9,-0.06l-0.04,-90.52l45.76,0.0Z",name:"Utah"},"US-IN":{path:"M571.23,219.32l-0.35,-0.75l0.47,-0.45l0.09,-2.52l0.89,-0.52l-0.25,-0.81l0.88,-0.7l-0.89,-1.31l0.54,-0.86l1.59,-0.13l0.52,-1.43l1.06,-0.98l0.07,-0.67l1.48,-0.72l0.15,-0.61l-0.28,-0.75l0.62,-0.64l0.27,-1.02l0.87,-0.34l0.6,-1.53l-0.67,-2.22l0.28,-1.59l-0.75,-0.85l-0.38,-1.28l-0.86,-0.74l0.03,-0.4l1.02,-1.08l-0.32,-1.86l1.35,-0.99l0.18,-42.61l1.24,0.88l1.97,0.36l1.49,-0.15l2.68,-0.86l2.87,-1.44l31.2,0.02l-0.27,48.38l-0.77,0.91l0.16,0.85l0.6,0.67l-0.74,0.79l0.01,0.5l1.25,0.51l-0.38,1.17l-1.62,0.0l-3.68,1.74l-1.16,-0.83l-3.27,0.31l-0.22,0.69l0.66,2.63l-1.51,1.32l-1.15,0.26l-0.55,0.7l-0.62,2.03l-1.11,0.57l-0.93,-0.32l-0.5,0.33l-1.2,1.9l-0.42,2.63l-1.63,0.74l-0.74,-0.65l-1.12,-0.14l-1.07,-0.6l-0.39,-1.59l-1.71,-0.92l-0.44,0.2l-0.12,0.52l0.53,0.59l-0.44,0.12l-0.77,-0.39l-0.38,0.23l-0.1,0.46l0.37,0.74l-1.04,0.41l-0.2,1.95l-1.04,0.42l-0.11,0.62l-0.25,-0.55l-1.46,-0.03l-1.04,-1.51l-0.45,-0.13l-1.69,1.02l-1.5,0.39l-1.32,2.22l-0.6,-0.95l-3.35,-1.54l-0.95,-0.26l-1.69,0.56l-0.43,-0.87l-0.52,-0.23l-0.58,0.44l0.35,1.59l-0.37,0.57l-0.23,0.06l0.12,-0.91l-0.36,-0.43l-1.94,0.44l-1.69,-0.95l-0.53,0.19l-0.3,0.62l0.44,1.34l-0.48,0.49l-0.95,-0.43ZM593.02,218.24l-0.06,0.21l-0.07,0.04l0.12,-0.24Z",name:"Indiana"},"US-IL":{path:"M518.2,173.28l0.84,-0.22l0.44,-0.61l-0.02,-1.95l-0.59,-0.85l0.14,-0.26l3.81,-1.63l0.76,-1.37l0.34,-1.73l1.77,-1.92l0.35,-0.79l-0.3,-2.76l-1.94,-1.74l0.05,-1.44l0.83,-1.91l0.45,-0.28l4.46,-0.34l0.81,-0.28l0.88,-0.87l2.52,-0.62l1.52,-1.19l0.7,-2.74l1.49,-1.09l0.38,-0.64l0.75,-3.66l-0.53,-1.95l-3.62,-2.44l-0.51,-2.03l-3.19,-2.29l43.4,0.37l-0.33,2.19l0.23,2.28l1.02,2.27l1.12,0.92l0.39,2.24l0.87,2.44l1.11,1.7l-0.18,43.27l-1.25,0.81l-0.18,0.62l0.41,1.44l-0.87,0.78l-0.19,0.96l0.98,1.09l0.33,1.19l0.72,0.76l-0.31,1.47l0.68,1.97l-0.41,1.11l-0.54,0.11l-0.62,0.68l-0.13,0.85l-0.68,0.9l0.18,0.72l-1.4,0.73l-0.29,0.38l0.18,0.56l-0.98,0.84l-0.42,0.92l-1.57,0.39l-0.78,1.32l0.06,0.75l0.66,0.71l-1.15,0.74l0.07,0.7l-0.44,0.64l0.02,2.3l-1.05,0.09l0.62,1.05l-0.28,0.1l-0.11,0.64l0.69,0.32l-0.0,0.26l-1.38,1.42l-0.37,0.97l1.17,2.51l-5.38,1.25l-0.83,0.77l-0.39,1.69l1.21,2.43l-0.56,1.24l-0.86,-0.07l-5.38,-2.56l-0.96,-0.17l-0.83,0.11l-1.28,0.73l-1.66,2.31l-0.04,0.48l-0.88,-1.04l-1.01,0.23l0.08,0.99l-0.72,-0.58l0.04,-0.56l-1.21,-1.93l-0.27,-0.96l-0.61,-0.36l1.27,-2.18l-0.2,-0.88l-1.08,-1.75l-0.13,-2.65l-1.94,-1.01l-1.19,-1.87l-1.68,-0.83l-1.43,-1.24l-1.41,-0.25l-1.55,-0.93l-3.82,-3.79l-0.15,-1.56l2.79,-5.37l-0.0,-1.91l1.09,-1.61l-0.28,-0.8l-2.33,-1.44l-2.32,-0.77l-1.23,0.28l-0.92,1.11l-0.84,0.05l-0.99,-1.6l-0.26,-1.27l0.21,-0.73l-0.41,-0.79l-0.12,-1.38l-0.66,-1.21l-4.37,-3.22l-0.78,-1.43l-3.9,-3.25l-0.51,-1.61l-0.86,-1.06l0.1,-1.31l-0.77,-1.3l-0.4,-2.97l0.34,-2.39l0.65,-0.98Z",name:"Illinois"},"US-AK":{path:"M78.44,405.05l1.31,-0.35l0.47,-0.88l0.63,0.2l1.0,-0.42l0.67,-0.8l1.36,-0.61l1.74,0.42l1.04,-0.29l0.2,-0.63l-0.89,-0.47l1.34,-0.54l0.72,0.2l1.98,-1.04l1.68,-0.16l0.38,0.23l-0.3,1.16l-1.02,0.41l0.33,0.61l0.75,0.02l0.66,0.56l3.41,-0.06l0.25,0.5l1.94,-0.33l1.06,0.55l0.43,-0.09l0.94,-1.64l0.76,0.31l0.09,0.54l0.76,-0.07l0.42,-0.84l-0.45,-0.9l0.96,0.41l2.04,-0.32l0.18,-1.0l-0.42,-1.08l-1.29,0.3l-0.88,-0.43l-0.99,0.11l-0.84,0.68l-1.34,-0.82l0.46,-0.87l0.72,-0.15l0.05,-0.54l-0.81,-0.46l-1.82,-0.02l-0.74,-0.83l-0.38,0.09l-0.44,0.8l-3.63,-0.5l-0.24,-1.29l-1.22,-1.67l-4.55,-2.68l-1.7,-0.46l-1.36,-1.0l0.5,-1.18l0.12,-1.58l3.64,0.03l3.93,-0.79l2.91,-2.26l0.76,-2.68l1.41,-1.04l0.87,-1.1l4.17,-0.85l2.42,-1.49l0.44,0.42l-0.22,0.29l0.28,0.59l0.49,-0.09l0.96,0.89l0.28,-0.56l-0.37,-1.17l1.25,-0.15l0.72,-0.42l0.0,-0.44l-0.41,-0.17l-1.5,0.07l-0.18,-0.38l0.67,-0.63l1.01,0.62l0.67,-0.05l0.63,-0.54l3.85,-0.39l2.31,-1.35l1.78,-1.71l0.63,0.52l0.92,0.04l0.38,0.56l1.45,-0.09l-0.69,0.53l-0.89,0.1l-0.57,0.73l0.71,0.44l0.02,0.53l0.49,0.39l0.54,-0.45l1.06,-0.21l0.55,-0.91l1.07,-0.04l0.55,-0.55l0.42,0.31l-0.55,0.46l0.36,0.64l0.61,0.33l0.94,-0.04l0.37,0.35l1.34,-0.75l2.12,-0.22l1.87,0.7l0.52,-0.42l0.44,0.11l-0.99,1.34l0.18,0.6l2.16,-0.04l0.21,0.75l1.78,0.07l0.78,0.38l1.93,-0.81l0.6,0.1l0.42,0.48l3.03,-0.62l2.8,0.59l0.72,0.64l1.09,-0.25l1.11,0.3l0.07,0.39l0.55,0.2l6.42,0.36l2.1,1.02l1.96,0.11l1.81,-0.42l0.2,0.31l1.25,-0.67l2.98,0.18l1.98,1.29l2.17,0.6l0.92,0.71l1.11,-0.09l0.03,52.62l0.36,0.42l1.55,0.4l0.56,-0.32l1.35,0.49l1.3,-0.75l1.48,-0.07l-0.29,1.02l0.55,0.66l-1.46,-0.93l-1.22,1.23l-1.31,0.53l-1.1,-0.0l-1.99,-0.63l-0.05,-1.07l-0.71,-0.55l-0.45,0.12l-0.17,0.68l-0.38,0.13l-3.84,-0.78l-3.87,0.59l-0.75,-0.97l-1.53,-0.1l-0.7,-0.51l0.21,-0.97l0.67,-0.5l-0.18,-0.63l-0.85,0.12l-1.9,1.68l-0.98,-0.5l0.38,-0.91l-0.48,-0.25l-0.4,0.18l-1.36,-1.26l-1.22,0.23l0.19,-0.5l0.93,-0.08l0.14,-0.65l-0.29,-0.26l-1.35,-0.06l-1.06,0.77l-1.39,0.08l-0.43,-0.89l-0.48,-0.05l-0.21,-0.6l-0.39,-0.07l-1.0,1.0l-0.45,-0.14l-0.99,0.34l-0.34,0.67l0.34,0.43l-1.0,0.29l-0.22,0.39l-0.0,0.58l0.6,0.4l-0.53,0.58l0.17,0.51l0.98,-0.34l0.36,0.25l-0.63,0.97l0.19,0.63l-1.24,0.39l-0.53,-0.52l-0.84,0.18l-0.26,-0.48l-0.55,-0.03l-0.27,0.94l-0.94,-0.0l-0.39,0.78l-0.68,0.08l-0.05,0.41l-0.49,-0.11l-0.61,0.73l-0.24,-0.18l-0.62,0.29l-0.08,0.64l-0.92,0.7l-0.97,-0.16l-0.27,0.35l-1.12,0.31l-0.37,-0.16l0.17,-0.38l1.18,0.01l1.6,-1.81l0.01,-0.63l-0.34,-0.17l-1.76,0.82l-0.8,-0.32l1.95,-3.08l0.09,-0.9l-0.31,-0.71l2.92,-1.5l0.6,0.52l1.64,-0.19l2.43,0.63l0.52,-0.59l-0.68,-0.66l-0.7,0.02l-1.83,-0.78l0.83,-0.95l1.52,-0.53l-0.12,-0.7l-1.71,0.08l-0.94,0.66l-0.22,0.57l-1.41,-0.02l-0.53,-0.58l-1.78,1.05l-0.46,0.63l-1.96,0.72l-0.39,0.92l-1.73,1.36l-0.34,1.02l-0.4,0.21l-1.0,-0.38l-0.86,0.17l-0.2,0.47l1.72,1.06l-0.29,0.44l-2.4,0.58l-0.25,0.59l-0.79,0.35l0.09,0.29l-0.59,0.08l-0.02,0.56l-1.06,0.47l-0.42,1.48l0.27,0.61l0.57,0.28l0.38,-0.27l0.95,0.05l0.87,0.4l-0.07,0.62l-1.69,0.71l-0.14,0.41l-0.51,0.19l-0.05,0.51l-1.63,1.46l-1.46,0.29l-0.32,0.68l-0.9,0.61l-0.7,-0.17l-0.69,1.08l-0.83,0.04l-0.31,0.46l-1.53,0.82l-0.22,0.57l0.51,0.41l-0.12,0.26l-0.96,0.1l-1.45,1.18l-0.81,-0.25l-0.75,0.94l-1.01,0.14l-0.93,0.83l-0.81,0.19l-0.89,0.91l-0.15,1.17l-1.89,0.62l-1.86,0.13l-1.03,0.61l0.01,-0.45l-0.96,-0.51l1.11,-1.57l3.72,-1.92l1.27,0.12l0.52,-0.47l-0.16,-1.03l1.14,-1.28l0.68,-0.2l1.02,-0.92l0.33,0.34l1.22,-0.21l0.11,-0.48l-1.07,-0.86l0.33,-1.85l0.56,-0.24l0.64,0.19l0.37,-0.63l-1.4,-0.66l0.27,-0.56l1.9,-1.44l-0.29,-0.52l0.56,-0.69l0.16,-1.21l-0.76,0.15l-0.84,1.18l-3.57,1.33l-0.74,-0.81l0.08,-0.27l0.59,-0.18l0.44,0.65l0.38,-0.07l0.34,-0.4l-0.28,-0.6l-1.78,-1.11l-0.64,0.24l0.0,0.85l-0.71,-0.14l-0.1,0.81l-0.48,0.62l0.53,1.48l-0.56,-0.28l-1.71,-2.28l-0.73,-0.12l-0.51,0.56l-0.8,-0.27l-0.73,-1.0l-1.78,0.98l-1.28,0.48l-0.52,-0.11l-0.44,0.82l-0.55,0.21l0.32,-0.48l-0.44,-0.97l0.77,-0.7l-0.45,-0.58l-1.07,0.02l0.16,-0.67l0.83,-0.66l-0.04,-0.42l-1.67,-2.63l0.06,-1.32l-0.67,0.01l0.6,-1.22l0.94,-0.49l0.02,-0.72l-1.26,-0.19l-1.01,1.66l-1.15,1.07l0.22,0.46l0.53,0.16l0.02,0.53l-2.58,0.81l-2.52,-0.0l0.28,-0.4l-1.98,-1.63l-0.07,-0.48l-1.32,-0.16l0.31,-0.61l-0.44,-0.47l0.71,-0.92l1.36,0.42l-0.42,0.51l0.06,0.67l0.48,0.03l1.42,-1.12l0.2,0.88l0.79,0.11l1.17,-0.87l0.01,-0.63l-0.47,-0.33l-0.0,-0.4l-0.73,-0.69l-1.21,0.7l-1.64,0.0l-1.1,-0.41l0.41,-0.77l-1.09,-0.15l-0.25,-0.67l1.43,-1.01l0.21,-0.73l-0.35,-0.29l-1.94,1.18l-0.87,1.33l0.03,-0.44l-0.86,-0.39l0.34,-0.6l-0.51,-0.59l0.32,-0.12l-0.11,-0.71l0.76,-0.23l-0.0,-0.56l-0.44,-0.57l0.17,-0.4l1.38,-1.58l0.82,-0.43l0.81,0.85l0.88,-0.5l-0.44,-0.95l0.69,-0.64l-0.17,-0.68l-0.75,0.28l-0.24,-0.53l0.32,-0.52l1.39,0.02l0.13,-0.47l-0.52,-0.59l0.76,-0.21l1.15,0.22l0.13,0.21l-0.53,0.57l0.19,0.45l1.25,-0.58l0.29,0.31l1.25,-0.08l1.85,-1.26l0.97,-1.06l0.33,0.29l2.66,-0.2l0.96,-0.3l1.2,-1.09l0.38,-1.08l-0.72,-2.37l-0.81,-0.89l1.23,-0.8l0.17,-1.05l-0.78,-0.79l-0.05,-0.54l-0.36,-0.11l-0.77,0.11l-0.77,0.88l-1.13,-0.29l-3.22,2.13l-1.5,-1.2l-1.09,0.59l-3.19,-0.17l-0.8,0.37l-1.01,-0.08l-0.48,0.45l-3.85,-0.73l-0.71,-0.49l0.31,-0.47l-0.22,-0.77l-0.89,-0.53l0.83,-0.78l1.25,0.11l0.11,-0.71l-1.81,-0.6l-3.09,-0.37l-1.61,-0.79ZM96.16,411.44l-0.0,0.01l0.0,0.04l-0.02,-0.03l0.02,-0.01ZM86.52,429.18l-0.01,0.04l0.08,0.26l-0.09,-0.07l-0.01,-0.22l0.03,-0.02ZM113.98,447.99l-0.02,0.01l0.02,-0.01l0.0,0.0ZM105.13,456.71l0.01,0.0l-0.0,0.02l-0.01,-0.02ZM104.02,457.09l-0.05,0.02l-0.08,0.43l-0.26,-0.21l0.12,-0.34l0.26,0.1ZM103.11,457.55l-1.09,0.44l-1.19,-0.86l-0.87,0.12l-1.08,1.81l-1.22,0.7l-0.5,-0.62l0.17,-0.71l0.83,-0.86l1.43,-0.91l2.13,-0.28l0.83,0.98l0.55,0.2ZM101.32,458.43l-0.1,0.04l-0.1,-0.07l0.2,0.03ZM100.96,458.34l-0.01,0.0l0.0,-0.0l0.0,0.0ZM96.09,460.15l-0.21,0.37l-0.06,0.0l-0.18,-0.41l0.36,-0.22l0.1,0.26ZM93.49,461.59l-0.46,0.48l-2.03,0.04l-0.93,0.9l-0.94,0.08l-0.17,-0.3l0.65,-0.33l0.68,-1.09l0.71,0.15l1.2,-0.7l0.86,-0.05l0.43,0.82ZM129.3,436.86l-0.02,0.06l-0.06,-0.02l0.0,-0.01l0.09,-0.02ZM148.48,429.66l-0.15,0.55l-0.43,0.25l0.11,-0.39l0.48,-0.41ZM179.3,436.35l0.1,0.03l0.01,0.04l-0.11,-0.08ZM179.42,436.44l0.41,0.72l3.4,2.62l0.43,1.73l0.55,0.09l0.98,-0.66l-0.41,0.66l0.47,0.39l0.52,-0.33l0.61,0.07l0.53,0.55l0.14,0.73l1.06,0.05l-0.03,0.36l-0.62,-0.25l-0.84,0.62l-1.27,-0.41l-1.03,-0.65l-0.06,-0.68l-0.76,0.03l-0.64,-0.48l-0.36,-0.74l-1.53,-0.96l-0.09,-0.44l-0.95,-0.02l-3.2,-1.46l0.45,-0.53l0.07,0.49l0.73,0.12l0.25,-0.37l-0.13,-0.97l1.03,0.19l0.27,-0.5ZM186.32,440.51l-0.13,-0.09l0.15,-0.08l-0.02,0.17ZM188.31,441.49l-0.01,-0.02l0.02,0.01l-0.01,0.01ZM188.23,440.71l-0.49,0.48l0.05,-0.31l-0.84,-0.54l0.79,-0.68l0.13,-0.85l0.54,-0.28l0.21,-0.67l2.23,-0.75l1.26,0.91l-0.22,0.36l0.53,1.18l1.76,0.94l0.82,1.32l1.59,0.93l-0.68,0.17l-0.74,1.26l-1.41,-0.7l-0.57,-0.94l-0.05,-0.95l-0.65,-0.26l-0.79,-2.12l0.0,-1.11l-0.69,0.01l-0.18,0.59l-0.57,0.26l1.59,5.27l-0.98,-1.28l-0.89,0.43l0.13,-0.63l-0.65,-0.94l0.56,-0.13l0.2,-0.68l-1.02,-0.12l-0.58,-0.75l-0.32,0.08l-0.08,0.49ZM197.1,443.35l0.59,0.47l0.07,0.55l1.15,1.59l-1.33,-0.18l-0.1,-0.98l-0.72,-0.05l-0.48,0.51l0.17,-1.3l0.64,-0.61ZM199.36,446.48l2.38,3.34l-0.24,0.37l0.24,0.61l0.66,0.16l-0.14,0.43l0.24,0.49l0.51,0.2l0.25,0.9l3.68,1.31l1.53,1.23l0.99,0.13l0.06,0.41l-0.54,0.82l0.49,2.26l-1.33,1.8l-0.47,-0.46l1.08,-1.34l-0.41,-0.54l-1.02,0.07l-0.05,-1.66l-0.24,-0.65l-0.64,-0.46l0.41,-0.93l-0.49,-0.14l-1.05,0.65l-1.67,0.44l-0.03,-0.7l0.95,0.05l0.69,-0.54l-0.33,-0.48l-1.26,0.01l-0.18,-0.53l-1.21,-0.78l-0.43,-0.73l0.19,-0.85l-0.85,0.19l-0.45,-0.26l-0.1,-1.19l-1.15,-0.08l-0.25,-0.41l0.64,-0.54l-0.32,-0.39l0.39,-0.27l-0.15,-0.53l-1.72,-1.21l1.11,0.26l0.24,-0.45ZM207.02,460.63l-0.05,-0.06l0.08,0.04l-0.03,0.01ZM207.22,459.6l-0.01,0.02l-0.05,-0.02l0.06,-0.0ZM203.19,456.71l0.1,0.38l-0.36,-0.02l0.21,-0.13l0.06,-0.22ZM202.7,457.28l-0.04,-0.15l0.06,-0.02l-0.02,0.18ZM202.49,454.42l0.21,0.0l0.05,0.12l-0.04,0.0l-0.22,-0.13ZM201.69,455.19l0.08,-0.04l0.33,0.08l-0.15,0.14l-0.27,-0.18ZM201.14,454.97l-0.12,-0.02l0.1,-0.05l0.01,0.07ZM199.18,448.65l-0.42,0.14l-0.24,-0.51l0.21,-0.01l0.45,0.38ZM195.21,449.44l-0.37,0.25l-0.21,0.3l-0.02,-0.54l0.31,0.1l0.27,-0.34l0.02,0.23ZM194.43,450.12l-0.07,0.04l-0.01,-0.09l0.08,-0.04l0.0,0.09ZM194.46,450.04l-0.03,-0.01l0.07,-0.0l-0.04,0.02ZM194.52,449.99l0.02,-0.01l-0.0,0.02l-0.01,-0.01ZM195.14,448.74l-0.13,-1.0l-0.86,-0.1l-0.3,-2.29l0.74,0.06l0.14,1.45l1.18,1.1l-0.4,0.03l-0.07,0.63l-0.3,0.11ZM192.51,441.36l0.03,0.05l-0.04,0.01l0.01,-0.04l-0.01,-0.02ZM188.54,443.73l-0.06,0.02l-0.09,-0.12l0.12,-0.01l0.03,0.1ZM177.07,436.53l-0.08,-0.29l0.08,-0.06l0.11,0.15l-0.1,0.19ZM101.92,400.49l-0.49,-0.18l-0.15,-0.03l0.12,-0.08l0.52,0.29ZM97.86,398.24l-0.56,-0.05l-0.2,-0.37l0.43,-0.04l0.34,0.46ZM204.23,458.42l0.06,-0.05l0.03,0.19l-0.06,-0.09l-0.04,-0.04ZM204.67,457.73l-0.03,-0.23l0.18,-0.05l-0.02,0.22l-0.13,0.06ZM205.03,456.97l0.12,-0.49l0.38,-0.14l0.75,1.21l-0.19,0.86l-0.43,-1.06l-0.67,-0.1l0.05,-0.28ZM198.75,454.62l0.0,-0.0l0.0,0.0l-0.0,-0.0ZM199.12,455.84l1.01,0.21l0.66,0.6l0.25,0.53l-0.72,0.98l0.06,0.49l0.18,0.28l1.31,0.21l-0.06,0.69l0.49,0.35l-0.65,-0.02l-0.73,-1.16l-0.46,0.15l-0.77,-1.11l0.36,-0.14l-0.02,-0.72l-1.3,0.19l0.7,-0.63l-0.28,-0.89ZM202.04,460.79l0.03,-0.05l0.04,0.07l-0.01,-0.01l-0.05,-0.01ZM202.39,461.1l0.07,0.01l-0.01,0.06l-0.06,-0.05l0.0,-0.02ZM201.99,459.07l0.0,-0.0l0.0,0.0l-0.0,0.0ZM200.31,452.57l0.09,0.06l0.03,0.03l-0.13,0.03l0.01,-0.12ZM199.87,453.94l0.44,0.01l-0.0,0.18l-0.15,0.04l-0.29,-0.23ZM195.6,452.13l-0.15,-0.18l0.46,-0.05l-0.04,0.27l-0.27,-0.05ZM197.53,452.12l0.03,-0.69l-0.76,-0.61l1.36,0.4l-0.14,0.9l0.7,0.88l-0.7,-0.13l-0.36,0.26l-0.12,-1.01ZM198.73,453.22l-0.02,0.03l0.01,-0.03l0.01,0.01ZM199.19,451.81l-0.28,-0.37l0.04,-0.22l0.38,0.23l-0.14,0.36ZM188.93,446.97l0.38,-0.64l-0.54,-0.48l0.35,-0.18l-0.09,-0.34l0.74,-0.46l0.46,0.18l-1.14,0.8l1.48,1.07l-0.76,-0.33l-0.42,0.56l0.11,0.34l-0.57,-0.53ZM190.97,445.99l0.36,-0.33l0.7,0.08l-0.48,0.09l-0.03,0.44l-0.56,-0.29ZM192.57,447.43l0.16,0.69l-0.89,-0.46l0.15,-0.01l0.58,-0.23ZM192.79,449.92l0.73,2.33l-0.01,1.82l-0.58,-0.9l0.54,-0.98l-1.55,-0.92l0.49,-0.68l-0.54,-0.4l0.17,-0.22l-0.77,-0.99l0.91,0.08l0.6,0.86ZM189.68,447.75l0.28,0.23l0.02,0.12l-0.39,-0.26l0.09,-0.09ZM190.18,448.37l0.06,0.01l-0.05,0.02l-0.02,-0.03ZM190.68,447.0l0.24,0.08l0.05,0.12l-0.23,-0.14l-0.07,-0.06ZM148.81,435.84l0.0,0.03l-0.02,-0.0l0.01,-0.03ZM130.34,445.32l0.3,-0.57l0.41,-0.02l-0.1,0.37l-0.62,0.22ZM131.25,444.46l-0.11,-0.54l0.26,-0.07l0.62,0.54l-0.08,0.34l-0.69,-0.27ZM124.41,449.07l0.16,-0.54l1.23,-0.64l1.46,1.78l-0.47,0.22l-1.77,-0.14l-0.62,-0.68ZM127.65,449.82l0.11,-0.02l0.01,0.22l-0.12,-0.2ZM128.34,449.53l-0.77,-0.95l0.26,-0.38l0.85,-0.56l0.65,0.03l0.39,-0.7l0.75,0.61l1.11,-0.86l-0.35,0.37l0.04,0.5l0.51,0.5l-1.79,-0.23l-0.98,1.44l-0.67,0.25ZM127.66,447.01l-0.24,-0.06l-0.25,-0.02l0.31,-0.19l0.18,0.27ZM80.59,434.79l1.46,0.04l1.27,-0.91l0.14,0.24l0.55,-0.23l0.57,0.33l0.85,-0.04l0.25,1.38l-1.2,0.36l-1.65,-0.03l-2.23,-1.13ZM84.92,464.82l0.0,-0.0l0.0,0.01l-0.0,-0.0l-0.0,-0.01ZM81.68,467.52l-0.0,-0.07l0.0,-0.03l0.0,0.0l-0.01,0.09ZM82.42,467.18l0.03,-0.05l0.06,-0.02l-0.06,0.06l-0.03,0.01ZM82.59,467.01l0.01,0.02l-0.04,0.03l0.03,-0.06ZM82.55,466.45l-0.09,-0.1l-1.15,-0.27l0.79,-0.22l0.45,0.58ZM75.57,469.7l0.13,-0.29l0.45,-0.07l-0.19,0.25l-0.39,0.11ZM76.94,468.55l0.29,-0.55l0.78,0.04l-0.78,0.45l-0.28,0.06ZM65.05,416.31l0.59,0.35l1.44,0.15l-1.38,0.61l-0.75,-0.4l0.1,-0.7ZM68.08,416.71l1.64,-0.52l0.62,0.37l0.0,0.67l3.0,0.92l-1.17,0.84l-2.65,-1.72l-1.44,-0.56ZM74.42,418.15l0.04,0.01l0.45,0.07l-0.29,0.07l-0.2,-0.16ZM56.48,473.36l-0.0,-0.01l0.03,0.01l-0.02,-0.0ZM47.78,475.84l0.0,-0.0l0.0,0.0l-0.0,0.0ZM11.64,470.76l-0.14,-0.13l0.37,-0.01l-0.09,0.05l-0.14,0.09Z",name:"Alaska"},"US-NJ":{path:"M765.63,186.94l0.54,-0.39l0.88,-1.92l0.71,-0.81l1.36,-0.67l2.71,-0.64l0.7,-0.57l-0.08,-0.78l0.49,-0.19l0.76,-1.04l1.53,-1.1l2.83,-1.23l0.35,-0.52l-0.24,-0.87l-3.18,-3.15l-0.43,-1.01l-0.89,-0.02l-0.34,-0.36l-0.53,-2.25l-1.47,-0.38l-0.13,-0.5l0.08,-2.4l1.15,-0.58l0.91,-1.81l-1.23,-1.94l1.54,-0.9l1.45,-1.57l0.86,-1.07l0.61,-1.62l0.96,-0.94l1.03,-0.38l11.88,6.53l-1.9,4.68l-0.43,0.34l-0.1,-0.37l-0.68,-0.08l-0.53,0.88l-0.94,0.61l-0.26,1.17l-0.57,0.38l-0.27,0.94l-0.09,0.57l0.62,0.83l0.92,0.35l1.22,-0.07l2.0,0.71l-0.93,5.62l-0.59,0.19l-0.08,0.62l-0.74,0.62l0.25,0.6l-0.3,0.35l-0.05,1.71l-0.92,1.5l-0.06,0.51l0.4,0.61l-2.57,2.64l-1.21,0.22l0.38,1.44l-0.94,0.33l-0.39,1.07l0.73,0.57l-0.29,0.14l-0.47,-0.65l-0.5,0.08l-0.77,1.1l-1.09,0.1l-0.49,0.43l0.28,0.67l0.61,0.2l-1.41,1.89l-0.76,0.38l0.29,0.66l-1.09,0.98l-0.15,0.73l-1.85,1.0l1.13,-2.86l0.11,-0.71l-0.33,-0.84l-0.75,-0.44l-1.06,0.03l-0.66,-0.45l-1.56,0.39l-0.11,-0.63l-1.23,-1.12l-0.9,-0.17l-0.41,-0.7l-0.65,-0.1l-2.4,-2.27l0.35,-1.38l-0.66,-0.94Z",name:"New Jersey"},"US-ME":{path:"M899.44,87.98l0.07,-0.17l0.08,-0.15l-0.07,0.26l-0.07,0.07ZM898.5,86.64l-0.03,-0.09l0.17,-0.16l-0.1,0.18l-0.04,0.07ZM835.18,80.48l1.21,-0.73l0.86,1.8l0.75,0.26l1.04,-1.71l0.2,-1.93l1.56,0.75l1.18,-0.54l-0.08,-0.75l-1.01,-0.73l-0.22,-0.56l0.61,-1.13l1.45,-1.47l2.72,-1.34l0.33,-0.88l-0.21,-0.9l1.49,-1.08l0.86,-1.18l0.07,-0.92l-0.87,-0.56l0.38,-1.21l-0.22,-0.45l0.79,-0.63l0.17,-0.57l-0.58,-1.33l0.66,-1.42l0.57,-0.46l0.15,-0.84l1.81,-1.32l1.02,-5.52l11.66,-14.58l2.37,0.45l0.07,3.06l0.41,0.53l2.29,1.21l2.37,-0.94l1.92,-0.21l1.82,-1.11l1.28,0.27l0.79,-0.21l0.72,-1.15l0.55,-0.13l1.37,0.45l3.14,2.3l0.79,1.16l1.94,1.59l0.37,21.63l0.38,0.74l-0.59,1.02l0.33,0.84l-0.61,1.24l-0.36,-0.06l-0.43,0.56l1.28,1.46l2.29,1.29l1.85,0.39l1.42,-0.16l0.03,0.73l-1.05,1.07l0.98,2.05l-0.64,2.31l2.03,2.23l0.92,0.21l0.82,-0.92l0.32,0.17l0.08,0.47l0.59,0.27l0.94,1.3l0.02,0.73l0.86,1.13l-0.11,0.37l-0.47,-0.3l-0.48,0.24l-0.1,0.69l-0.68,-0.36l-0.44,0.24l-0.06,0.65l0.58,0.67l0.2,0.9l0.39,0.31l0.45,-0.68l0.43,-0.07l0.62,0.56l0.54,-0.61l0.18,0.38l-0.56,0.57l-0.56,-0.01l-2.24,2.33l-0.6,-0.24l-0.43,0.29l-0.19,-1.06l-0.65,-0.19l-0.46,0.36l-0.59,-0.13l0.09,1.28l-0.72,-0.68l-0.5,0.5l0.07,0.46l-1.03,-0.62l-0.43,0.13l-0.61,0.53l-0.11,0.46l0.39,0.24l-0.32,0.92l-0.19,-0.58l-0.46,-0.21l-1.09,1.13l0.05,-1.42l-1.06,-0.34l-0.88,0.42l-0.85,1.19l0.22,0.7l-0.86,0.22l-0.49,-0.61l-1.03,0.64l-0.12,0.66l0.69,0.7l-0.36,0.07l-0.4,0.7l-0.49,-0.83l-0.06,-1.22l-0.83,-0.71l-0.43,0.08l-0.3,-0.48l-0.73,0.4l-1.11,-0.56l-0.52,0.66l0.5,0.83l-1.13,0.01l-0.31,0.54l-0.14,-0.98l-1.09,-0.37l-0.36,0.57l0.21,0.79l-1.69,0.41l0.44,1.18l-0.26,0.9l0.29,0.63l-2.69,-1.38l0.1,-0.71l0.83,-0.14l-0.21,-0.96l-0.57,-0.34l-0.38,0.18l0.51,-1.98l-0.3,-0.32l-1.1,-0.09l-0.6,1.64l-2.36,1.06l-0.15,0.51l0.7,1.52l-0.9,0.58l-1.42,3.17l0.29,1.32l-1.57,1.12l-0.69,-0.38l-0.73,0.67l-0.57,-0.24l-0.02,-1.06l-0.61,-0.39l-1.52,1.67l-0.65,2.04l-0.57,-1.09l0.51,-0.94l-0.03,-0.62l-0.84,-0.01l-0.73,1.63l-0.31,-0.27l0.61,-1.2l-0.33,-0.54l-0.77,0.21l-1.68,2.31l-0.12,-1.76l0.54,-0.99l-0.3,-0.39l-0.47,0.04l-1.81,1.91l0.19,0.59l0.83,0.1l0.23,1.55l0.01,0.33l-0.51,-0.9l-0.68,0.07l-0.27,0.53l-1.27,-0.48l-2.99,2.03l-1.09,1.45l0.08,0.53l-0.82,0.4l0.36,0.54l0.92,0.07l0.05,0.75l-2.12,0.5l-0.46,0.85l0.17,1.32l-0.23,0.47l-1.12,0.85l-1.06,0.25l-0.91,0.94l-0.08,1.41l-1.19,2.17l-0.64,-0.5l-0.55,0.41l-0.74,-0.89l0.01,-1.68l-0.77,-0.56l-1.6,-2.2l0.31,-3.04l-1.96,-32.96ZM853.09,108.75l-0.03,-0.01l0.11,-0.35l0.0,0.19l-0.08,0.16ZM854.43,108.96l0.22,0.68l-0.19,0.34l-0.21,-0.46l0.19,-0.56ZM857.62,107.03l0.07,0.68l-0.13,0.1l-0.31,-0.24l0.37,-0.55ZM870.61,98.54l-0.1,0.06l0.03,-0.11l0.07,0.05ZM876.43,99.19l0.38,-0.86l0.61,-0.45l-0.02,-0.41l0.53,-0.27l0.64,0.08l1.0,1.49l-1.09,0.39l-0.61,-0.3l-0.39,0.31l0.11,1.22l-0.82,-0.41l-0.35,-0.79ZM876.2,102.18l0.06,-0.03l0.01,0.06l-0.03,0.02l-0.04,-0.06ZM872.05,101.73l0.34,-0.91l-0.04,-0.4l0.44,0.41l-0.4,0.14l-0.05,0.8l-0.29,-0.05ZM872.94,104.37l0.07,-0.32l0.01,-0.01l0.02,0.17l-0.09,0.17ZM869.74,103.81l0.09,0.02l0.34,0.05l-0.24,0.22l-0.19,-0.29ZM869.17,102.33l0.36,-0.23l0.06,0.01l-0.31,0.28l-0.1,-0.05Z",name:"Maine"},"US-MD":{path:"M704.42,193.71l0.15,-8.33l18.84,0.0l-0.75,0.78l-0.87,-0.11l-1.57,0.37l-0.09,0.62l-0.42,0.35l0.07,0.62l-3.05,-0.18l-0.84,-0.47l-0.01,-0.75l-0.94,-0.45l-0.83,1.37l-2.03,1.99l-1.17,-0.57l-1.06,0.32l-0.63,0.95l-1.84,1.27l-0.54,0.77l-0.89,0.21l-1.52,1.25ZM725.93,185.39l35.24,0.01l0.1,2.2l-0.5,-0.47l-0.38,0.13l-1.18,1.32l0.47,-1.32l-0.73,-0.43l-0.88,0.9l-1.03,-0.12l-0.48,0.25l-0.53,1.14l0.07,0.43l0.63,0.38l-1.63,1.13l0.21,-1.27l-0.51,-0.54l-0.72,0.46l-0.28,1.12l-0.68,-0.35l-1.19,0.28l-0.15,0.71l0.71,0.33l-1.24,0.59l-0.39,-0.12l-0.48,0.56l0.69,1.14l-1.35,-0.85l-1.32,0.1l-0.01,0.73l0.7,0.24l0.87,1.22l1.18,0.75l-1.76,0.42l-0.4,0.98l0.28,0.43l0.35,0.1l0.8,0.74l0.12,0.26l-0.83,-0.42l-0.5,0.16l0.03,0.69l0.65,0.49l-0.38,0.33l-0.01,0.7l0.59,0.52l-0.81,0.84l0.43,1.05l0.22,3.59l1.86,2.81l-0.43,0.32l-0.31,-1.1l-2.33,-1.44l-0.52,-3.18l-0.53,-0.73l-0.44,0.58l0.16,3.36l0.4,0.92l2.18,1.43l1.03,1.41l0.75,-0.0l0.11,1.01l0.95,1.42l-0.17,0.72l-0.69,-0.61l-0.03,-1.05l-0.48,-0.53l-0.44,-0.05l-0.13,0.97l-0.65,-0.01l-0.4,-0.72l-0.96,-0.54l-2.67,-0.38l-0.42,-1.93l-0.99,-0.85l-0.48,0.05l-0.09,0.47l0.61,1.7l-0.51,-0.21l-0.86,-0.95l-0.86,-2.37l-0.43,-0.24l-0.63,1.01l-0.16,-0.61l-0.51,-0.12l-0.46,0.29l-0.17,1.16l-0.69,0.34l-0.42,-0.29l-0.15,-1.53l0.45,-0.81l0.72,-0.17l0.28,-0.37l-0.18,-0.5l0.83,-0.24l0.53,-1.23l1.02,-0.07l0.33,-1.29l-0.14,-0.88l1.6,-1.48l-0.0,-0.59l-2.06,-1.88l-0.54,0.0l-0.87,0.81l-1.53,-0.65l-0.73,-1.17l-2.64,-0.64l-0.89,-0.9l0.83,-0.95l-0.16,-0.92l-1.68,-1.19l-2.69,-0.68l0.16,-1.04l-0.8,-0.7l0.34,-0.89l-0.43,-0.4l-0.42,0.05l-0.4,-0.74l0.27,-0.53l-0.3,-0.64l-0.61,-0.24l-1.79,0.2l-1.53,-1.31ZM761.28,187.64l1.37,20.35l0.38,0.36l7.92,0.13l0.01,0.8l0.42,0.11l0.19,0.69l0.41,0.08l-0.73,1.27l-0.49,-0.23l-0.86,0.54l-0.78,2.07l-0.56,0.03l-0.48,0.48l-0.42,1.31l-3.48,0.33l-0.56,0.46l-2.04,-0.11l-0.53,0.3l-0.12,-0.68l0.5,-0.14l1.2,-1.3l-0.79,-1.4l-2.11,0.01l1.55,-0.68l0.01,-0.73l-1.13,-0.36l0.87,-1.73l0.04,-0.85l-0.87,-0.08l-0.84,1.25l-0.15,-0.54l-0.56,-0.22l-0.4,0.21l-0.88,1.1l0.25,0.87l-2.03,-2.24l-0.35,-0.24l-0.62,0.16l-0.47,-0.79l0.38,-0.17l0.3,-0.92l0.79,-0.31l0.31,-1.1l2.14,0.72l0.82,-0.63l0.44,-1.15l-0.09,-0.5l-0.46,-0.21l-0.81,1.13l-0.42,-0.12l-0.4,-0.22l-0.11,-0.87l-0.43,-0.4l-0.49,0.06l-0.07,-0.53l-0.29,-0.04l0.98,-0.6l0.24,-0.65l-0.06,-0.29l-0.72,-0.15l-0.46,0.35l-0.03,-0.4l1.14,-0.5l-0.08,-0.71l-0.41,-0.16l-0.33,-0.72l-0.42,0.09l-0.26,-0.31l0.85,-0.61l0.2,-1.18l1.03,-1.09l0.15,-0.78l-0.45,-0.11l-0.79,0.41l-0.42,-0.26l-0.53,0.27l-0.38,0.72l-0.56,-1.04l1.46,-2.58l0.65,-0.3l0.22,-0.55l3.67,0.18l0.53,-0.23l-0.05,-0.72l-0.39,-0.15l-2.17,-0.03l1.06,-0.94l1.3,0.26l0.46,-0.4l-0.67,-0.73l0.76,-1.39ZM761.51,214.18l-0.03,0.03l-0.03,0.01l0.01,-0.03l0.05,-0.01ZM758.9,210.62l-0.03,0.07l-0.05,-0.04l0.08,-0.03ZM754.69,205.49l-0.0,0.01l0.0,-0.01l0.0,0.0ZM755.52,202.91l-0.06,-0.01l-0.0,-0.0l0.06,0.01ZM754.67,202.21l-0.47,0.12l-0.41,-0.4l0.12,-0.33l0.67,0.23l0.09,0.38ZM754.08,198.84l-0.21,0.25l-0.75,0.13l0.36,-0.73l0.6,0.34ZM750.56,197.33l0.18,0.04l0.57,0.26l-0.27,0.19l-0.48,-0.49Z",name:"Maryland"},"US-AR":{path:"M471.09,293.18l0.69,-30.24l-2.73,-19.37l68.64,0.0l0.54,1.32l0.82,0.61l-0.06,1.37l-0.73,0.37l-0.27,0.72l-1.35,0.64l-0.35,0.81l-0.78,0.37l-1.3,1.99l-0.05,0.65l0.48,0.29l9.77,-0.25l0.56,0.71l-0.96,0.15l-0.58,0.75l0.2,0.53l0.6,0.32l-3.35,1.79l-0.07,0.78l0.58,0.84l-0.59,0.9l0.4,0.74l-1.25,0.46l-0.25,1.17l-1.47,1.57l-0.05,1.35l0.51,2.49l-1.39,0.27l-0.58,1.31l-1.41,0.63l-0.1,0.52l0.59,0.77l-0.01,0.44l-1.03,0.83l-1.88,0.75l-0.26,0.56l0.13,0.92l-1.06,-0.08l-0.45,0.53l-0.46,1.51l0.27,1.3l-0.24,2.38l-1.15,0.73l-1.37,0.0l-0.14,1.53l-0.84,0.17l-0.65,1.35l-1.37,0.82l-0.12,0.81l1.14,0.77l-0.06,0.42l-3.11,0.95l-0.05,0.63l0.77,0.69l-0.46,0.88l0.34,1.1l-0.9,0.31l-1.9,1.96l0.41,0.69l0.8,0.44l-0.03,0.34l-1.09,0.27l-0.2,0.45l0.39,0.73l1.3,0.9l-0.08,1.3l-0.58,0.73l-0.14,0.75l1.08,0.73l0.23,1.67l-0.99,0.67l-0.12,1.64l-43.95,0.05l-0.09,-9.05l-1.0,-0.81l-0.8,0.08l-0.68,-0.31l-0.83,0.25l-1.03,-0.32l-0.87,0.52l-0.97,-0.41l-0.61,-0.92Z",name:"Arkansas"},"US-MA":{path:"M801.12,129.29l30.25,0.84l1.94,-1.08l0.75,-1.12l0.99,-0.04l2.28,-1.25l1.29,0.27l-0.77,0.3l0.22,0.62l0.68,0.35l-0.25,1.27l0.91,0.79l0.15,0.58l1.09,0.45l-0.24,0.34l-2.65,0.86l-0.38,0.9l0.32,0.26l-1.38,0.81l-0.15,0.92l-1.17,0.53l0.12,1.39l1.12,0.73l0.33,0.65l1.4,-0.12l0.49,-0.41l1.09,0.39l0.57,0.57l0.01,0.58l1.23,1.59l-0.41,0.9l-0.65,0.3l-0.07,0.64l1.17,0.95l1.4,0.15l0.12,2.06l0.64,0.85l1.09,0.67l1.36,0.28l0.3,0.42l1.02,0.09l3.35,-1.12l1.1,-0.72l0.46,0.19l-0.04,1.51l-3.47,0.35l-1.11,0.43l-1.98,0.2l-0.44,-0.23l-1.3,1.29l-2.13,0.58l-0.0,-2.23l0.48,-1.12l-0.42,-0.41l-0.56,0.19l-0.81,-0.33l-0.45,0.39l-0.05,0.76l-0.45,0.56l-0.38,-0.06l-0.89,0.74l-0.51,-0.34l-0.6,0.32l-0.35,1.52l-1.03,0.44l-0.37,-0.79l-0.44,-0.11l-0.47,0.37l-0.06,-1.73l-0.79,-0.6l1.07,-1.82l-0.06,-0.44l-0.85,0.1l-0.69,1.11l-0.7,-0.01l-1.11,-0.87l-0.09,-1.86l-0.67,-0.43l-0.1,-1.88l-0.39,-0.37l-21.32,-0.32l-0.41,0.36l-0.35,-0.36l-0.84,-0.07l-9.48,-0.33l3.45,-12.16ZM841.45,131.12l-0.03,-0.02l0.08,-0.65l0.33,0.25l-0.38,0.42ZM851.99,145.45l0.01,-0.21l0.07,0.2l-0.08,0.01ZM851.44,143.71l-0.58,-0.11l-0.11,-0.95l0.34,0.45l0.35,0.6ZM849.42,156.4l0.97,0.05l1.11,-0.69l0.36,0.62l-0.29,0.22l-2.16,-0.21ZM839.31,155.29l0.17,-0.0l0.04,-0.01l-0.09,0.1l-0.12,-0.08ZM840.29,154.71l0.52,-0.77l1.12,-0.74l1.36,1.2l-3.0,0.31Z",name:"Massachusetts"},"US-AL":{path:"M565.68,349.18l-1.28,-25.2l6.17,-52.29l-1.29,-1.7l39.2,0.42l6.25,35.61l0.52,2.03l0.77,1.38l0.26,1.54l1.54,2.21l0.53,1.5l-0.38,1.63l1.33,1.11l-1.92,1.54l-0.5,1.78l0.02,1.16l-0.93,1.67l-0.36,1.42l0.53,2.46l0.8,1.33l0.22,1.27l-1.03,4.45l0.13,1.66l0.97,1.11l0.62,1.59l-39.98,0.01l-0.47,0.48l-0.39,2.39l1.9,2.43l1.51,0.93l-0.58,2.01l0.54,1.63l-0.87,1.12l-1.07,0.63l-0.87,-0.69l-0.4,0.44l0.36,1.13l-2.08,0.46l-0.05,-0.95l-0.81,-0.81l0.0,-0.92l-0.48,-0.24l-0.51,0.41l-0.38,-0.33l-0.34,-0.98l0.5,-1.38l-0.57,-1.68l-1.01,-0.68l-0.17,-0.7l-0.49,-0.22l-1.32,3.12l-0.52,3.82l-0.99,-0.76l-1.99,-0.48l-0.66,0.13Z",name:"Alabama"},"US-MO":{path:"M451.04,169.25l25.13,0.47l16.14,-0.13l21.01,-0.68l0.66,1.1l2.15,1.56l0.2,0.63l0.96,0.79l-0.74,1.99l-0.13,1.76l0.42,3.1l0.76,1.25l-0.11,1.3l0.92,1.24l0.31,1.33l4.26,3.77l0.84,1.48l4.25,3.1l1.02,3.0l-0.22,0.52l0.28,1.59l0.75,1.43l0.65,0.67l0.93,0.21l0.82,-0.4l0.89,-1.07l0.54,-0.11l2.16,0.71l2.12,1.4l-1.06,1.5l0.02,1.87l-2.8,5.38l-0.09,0.89l0.47,1.66l3.87,3.7l1.71,1.02l1.31,0.2l1.37,1.2l1.65,0.81l1.15,1.84l1.73,0.83l0.09,2.41l1.25,2.47l-1.15,1.42l0.03,1.26l0.61,0.31l1.68,3.66l1.65,0.92l0.55,-0.25l0.1,-0.45l0.59,0.92l0.96,0.04l-0.07,1.39l-0.45,0.88l0.31,1.3l-1.32,2.94l-0.44,0.01l-1.1,-1.03l-0.61,0.04l-1.45,3.07l0.16,-0.7l-0.42,-0.97l-0.85,-0.25l-0.75,0.5l-0.08,0.92l0.38,0.53l0.28,1.66l-1.28,0.44l-0.23,0.4l0.59,1.12l-1.34,0.14l-0.2,0.62l1.11,1.63l-0.81,0.5l-0.76,1.62l-9.36,0.24l1.07,-1.61l0.81,-0.4l0.25,-0.69l1.34,-0.63l0.33,-0.75l0.9,-0.72l0.01,-1.92l-0.87,-0.72l-0.1,-0.61l-0.89,-1.08l-68.93,0.0l0.08,-47.48l-0.95,-0.61l-1.11,-0.08l-1.34,-0.66l-0.14,-0.78l-0.94,-1.09l-0.29,-1.33l-1.76,-1.17l-1.17,-1.5l0.67,-0.37l0.14,-1.01l1.09,-0.99l0.13,-0.64l0.92,0.17l0.55,-0.33l-0.07,-1.98l-0.88,-0.63l-0.29,-0.96l-1.08,-0.06l-1.27,0.74l-1.4,-0.78l-2.39,-2.06l-0.96,-0.27l0.21,-1.3l-1.13,-1.45l0.09,-0.89l-1.28,-0.51l-0.52,-0.73l-0.69,-0.25l-0.98,-3.44l-1.15,-0.74l-0.03,-0.33Z",name:"Missouri"},"US-MN":{path:"M432.13,30.99l-0.39,-1.26l0.08,-1.11l-0.48,-0.49l-1.31,-3.47l0.1,-2.95l-0.43,-1.8l0.32,-1.02l-0.52,-2.16l0.86,-2.35l-1.98,-6.4l31.65,-0.02l0.54,-0.76l-0.02,-6.63l2.33,0.11l1.97,0.83l0.35,2.7l1.54,5.01l0.18,2.59l1.84,1.45l1.23,0.49l3.56,-0.13l0.91,1.19l5.57,0.33l0.39,0.24l0.47,1.49l1.03,0.65l4.4,-0.57l0.66,-0.5l0.13,-0.63l0.76,-0.28l1.9,-0.29l4.24,0.25l1.46,0.75l3.55,0.85l-1.14,0.59l-0.06,0.82l0.48,0.44l3.1,0.16l0.37,1.94l1.48,2.23l0.68,0.09l1.14,-0.63l0.11,-1.59l2.92,-0.23l1.33,2.1l2.03,0.88l1.61,0.29l0.48,0.53l-0.07,0.8l0.56,0.36l1.37,0.16l0.35,0.79l2.61,0.24l2.4,-0.59l3.17,-2.1l2.82,-1.2l1.07,2.42l0.93,0.55l2.43,-0.41l0.85,0.41l6.44,-0.63l0.58,0.22l1.21,1.62l1.23,0.65l2.38,-0.55l1.13,0.26l-0.79,0.71l-5.25,2.34l-6.94,1.97l-4.09,1.91l-2.49,2.07l-1.05,0.44l-7.71,7.27l-1.04,0.47l-3.45,2.93l-4.62,2.87l-1.05,1.54l-0.6,0.35l-0.23,0.85l-0.83,-0.06l-0.49,0.46l-0.02,10.91l-0.9,1.01l-1.06,-0.01l-0.6,0.69l-0.86,0.08l-0.68,0.69l-2.19,0.91l-1.1,1.59l-0.01,0.66l-1.9,2.0l-0.17,1.83l0.32,0.87l2.16,0.5l1.23,2.24l-1.55,3.05l-0.15,1.51l0.35,1.19l-0.81,1.06l0.67,2.77l-0.3,0.63l0.01,1.33l-0.61,1.14l0.1,0.5l3.71,2.91l2.98,0.55l1.7,2.09l2.82,0.64l2.27,1.85l2.06,3.29l2.46,1.76l2.06,0.23l1.0,0.7l0.85,0.15l0.68,1.23l1.16,0.81l0.09,1.77l0.55,1.16l-0.04,4.11l-80.24,0.02l-0.0,-33.94l-0.67,-1.19l-0.82,-0.73l-2.57,-0.77l-0.89,-1.71l-1.4,-1.6l0.21,-0.52l2.95,-1.98l1.03,-1.78l0.54,-2.29l-0.3,-1.41l0.3,-1.63l-0.13,-1.36l-0.48,-0.95l-0.1,-2.09l-1.77,-2.38l-0.43,-1.02l-0.15,-1.94l-0.64,-0.9l0.22,-1.47l-0.31,-1.37l0.63,-2.38l-1.05,-1.73l-0.22,-7.53l-0.41,-0.76l0.2,-3.53l-1.53,-3.68l-0.52,-0.6Z",name:"Minnesota"},"US-CA":{path:"M6.83,168.53l0.52,-1.07l0.94,-0.01l0.6,-1.99l0.87,-0.1l0.79,-0.92l-0.33,-0.61l-0.82,-0.21l0.73,-2.46l-0.8,-2.01l0.58,-0.97l0.97,-4.89l-0.15,-1.62l-1.38,-4.03l-1.4,-0.73l0.5,-1.17l0.22,-2.45l64.62,0.0l0.16,55.21l29.15,23.66l22.81,19.74l31.48,28.0l0.21,2.18l0.76,0.65l0.41,1.32l0.83,0.42l1.02,1.89l0.07,0.74l0.72,1.01l0.05,1.15l3.1,2.06l0.71,0.83l-1.44,1.37l-2.51,1.37l-0.77,1.71l-1.31,1.09l-0.2,0.77l0.41,0.72l-0.32,0.49l0.39,2.49l-0.41,0.61l-0.22,1.97l-1.37,2.14l-1.33,0.29l-0.32,0.56l0.36,0.61l-0.29,1.14l0.6,0.82l0.14,0.9l-0.28,2.24l0.64,0.74l2.06,0.34l0.75,0.74l0.16,1.84l-0.87,0.72l-0.17,1.11l-1.96,-0.21l-1.0,0.63l-36.74,3.09l-0.06,-0.43l0.48,-0.66l-0.33,-1.12l-1.22,-1.15l-0.83,0.13l-0.4,-1.54l0.41,-1.0l-1.08,-3.93l-2.97,-4.08l-4.99,-4.02l-2.39,-1.29l-2.22,-1.92l-1.89,-0.51l-1.05,0.35l-0.14,0.68l-1.37,-0.47l0.33,-1.52l-0.83,-1.99l-1.2,-1.39l-0.71,-0.35l-1.91,-0.0l-2.14,0.52l-4.96,-1.65l-1.26,-0.84l-0.93,-1.97l-4.41,-2.58l-1.74,-0.09l-0.88,0.37l-1.06,-0.38l-1.29,0.14l-1.98,-0.85l-2.16,-0.26l-4.96,0.44l-0.66,-1.24l-1.87,-0.66l0.62,-2.18l-0.52,-1.05l0.27,-1.9l-0.76,-0.89l0.54,-1.99l-0.19,-1.97l-1.12,-0.84l-1.2,0.01l-1.39,-0.83l-0.19,-0.47l0.95,-1.43l-0.87,-1.71l-0.42,-0.38l-1.59,-0.31l-2.43,-3.0l-1.76,-0.59l-0.79,-1.98l-1.9,-1.75l-0.75,-2.13l-1.04,-0.43l-1.65,-2.44l-2.34,-1.42l-0.95,-1.1l-0.76,-3.06l0.18,-1.26l-0.52,-0.47l0.25,-0.3l0.62,0.45l0.44,-0.15l0.66,-0.68l0.45,-1.41l0.73,-0.2l-0.05,-0.52l-0.52,-0.28l-0.08,-1.5l-1.68,-2.52l-0.63,-0.24l-0.76,0.36l-1.85,0.04l-3.39,-2.89l-1.01,-1.16l-0.19,-0.81l0.27,-1.95l-0.82,-2.35l-1.04,-0.81l0.39,-2.36l-0.3,-1.83l1.1,-0.4l0.45,1.07l-0.44,0.39l0.52,2.23l1.76,0.59l2.52,2.09l0.87,0.15l0.69,-0.51l-0.42,-1.0l-0.72,-0.3l-0.61,-1.11l-0.32,-1.62l-0.75,-0.91l-0.34,0.05l0.31,-0.7l-1.63,-0.68l0.42,-0.62l-0.56,-1.48l-0.93,-0.13l-0.28,-0.37l0.69,-0.64l0.87,-0.2l0.69,-0.74l1.33,0.58l2.31,-0.57l4.91,0.85l0.44,-0.28l0.13,-0.87l0.57,0.95l0.71,-0.2l0.23,-0.45l1.5,1.01l0.63,-0.33l-0.07,-0.36l-2.14,-1.83l-1.57,-0.04l0.08,-0.41l-0.37,-0.47l-1.93,1.49l-0.69,-0.14l-0.66,0.3l-0.24,-0.42l-0.96,0.04l0.09,-0.55l-0.5,-0.53l-1.0,0.07l-1.33,1.59l-1.71,-0.46l-0.51,-0.63l-1.49,-0.81l-2.23,0.97l0.29,0.72l-0.35,1.1l0.5,0.49l-0.46,0.88l0.4,1.77l-0.28,-0.01l-1.79,-1.35l-1.1,-0.04l-1.57,-1.71l-1.5,-0.67l-0.08,-0.57l-0.57,-0.02l0.33,-0.88l1.24,1.4l0.49,0.12l0.22,-0.45l-2.41,-3.69l-0.9,-0.89l-0.49,-0.07l-0.05,-0.67l-0.99,-1.73l-3.14,-2.09l-1.57,-2.18l-4.45,-4.21l0.58,-1.59l-0.08,-0.75l-2.01,-5.3l0.12,-1.57l0.73,-1.91l-0.34,-2.55l-0.6,-0.92l-0.39,-1.94l-0.89,-0.71l-1.99,-2.71l-0.63,-0.32l-0.64,-1.41l-1.16,-0.5l-2.59,-2.21l0.17,-1.12l-0.87,-2.08l1.33,-3.23ZM46.47,215.33l-0.0,0.0l-0.0,-0.0l0.01,-0.0ZM47.97,215.2l0.02,-0.09l0.04,0.0l-0.03,0.05l-0.03,0.05ZM97.61,297.6l1.04,0.33l0.79,1.03l-1.64,-0.19l-0.18,-1.16ZM96.93,306.33l0.34,0.21l1.1,0.99l-1.04,-0.47l-0.4,-0.73ZM80.82,300.26l0.12,-0.04l0.26,0.18l-0.28,-0.06l-0.11,-0.09ZM81.3,300.45l0.24,0.06l0.1,0.04l-0.26,-0.06l-0.07,-0.05ZM75.84,286.48l1.87,0.35l0.83,0.5l-1.2,0.3l-1.24,-0.18l-0.26,-0.97ZM80.08,287.05l0.06,-0.19l0.32,-0.07l-0.1,0.22l-0.28,0.04ZM70.73,287.59l1.81,-0.29l0.82,0.74l-1.56,0.63l-1.06,-1.08Z",name:"California"},"US-IA":{path:"M438.31,115.06l82.27,-0.03l0.72,2.23l1.85,1.0l0.02,0.46l-1.02,1.44l-0.26,0.94l0.42,4.43l0.79,1.16l0.22,1.53l1.27,1.6l4.71,1.13l1.0,1.78l-0.38,0.8l0.22,0.67l3.26,2.31l0.6,2.12l3.45,2.28l0.41,1.42l-0.7,3.48l-1.75,1.51l-0.67,1.59l0.0,1.09l-1.31,1.02l-2.49,0.6l-1.5,1.08l-4.42,0.32l-0.92,0.55l-0.74,1.41l-0.38,2.17l0.29,0.96l1.78,1.39l0.26,2.19l-2.05,2.55l-0.41,1.87l-0.6,1.11l-2.83,0.93l-1.05,0.78l-0.28,0.9l0.6,0.77l0.0,1.72l-0.54,0.14l-1.18,-0.78l-0.22,-0.66l-1.38,-1.23l-0.8,-0.36l-0.2,-0.69l-0.84,-0.65l-21.21,0.69l-14.33,0.12l-26.79,-0.46l-0.17,-0.87l-1.21,-0.68l-0.27,-0.54l0.58,-0.87l0.12,-2.02l-0.26,-1.88l-0.51,-0.57l0.18,-3.14l-0.96,-0.56l0.79,-1.38l-0.03,-0.47l-1.19,-0.51l0.39,-2.12l-0.29,-0.37l-0.93,-0.2l0.16,-1.0l-0.67,-0.41l-0.7,0.18l-0.29,-2.33l0.55,-2.18l-1.4,-1.93l0.01,-1.61l-1.66,-1.38l-0.28,-1.5l-1.01,-0.83l0.11,-1.83l-0.99,-1.63l0.26,-1.38l-0.22,-0.98l-1.31,-0.64l-0.72,-2.41l-1.7,-1.64l0.6,-1.23l0.54,-0.4l0.81,-2.29l0.1,-1.46l0.52,-0.54l0.26,-1.05l-0.43,-1.99l-1.21,-0.3l-0.04,-0.53l0.41,-0.49l0.05,-1.56l-0.89,-1.22l0.0,-0.65Z",name:"Iowa"},"US-MI":{path:"M590.8,146.95l2.0,-1.54l2.57,-4.75l1.79,-2.4l1.66,-4.1l0.85,-4.51l-0.13,-5.65l-1.49,-3.87l1.04,-1.0l-0.49,-0.52l-1.14,0.34l-2.82,-6.76l0.26,-1.1l1.25,-1.64l0.14,-0.87l-0.29,-2.83l-1.02,-1.55l0.04,-0.48l2.07,-2.12l1.8,-3.42l0.57,-4.68l-0.53,-1.47l1.24,-0.82l0.8,0.1l0.63,-0.35l0.24,-3.05l1.08,0.05l0.89,-1.17l1.14,0.58l0.67,-0.2l1.16,-2.16l0.99,-0.92l0.82,-1.39l0.52,-0.06l-0.64,0.61l0.33,1.48l-0.96,1.47l0.64,0.48l-0.87,2.23l0.68,1.38l0.72,0.03l0.44,0.57l0.64,-0.12l1.24,-1.85l1.21,-2.97l0.24,-1.83l-0.23,-3.06l0.73,-0.79l2.4,-1.14l2.84,-0.1l1.07,-0.41l0.38,-0.52l-0.17,-0.61l-1.74,-0.34l-0.57,-0.48l-0.46,-0.93l0.0,-1.19l2.32,-2.32l0.09,-0.66l1.7,0.04l0.92,-0.72l3.87,2.35l2.86,0.16l1.32,0.55l1.0,1.06l0.35,1.09l0.69,0.54l2.46,0.1l1.53,1.14l1.9,0.37l0.69,0.68l3.18,0.89l0.9,0.78l-0.16,1.01l0.8,1.3l0.6,0.28l0.18,0.78l-0.24,0.43l-0.6,-0.33l-1.02,0.35l-0.57,1.6l0.6,1.3l1.4,1.09l0.44,1.26l0.25,2.03l-0.42,1.46l-0.21,4.9l-1.48,1.31l-0.74,-0.07l-0.92,0.59l-0.95,3.8l-1.15,0.24l-0.32,0.68l-1.88,0.08l-0.82,0.42l-1.01,2.16l-0.3,3.11l1.15,1.36l2.67,1.14l0.87,0.07l1.26,-0.89l0.85,-1.16l0.58,0.28l0.4,-0.15l2.39,-4.17l1.18,-1.09l1.43,-0.12l3.11,-1.48l1.93,0.83l0.97,0.77l0.78,1.07l0.78,2.01l1.39,6.81l0.33,3.3l0.79,3.3l0.92,1.68l-1.03,3.2l-0.01,2.15l-0.94,2.23l-0.44,0.33l-0.3,-1.08l0.16,-0.68l-1.33,-0.73l-2.09,0.91l-0.22,0.75l0.33,0.61l-0.79,0.33l-0.43,0.64l-0.24,2.5l-0.58,0.54l-1.71,0.53l-1.33,1.39l-1.04,3.06l-0.07,1.36l-0.4,0.71l-0.43,0.09l-0.18,0.76l-0.6,0.16l-1.12,1.21l-1.54,2.54l-20.07,0.64l0.0,-0.73l-0.4,-0.4l-30.47,-0.02ZM609.11,82.62l0.03,-0.02l-0.0,0.01l-0.03,0.01ZM610.05,87.86l-0.04,-0.14l0.09,-0.11l-0.04,0.22l-0.01,0.04ZM534.47,55.43l5.23,-1.66l4.06,-2.9l6.1,-0.65l1.51,-0.61l2.75,-2.19l1.01,0.13l1.64,-0.49l1.31,-1.91l3.31,-2.28l0.04,1.6l1.83,0.72l-0.13,1.3l0.65,0.19l0.46,0.59l-0.57,2.73l0.3,0.9l-0.37,0.38l0.16,0.53l0.7,0.06l1.39,-1.86l1.23,-0.68l-0.55,0.94l0.51,0.51l0.93,-0.5l0.7,-1.03l1.1,-0.28l3.24,0.13l1.53,0.36l1.09,0.97l1.51,0.55l0.35,1.01l2.17,2.76l0.95,0.43l0.34,1.44l0.69,0.39l1.9,0.28l1.87,-0.19l1.58,-0.8l1.91,1.82l1.03,-0.09l0.84,-0.66l1.73,1.18l0.69,-0.21l2.06,-2.08l3.15,-1.32l2.0,-1.26l0.91,0.23l3.53,-0.64l5.31,0.48l5.01,-1.79l2.64,0.04l-0.47,2.82l0.18,0.68l-0.53,0.96l0.7,0.94l1.28,-0.15l2.1,0.94l2.44,-0.85l0.58,0.5l0.12,0.69l0.79,0.31l1.36,-0.49l1.07,-1.27l0.79,-0.16l1.0,0.36l1.58,-0.82l0.76,0.17l-0.63,1.73l0.49,1.21l-1.09,-0.19l-0.44,0.44l0.49,1.7l-1.01,0.81l0.06,0.46l0.71,0.82l1.44,-0.17l1.1,0.61l0.02,1.1l0.84,0.92l1.42,0.66l-1.29,0.35l-5.0,-0.87l-0.57,0.2l-1.34,-0.36l-0.97,0.25l-0.55,-0.78l-1.63,-0.3l-0.63,0.32l-0.29,1.06l-0.62,0.6l0.02,1.84l-0.9,-0.33l-0.75,-0.94l-0.75,-0.22l-1.71,-1.72l-2.34,-0.86l-1.63,-0.19l-0.97,-0.58l-2.98,0.03l-0.65,0.31l-1.59,2.06l-3.63,0.18l-0.69,0.62l-2.05,-0.58l-2.96,0.45l-0.82,0.65l-0.94,2.14l-0.82,0.14l-0.95,0.66l-0.68,0.16l0.4,-1.61l-0.62,-0.97l-1.05,0.17l-0.93,0.72l-0.93,-0.47l-0.7,0.06l-0.41,0.3l-0.02,0.74l-1.02,1.66l-1.32,0.38l0.08,-1.19l-0.32,-0.96l0.58,-1.46l-0.13,-0.38l-0.63,-0.24l-1.42,2.25l-0.57,2.22l-1.25,0.67l-1.69,2.5l-0.98,2.25l-3.26,4.35l-0.81,0.6l-0.01,0.77l-1.23,-1.23l0.4,-1.47l0.86,-1.43l-0.32,-0.81l-0.57,-0.34l-1.42,0.58l-1.21,-0.01l0.18,-1.06l1.0,-1.21l-0.22,-1.2l0.43,-0.95l-0.43,-0.91l0.23,-0.76l-1.73,-1.6l-1.1,-0.17l-0.54,-0.45l-1.5,-0.17l0.49,-1.11l-0.78,-1.44l-1.07,-0.57l-2.25,-0.33l-3.15,-0.97l-1.63,0.36l-1.42,-0.53l-1.68,-0.02l-4.41,-2.19l-15.41,-3.72l-1.69,-3.21l-1.83,-1.03l-0.85,-0.03ZM594.09,71.3l-1.47,1.73l-0.03,0.49l-0.37,-0.25l-0.18,-0.28l1.19,-1.75l0.85,0.05ZM636.83,67.08l2.09,-1.04l0.29,-0.52l-0.13,-0.56l1.03,0.3l0.59,1.21l0.75,0.26l-0.43,0.84l-0.41,0.11l-1.46,-0.52l-0.85,0.29l-1.46,-0.37ZM631.2,60.61l0.36,0.48l0.13,0.48l-0.54,-0.69l0.06,-0.27ZM625.65,70.56l1.65,0.27l0.33,0.25l-0.22,0.35l-0.63,0.04l-1.13,-0.9ZM609.75,74.09l-0.79,-0.06l1.02,-2.54l0.28,2.15l-0.51,0.45ZM602.23,83.18l0.43,0.3l-0.17,0.46l-0.34,-0.65l0.07,-0.11ZM592.39,56.63l-0.19,-0.37l0.09,-0.31l0.33,0.29l-0.23,0.39ZM562.34,44.01l0.15,-1.33l1.15,-0.8l1.48,-1.76l2.11,-1.16l0.63,0.09l0.62,-0.47l2.29,-0.57l3.54,0.01l1.02,0.67l-0.59,0.26l-1.34,-0.27l-2.42,0.43l-0.2,0.24l0.22,0.65l0.66,0.18l-1.28,0.69l-1.7,1.55l-0.75,0.17l-0.58,1.27l-1.34,1.09l-0.96,1.8l-0.59,-0.84l0.88,-0.76l0.39,-1.74l-0.79,-0.36l-0.73,0.76l-0.15,0.65l-0.5,-0.35l-1.22,-0.07ZM553.13,29.98l0.66,-0.43l0.23,-0.5l-0.31,-0.21l0.57,-0.38l8.13,-3.7l-0.46,0.49l-0.01,0.74l-0.49,0.38l-4.77,1.88l-1.01,0.8l0.17,0.37l-2.07,0.86l-0.63,-0.3Z",name:"Michigan"},"US-GA":{path:"M609.3,270.42l37.77,-0.27l-2.86,2.59l-0.62,1.33l-0.08,1.06l0.6,0.75l2.31,1.13l2.01,1.96l2.82,0.55l0.41,1.37l1.04,1.48l0.49,2.09l1.99,2.18l0.57,1.52l4.64,3.32l1.53,2.81l1.82,0.79l1.86,1.67l0.02,1.86l0.91,1.01l0.43,-0.06l-0.02,0.88l0.56,0.7l0.63,0.2l0.29,1.01l3.73,2.0l0.27,0.65l-0.12,0.94l1.01,1.62l0.51,1.68l0.0,2.22l0.48,0.61l2.14,1.16l0.58,0.72l0.49,2.11l0.53,0.55l-0.38,2.04l0.41,1.34l1.01,0.92l1.31,0.03l1.06,0.81l1.08,0.25l-0.49,0.38l-0.41,-0.34l-0.47,0.16l-0.52,0.77l0.31,0.8l-0.28,0.21l-1.07,-0.32l-0.58,-0.55l-0.64,0.26l-0.0,0.6l-0.39,0.31l0.23,0.67l1.06,0.38l-0.63,0.82l-2.59,-0.43l-0.13,0.72l1.07,0.64l-2.03,2.59l0.02,1.36l-0.56,0.73l0.39,1.15l-1.71,-0.48l-0.46,0.16l-0.06,0.65l0.4,0.34l2.24,0.62l0.72,0.58l-1.53,1.62l-0.12,-1.11l-0.99,-0.02l-0.18,1.33l-0.46,0.07l-0.45,0.74l-0.01,0.47l0.88,1.03l-1.05,0.61l0.69,0.67l-0.91,1.57l0.63,1.45l-0.08,0.49l-0.64,0.13l-2.11,-0.52l-3.17,-1.34l-1.17,0.09l-0.28,0.51l-0.58,0.14l-0.49,0.93l-0.1,1.69l0.55,1.3l-0.55,3.06l-0.26,0.07l-1.29,-0.04l-0.27,-0.73l0.1,-1.03l-0.87,-1.65l-40.89,-2.66l-0.47,-0.48l-0.23,-1.76l-1.06,-2.04l0.17,-0.5l-0.41,-1.28l-1.25,-1.61l-0.12,-1.36l1.04,-4.6l-1.56,-4.92l0.31,-1.23l0.95,-1.74l0.43,-2.81l1.51,-0.82l0.6,-1.18l-1.47,-1.27l0.35,-1.66l-0.57,-1.58l-1.48,-2.14l-0.52,-2.33l-0.53,-0.61l-0.47,-1.89l-6.24,-35.42ZM676.67,331.39l0.26,-0.62l0.22,-0.2l-0.33,0.66l-0.16,0.16ZM673.34,341.64l-0.1,-0.24l0.18,-0.35l-0.05,0.47l-0.03,0.11Z",name:"Georgia"},"US-AZ":{path:"M154.85,313.2l0.12,-1.39l0.88,-1.11l0.3,-0.93l0.33,-0.23l2.28,0.14l0.41,-0.45l0.09,-0.95l0.98,-0.97l-0.15,-2.2l-0.56,-0.94l-0.84,-0.44l-1.35,-0.09l-0.75,-0.57l0.35,-1.95l-0.19,-1.11l-0.58,-0.82l0.36,-0.71l-0.18,-0.62l1.17,-0.4l1.61,-2.52l0.23,-1.97l0.45,-0.71l-0.38,-2.48l0.38,-0.61l-0.44,-1.02l1.3,-1.09l0.5,-1.43l2.69,-1.53l1.55,-1.49l0.17,-0.53l-0.27,-0.85l-3.69,-2.47l0.02,-1.0l-0.74,-1.04l-0.07,-0.75l-1.12,-2.06l-0.81,-0.36l-0.38,-1.27l-0.68,-0.52l-0.29,-2.75l0.37,-0.81l-0.28,-0.55l0.74,-0.49l0.16,-1.2l-0.32,-2.57l-1.14,-2.76l0.3,-2.15l-0.75,-2.3l0.39,-2.15l-1.11,-2.05l0.4,-1.56l2.12,-0.81l1.67,0.58l1.22,-0.33l1.13,1.65l0.8,0.49l1.38,-0.07l0.86,-0.56l1.28,-3.01l0.04,-13.77l76.9,0.06l-0.01,98.59l-30.93,-0.1l-57.9,-19.93Z",name:"Arizona"},"US-MT":{path:"M139.89,32.53l-0.91,-0.97l-0.48,-1.27l-1.31,-1.05l-1.65,-1.99l0.01,-19.26l185.92,-0.0l0.14,77.63l-108.71,0.0l-0.4,0.4l-0.01,9.12l-1.76,-1.59l-0.13,-0.77l-1.47,-1.94l-1.31,-0.51l-1.68,1.0l0.15,0.9l-0.66,0.45l-0.18,1.37l-2.43,-0.09l-1.85,0.71l-1.01,-0.64l-3.32,0.45l-2.49,-0.57l-1.57,0.69l-0.64,1.38l-4.84,-0.85l-1.22,0.47l-0.99,0.91l-0.23,0.62l-1.83,-1.02l0.01,-1.25l-1.08,-1.33l0.28,-0.94l-1.6,-2.55l-1.61,-0.91l-1.38,0.49l-0.31,-0.54l-1.19,-0.64l-0.53,-1.07l0.55,-0.67l-0.02,-1.25l-1.11,-1.99l-0.81,-0.21l-0.54,-1.34l-1.88,-2.02l0.02,-1.35l-0.74,-1.01l0.13,-1.28l-0.84,-0.67l0.33,-0.86l-0.34,-0.69l-1.25,-0.51l-0.23,-0.51l-0.99,-0.69l-0.82,-0.24l-0.42,0.3l-0.03,0.76l-0.62,0.31l-0.96,1.22l-1.69,0.55l-1.06,1.1l-0.41,-0.03l-1.64,-1.37l-1.09,-0.24l-0.11,-0.69l0.61,-0.64l0.08,-1.01l-0.83,-1.29l0.69,-1.04l1.06,-0.22l0.73,-0.85l-0.44,-0.97l0.14,-1.16l-1.01,-0.46l-0.18,-0.69l0.49,-1.12l-0.71,-0.9l0.65,-0.15l0.34,-0.45l-0.3,-1.56l1.24,-3.41l-0.23,-1.02l0.75,-0.67l0.18,-2.82l-0.79,-0.48l-1.9,0.58l-1.51,0.06l-0.64,-0.36l0.27,-0.64l-0.44,-0.69l-0.87,-0.37l-0.9,0.47l-0.24,-0.88l-2.01,-1.17l-0.28,-1.68l-2.01,-1.38l-0.21,-0.6l-2.06,-2.35l-1.31,-1.0l-0.86,-1.38l-2.64,-0.86l-1.17,-1.49l-1.58,-0.91l0.57,-0.26l0.15,-0.61l-1.18,-1.38l0.47,-0.44l0.13,-0.73l-0.59,-0.94l-0.08,-0.9l-0.73,-0.62Z",name:"Montana"},"US-MS":{path:"M515.22,334.86l1.34,-0.07l0.48,-0.44l0.54,-2.14l-0.51,-1.45l1.43,-1.3l0.47,-2.76l0.79,-1.7l1.66,-0.82l1.12,-1.46l1.27,-0.73l0.41,-1.42l-0.47,-0.71l0.98,-0.17l1.02,-1.94l0.89,-0.99l-0.07,-0.74l-1.26,-0.49l-0.23,-0.78l-1.43,-0.93l0.11,-1.66l-1.04,-1.34l0.95,-0.33l0.48,-0.53l-0.16,-0.85l-1.12,-0.41l0.32,-1.32l0.95,-1.14l-0.39,-0.83l-1.06,-0.46l0.1,-2.16l0.77,-0.31l0.29,-0.71l-0.33,-2.05l-1.0,-0.58l0.68,-0.96l0.12,-1.78l-1.5,-1.26l1.02,-0.49l0.1,-1.0l-1.0,-0.78l1.41,-1.42l0.81,-0.17l0.4,-0.55l-0.3,-1.3l0.45,-1.11l-0.5,-0.69l2.3,-0.61l0.6,-0.58l0.03,-0.91l-1.14,-0.81l1.25,-0.71l0.68,-1.34l0.77,-0.01l0.46,-0.85l-0.05,-0.57l1.22,-0.24l1.17,-0.87l0.39,-2.84l-0.27,-1.26l0.43,-1.29l1.26,-0.11l0.46,-0.75l-0.28,-0.78l2.51,-1.15l0.62,-0.85l-0.06,-0.97l31.95,0.04l0.6,1.06l0.66,0.44l-6.16,52.22l1.23,26.02l-0.59,0.45l-1.17,-0.36l-0.7,-0.82l-1.2,0.7l-1.0,0.02l-1.67,-1.17l-1.54,-0.31l-0.7,0.2l-0.39,0.4l0.18,0.31l-0.39,0.19l-3.37,0.92l0.01,-0.37l-0.73,-0.48l-0.88,-0.06l-0.62,0.8l0.57,0.5l-1.38,0.76l-0.41,0.98l-1.61,-0.02l-0.73,-1.47l-0.7,-2.73l-1.03,-1.41l-0.88,-0.49l-0.17,-1.09l-0.48,-0.76l1.65,-4.42l0.06,-0.99l-0.39,-0.33l-28.75,-0.0l0.45,-0.64l-0.73,-1.43l0.24,-1.31l-0.56,-0.6Z",name:"Mississippi"},"US-SC":{path:"M647.93,270.13l4.58,-1.42l0.89,0.11l1.2,-0.92l3.68,-0.92l0.52,-0.62l0.51,0.26l20.12,0.83l-0.19,0.91l0.29,0.57l0.63,0.13l1.26,-0.82l1.95,2.41l-0.05,1.96l0.42,0.57l17.49,0.53l16.35,15.58l-0.12,0.35l-2.42,1.24l-2.75,2.41l-3.11,4.02l-0.56,1.99l-0.74,-0.28l1.19,-1.87l-0.56,-0.37l-0.83,0.56l-0.74,0.98l-0.39,1.21l0.25,0.68l1.11,0.64l0.17,0.68l-1.72,0.11l-0.37,0.63l0.64,0.45l-1.05,0.61l-0.26,0.77l-1.17,0.24l-0.73,-0.69l-1.05,0.49l-0.8,1.2l0.11,0.86l-1.15,0.71l-0.76,1.0l-1.16,0.57l-0.55,-0.41l0.26,-0.32l-0.32,-0.79l-1.25,0.0l-0.09,0.94l-0.37,-0.02l-0.11,0.69l1.47,1.13l-0.94,0.71l-1.12,0.0l-0.33,0.43l0.12,0.33l-2.01,0.62l-1.01,-0.86l-0.51,-0.01l-0.24,0.65l0.76,0.71l-1.37,0.87l-0.49,-0.66l-0.58,0.42l-0.03,0.47l-1.24,-0.54l-0.99,-0.87l-0.52,0.4l0.02,0.34l-1.56,-0.08l-0.49,0.61l0.32,0.42l-0.4,0.49l0.12,1.92l-0.92,-1.33l-0.03,-1.43l-0.85,-0.85l-0.61,-0.13l-0.39,0.51l1.02,3.03l-0.15,0.66l0.71,0.96l-0.45,0.25l-0.16,0.79l-1.58,2.47l-1.06,-0.8l-1.3,-0.04l-0.63,-0.63l-0.29,-0.84l0.37,-2.2l-0.63,-0.86l-0.45,-2.02l-0.82,-1.01l-2.35,-1.41l0.02,-2.13l-0.58,-1.87l-0.92,-1.43l0.12,-0.81l-0.45,-1.09l-3.76,-2.04l-0.29,-1.07l-0.92,-0.41l-0.23,-1.38l-0.73,-0.13l-0.48,-0.54l0.21,-0.94l-0.36,-1.09l-2.0,-1.8l-1.74,-0.73l-1.49,-2.77l-3.04,-2.08l-0.87,-0.98l-0.67,-0.2l-0.61,-1.57l-1.88,-2.03l-0.46,-2.0l-1.06,-1.53l-0.61,-1.64l-0.86,-0.45l-2.06,-0.16l-2.04,-2.11l-0.9,-0.13l-1.67,-1.25l0.62,-1.61l2.76,-2.26l0.29,-0.79ZM684.31,317.85l0.75,0.36l-1.08,1.1l0.32,-0.66l0.0,-0.8ZM685.96,313.74l0.74,0.13l-0.19,0.34l0.37,0.34l1.58,0.18l-1.33,1.17l0.45,0.55l0.72,-0.19l-1.84,0.74l0.19,-1.48l-0.51,-0.41l0.15,-0.89l-0.34,-0.49Z",name:"South Carolina"},"US-RI":{path:"M833.31,149.38l0.28,0.08l0.18,2.3l-0.37,0.3l-0.08,-2.69ZM831.58,152.04l-0.15,-0.24l0.62,-1.09l-0.05,1.17l-0.42,0.16ZM823.44,155.12l0.52,-1.34l0.14,-1.92l-0.07,-8.81l5.66,-0.09l0.11,1.82l0.66,0.45l-0.03,0.58l-0.03,0.29l-0.78,0.05l-0.06,0.24l0.05,1.34l0.39,0.51l-0.56,-0.07l-0.64,0.49l0.5,1.05l-0.47,0.91l0.27,1.78l-0.44,1.31l-0.44,0.49l-0.86,-0.1l-3.91,1.0ZM831.88,148.23l0.06,0.41l-0.12,0.22l-0.12,-0.03l0.18,-0.6ZM827.04,158.28l0.01,0.02l-0.04,0.01l0.02,-0.01l0.01,-0.01Z",name:"Rhode Island"},"US-CT":{path:"M794.28,159.67l3.37,-1.92l0.09,-0.57l-0.85,-1.29l0.96,-13.63l9.71,0.36l0.44,0.52l0.67,-0.06l0.38,-0.42l14.16,0.21l0.08,8.96l-0.12,1.65l-0.51,1.34l-1.59,-0.15l-1.07,0.44l-1.0,-0.5l-0.44,0.69l-1.06,-0.22l-1.51,0.72l-0.49,-0.24l-0.28,-0.97l-0.79,-0.29l-0.38,0.6l0.49,0.66l-0.07,0.38l-0.78,-0.22l-1.17,0.47l-1.52,-0.35l-1.31,0.49l-1.35,-0.25l-1.35,0.46l-0.33,-0.95l-0.58,-0.06l-1.58,1.74l-1.13,0.25l-0.51,0.76l-0.63,-0.39l-1.02,0.24l-0.3,0.66l-1.83,0.39l-2.38,1.39l-1.53,0.35l-0.9,-1.23Z",name:"Connecticut"}},height:478.45409710972797,projection:{type:"mill",centralMeridian:-10},width:900});

jvm.$.fn.vectorMap("addMap","world_mill_en",{insets:[{width:900,top:0,height:440.70631074413296,bbox:[{y:-12671671.123330014,x:-20004297.151525836},{y:6930392.02513512,x:20026572.39474939}],left:0}],paths:{BD:{path:"M651.84,230.21l-0.6,-2.0l-1.36,-1.71l-2.31,-0.11l-0.41,0.48l0.2,0.94l-0.53,0.99l-0.72,-0.36l-0.68,0.35l-1.2,-0.36l-0.37,-2.0l-0.81,-1.86l0.39,-1.46l-0.22,-0.47l-1.14,-0.53l0.29,-0.5l1.48,-0.94l0.03,-0.65l-1.55,-1.22l0.55,-1.14l1.61,0.94l1.04,0.15l0.18,1.54l0.34,0.35l5.64,0.63l-0.84,1.64l-1.22,0.34l-0.77,1.51l0.07,0.47l1.37,1.37l0.67,-0.19l0.42,-1.39l1.21,3.84l-0.03,1.21l-0.33,-0.15l-0.4,0.28Z",name:"Bangladesh"},BE:{path:"M429.29,144.05l1.91,0.24l2.1,-0.63l2.63,1.99l-0.21,1.66l-0.69,0.4l-0.18,1.2l-1.66,-1.13l-1.39,0.15l-2.73,-2.7l-1.17,-0.18l-0.16,-0.52l1.54,-0.5Z",name:"Belgium"},BF:{path:"M421.42,247.64l-0.11,0.95l0.34,1.16l1.4,1.71l0.07,1.1l0.32,0.37l2.55,0.51l-0.04,1.28l-0.38,0.53l-1.07,0.21l-0.72,1.18l-0.63,0.21l-3.22,-0.25l-0.94,0.39l-5.4,-0.05l-0.39,0.38l0.16,2.73l-1.23,-0.43l-1.17,0.1l-0.89,0.57l-2.27,-1.72l-0.13,-1.11l0.61,-0.96l0.02,-0.93l1.87,-1.98l0.44,-1.81l0.43,-0.39l1.28,0.26l1.05,-0.52l0.47,-0.73l1.84,-1.09l0.55,-0.83l2.2,-1.0l1.15,-0.3l0.72,0.45l1.13,-0.01Z",name:"Burkina Faso"},BG:{path:"M491.65,168.18l-0.86,0.88l-0.91,2.17l0.48,1.34l-1.6,-0.24l-2.55,0.95l-0.28,1.51l-1.8,0.22l-2.0,-1.0l-1.92,0.79l-1.42,-0.07l-0.15,-1.63l-1.05,-0.97l0.0,-0.8l1.2,-1.57l0.01,-0.56l-1.14,-1.23l-0.05,-0.94l0.88,0.97l0.88,-0.2l1.91,0.47l3.68,0.16l1.42,-0.81l2.72,-0.66l2.55,1.24Z",name:"Bulgaria"},BA:{path:"M463.49,163.65l2.1,0.5l1.72,-0.03l1.52,0.68l-0.36,0.78l0.08,0.45l1.04,1.02l-0.25,0.98l-1.81,1.15l-0.38,1.38l-1.67,-0.87l-0.89,-1.2l-2.11,-1.83l-1.63,-2.22l0.23,-0.57l0.48,0.38l0.55,-0.06l0.43,-0.51l0.94,-0.06Z",name:"Bosnia and Herz."},BN:{path:"M707.48,273.58l0.68,-0.65l1.41,-0.91l-0.15,1.63l-0.81,-0.05l-0.61,0.58l-0.53,-0.6Z",name:"Brunei"},BO:{path:"M263.83,340.69l-3.09,-0.23l-0.38,0.23l-0.7,1.52l-1.31,-1.53l-3.28,-0.64l-2.37,2.4l-1.31,0.26l-0.88,-3.26l-1.3,-2.86l0.74,-2.37l-0.13,-0.43l-1.2,-1.01l-0.37,-1.89l-1.08,-1.55l1.45,-2.56l-0.96,-2.33l0.47,-1.06l-0.34,-0.73l0.91,-1.32l0.16,-3.84l0.5,-1.18l-1.81,-3.41l2.46,0.07l0.8,-0.85l3.4,-1.91l2.66,-0.35l-0.19,1.38l0.3,1.07l-0.05,1.97l2.72,2.27l2.88,0.49l0.89,0.86l1.79,0.58l0.98,0.7l1.71,0.05l1.17,0.61l0.6,2.7l-0.7,0.54l0.96,2.99l0.37,0.28l4.3,0.1l-0.25,1.2l0.27,1.02l1.43,0.9l0.5,1.35l-0.41,1.86l-0.65,1.08l0.12,1.35l-2.69,-1.65l-2.4,-0.03l-4.36,0.76l-1.49,2.5l-0.11,1.52l-0.75,2.37Z",name:"Bolivia"},JP:{path:"M781.12,166.87l1.81,0.68l1.62,-0.97l0.39,2.42l-3.35,0.75l-2.23,2.88l-3.63,-1.9l-0.56,0.2l-1.26,3.05l-2.16,0.03l-0.29,-2.51l1.08,-2.03l2.45,-0.16l0.37,-0.33l1.25,-5.94l2.47,2.71l2.03,1.12ZM773.56,187.34l-0.91,2.22l0.37,1.52l-1.14,1.75l-3.02,1.26l-4.58,0.27l-3.34,3.01l-1.25,-0.8l-0.09,-1.9l-0.46,-0.38l-4.35,0.62l-3.0,1.32l-2.85,0.05l-0.37,0.27l0.13,0.44l2.32,1.89l-1.54,4.34l-1.26,0.9l-0.79,-0.7l0.56,-2.27l-0.21,-0.45l-1.47,-0.75l-0.74,-1.4l2.12,-0.84l1.26,-1.7l2.45,-1.42l1.83,-1.91l4.78,-0.81l2.6,0.57l0.44,-0.21l2.39,-4.66l1.29,1.06l0.5,0.01l5.1,-4.02l1.69,-3.73l-0.38,-3.4l0.9,-1.61l2.14,-0.44l1.23,3.72l-0.07,2.18l-2.23,2.84l-0.04,3.16ZM757.78,196.26l0.19,0.56l-1.01,1.21l-1.16,-0.68l-1.28,0.65l-0.69,1.45l-1.02,-0.5l0.01,-0.93l1.14,-1.38l1.57,0.14l0.85,-0.98l1.4,0.46Z",name:"Japan"},BI:{path:"M495.45,295.49l-1.08,-2.99l1.14,-0.11l0.64,-1.19l0.76,0.09l0.65,1.83l-2.1,2.36Z",name:"Burundi"},BJ:{path:"M429.57,255.75l-0.05,0.8l0.5,1.34l-0.42,0.86l0.17,0.79l-1.81,2.12l-0.57,1.76l-0.08,5.42l-1.41,0.2l-0.48,-1.36l0.11,-5.71l-0.52,-0.7l-0.2,-1.35l-1.48,-1.48l0.21,-0.9l0.89,-0.43l0.42,-0.92l1.27,-0.36l1.22,-1.34l0.61,-0.0l1.62,1.24Z",name:"Benin"},BT:{path:"M650.32,213.86l0.84,0.71l-0.12,1.1l-3.76,-0.11l-1.57,0.4l-1.93,-0.87l1.48,-1.96l1.13,-0.57l1.63,0.57l1.33,0.08l0.99,0.65Z",name:"Bhutan"},JM:{path:"M228.38,239.28l-0.8,0.4l-2.26,-1.06l0.84,-0.23l2.14,0.3l1.17,0.56l-1.08,0.03Z",name:"Jamaica"},BW:{path:"M483.92,330.07l2.27,4.01l2.83,2.86l0.96,0.31l0.78,2.43l2.13,0.61l1.02,0.76l-3.0,1.64l-2.32,2.02l-1.54,2.69l-1.52,0.45l-0.64,1.94l-1.34,0.52l-1.85,-0.12l-1.21,-0.74l-1.35,-0.3l-1.22,0.62l-0.75,1.37l-2.31,1.9l-1.4,0.21l-0.35,-0.59l0.16,-1.75l-1.48,-2.54l-0.62,-0.43l-0.0,-7.1l2.08,-0.08l0.39,-0.4l0.07,-8.9l5.19,-0.93l0.8,0.89l0.51,0.07l1.5,-0.95l2.21,-0.49Z",name:"Botswana"},BR:{path:"M259.98,275.05l3.24,0.7l0.65,-0.53l4.55,-1.32l1.08,-1.06l-0.02,-0.63l0.55,-0.05l0.28,0.28l-0.26,0.87l0.22,0.48l0.73,0.32l0.4,0.81l-0.62,0.86l-0.4,2.13l0.82,2.56l1.69,1.43l1.43,0.2l3.17,-1.68l3.18,0.3l0.65,-0.75l-0.27,-0.92l1.9,-0.09l2.39,0.99l1.06,-0.61l0.84,0.78l1.2,-0.18l1.18,-1.06l0.84,-1.94l1.36,-2.11l0.37,-0.05l1.89,5.45l1.33,0.59l0.05,1.28l-1.77,1.94l0.02,0.56l1.02,0.87l4.07,0.36l0.08,2.16l0.66,0.29l1.74,-1.5l6.97,2.32l1.02,1.22l-0.35,1.18l0.49,0.5l2.81,-0.74l4.77,1.3l3.75,-0.08l3.57,2.0l3.29,2.86l1.93,0.72l2.12,0.12l0.71,0.62l1.21,4.51l-0.95,3.98l-4.72,5.06l-1.64,2.92l-1.72,2.05l-0.8,0.3l-0.72,2.03l0.18,4.75l-0.94,5.53l-0.81,1.13l-0.43,3.36l-2.55,3.5l-0.4,2.51l-1.86,1.04l-0.67,1.53l-2.54,0.01l-3.94,1.01l-1.83,1.2l-2.87,0.82l-3.03,2.19l-2.2,2.83l-0.36,2.0l0.4,1.58l-0.44,2.6l-0.51,1.2l-1.77,1.54l-2.75,4.78l-3.83,3.42l-1.24,2.74l-1.18,1.15l-0.36,-0.83l0.95,-1.14l0.01,-0.5l-1.52,-1.97l-4.56,-3.32l-1.03,-0.0l-2.38,-2.02l-0.81,-0.0l5.34,-5.45l3.77,-2.58l0.22,-2.46l-1.35,-1.81l-0.91,0.07l0.58,-2.33l0.01,-1.54l-1.11,-0.83l-1.75,0.3l-0.44,-3.11l-0.52,-0.95l-1.88,-0.88l-1.24,0.47l-2.17,-0.41l0.15,-3.21l-0.62,-1.34l0.66,-0.73l-0.22,-1.34l0.66,-1.13l0.44,-2.04l-0.61,-1.83l-1.4,-0.86l-0.2,-0.75l0.34,-1.39l-0.38,-0.5l-4.52,-0.1l-0.72,-2.22l0.59,-0.42l-0.03,-1.1l-0.5,-0.87l-0.32,-1.7l-1.45,-0.76l-1.63,-0.02l-1.05,-0.72l-1.6,-0.48l-1.13,-0.99l-2.69,-0.4l-2.47,-2.06l0.13,-4.35l-0.45,-0.45l-3.46,0.5l-3.44,1.94l-0.6,0.74l-2.9,-0.17l-1.47,0.42l-0.72,-0.18l0.15,-3.52l-0.63,-0.34l-1.94,1.41l-1.87,-0.06l-0.83,-1.18l-1.37,-0.26l0.21,-1.01l-1.35,-1.49l-0.88,-1.91l0.56,-0.6l-0.0,-0.81l1.29,-0.62l0.22,-0.43l-0.22,-1.19l0.61,-0.91l0.15,-0.99l2.65,-1.58l1.99,-0.47l0.42,-0.36l2.06,0.11l0.42,-0.33l1.19,-8.0l-0.41,-1.56l-1.1,-1.0l0.01,-1.33l1.91,-0.42l0.08,-0.96l-0.33,-0.43l-1.14,-0.2l-0.02,-0.83l4.47,0.05l0.82,-0.67l0.82,1.81l0.8,0.07l1.15,1.1l2.26,-0.05l0.71,-0.83l2.78,-0.96l0.48,-1.13l1.6,-0.64l0.24,-0.47l-0.48,-0.82l-1.83,-0.19l-0.36,-3.22Z",name:"Brazil"},BS:{path:"M226.4,223.87l-0.48,-1.15l-0.84,-0.75l0.36,-1.11l0.95,1.95l0.01,1.06ZM225.56,216.43l-1.87,0.29l-0.04,-0.22l0.74,-0.14l1.17,0.06Z",name:"Bahamas"},BY:{path:"M493.84,128.32l0.29,0.7l0.49,0.23l1.19,-0.38l2.09,0.72l0.19,1.26l-0.45,1.24l1.57,2.26l0.89,0.59l0.17,0.81l1.58,0.56l0.4,0.5l-0.53,0.41l-1.87,-0.11l-0.73,0.38l-0.13,0.52l1.04,2.74l-1.91,0.26l-0.89,0.99l-0.11,1.18l-2.73,-0.04l-0.53,-0.62l-0.52,-0.08l-0.75,0.46l-0.91,-0.42l-1.92,-0.07l-2.75,-0.79l-2.6,-0.28l-2.0,0.07l-1.5,0.92l-0.67,0.07l-0.08,-1.22l-0.59,-1.19l1.36,-0.88l0.01,-1.35l-0.7,-1.41l-0.07,-1.0l2.16,-0.02l2.72,-1.3l0.75,-2.04l1.91,-1.04l0.2,-0.41l-0.19,-1.25l3.8,-1.78l2.3,0.77Z",name:"Belarus"},BZ:{path:"M198.03,244.38l0.1,-4.49l0.69,-0.06l0.74,-1.3l0.34,0.28l-0.4,1.3l0.17,0.58l-0.34,2.25l-1.3,1.42Z",name:"Belize"},RU:{path:"M491.55,115.25l2.55,-1.85l-0.01,-0.65l-2.2,-1.5l7.32,-6.76l1.03,-2.11l-0.13,-0.49l-3.46,-2.52l0.86,-2.7l-2.11,-2.81l1.56,-3.67l-2.77,-4.52l2.15,-2.99l-0.08,-0.55l-3.65,-2.73l0.3,-2.54l1.81,-0.37l4.26,-1.77l2.42,-1.45l4.06,2.61l6.79,1.04l9.34,4.85l1.78,1.88l0.14,2.46l-2.55,2.02l-3.9,1.06l-11.07,-3.14l-2.06,0.53l-0.13,0.7l3.94,2.94l0.31,5.86l0.26,0.36l5.14,2.24l0.58,-0.29l0.32,-1.94l-1.35,-1.78l1.13,-1.09l6.13,2.42l2.11,-0.98l0.18,-0.56l-1.51,-2.67l5.41,-3.76l2.07,0.22l2.26,1.41l0.57,-0.16l1.46,-2.87l-0.05,-0.44l-1.92,-2.32l1.12,-2.32l-1.32,-2.27l5.87,1.16l1.04,1.75l-2.59,0.43l-0.33,0.4l0.02,2.36l2.46,1.83l3.87,-0.91l0.86,-2.8l13.69,-5.65l0.99,0.11l-1.92,2.06l0.23,0.67l3.11,0.45l2.0,-1.48l4.56,-0.12l3.64,-1.73l2.65,2.44l0.56,-0.01l2.85,-2.88l-0.01,-0.57l-2.35,-2.29l0.9,-1.01l7.14,1.3l3.41,1.36l9.05,4.97l0.51,-0.11l1.67,-2.27l-0.05,-0.53l-2.43,-2.21l-0.06,-0.78l-0.34,-0.36l-2.52,-0.36l0.64,-1.93l-1.32,-3.46l-0.06,-1.21l4.48,-4.06l1.69,-4.29l1.6,-0.81l6.23,1.18l0.44,2.21l-2.29,3.64l0.06,0.5l1.47,1.39l0.76,3.0l-0.56,6.03l2.69,2.82l-0.96,2.57l-4.86,5.95l0.23,0.64l2.86,0.61l0.42,-0.17l0.93,-1.4l2.64,-1.03l0.87,-2.24l2.09,-1.96l0.07,-0.5l-1.36,-2.28l1.09,-2.69l-0.32,-0.55l-2.47,-0.33l-0.5,-2.06l1.94,-4.38l-0.06,-0.42l-2.96,-3.4l4.12,-2.88l0.16,-0.4l-0.51,-2.93l0.54,-0.05l1.13,2.25l-0.96,4.35l0.27,0.47l2.68,0.84l0.5,-0.51l-1.02,-2.99l3.79,-1.66l5.01,-0.24l4.53,2.61l0.48,-0.06l0.07,-0.48l-2.18,-3.82l-0.23,-4.67l3.98,-0.9l5.97,0.21l5.49,-0.64l0.27,-0.65l-1.83,-2.31l2.56,-2.9l2.87,-0.17l4.8,-2.47l6.54,-0.67l1.03,-1.42l6.25,-0.45l2.32,1.11l5.53,-2.7l4.5,0.08l0.39,-0.28l0.66,-2.15l2.26,-2.12l5.69,-2.11l3.21,1.29l-2.46,0.94l-0.25,0.42l0.34,0.35l5.41,0.77l0.61,2.33l0.58,0.25l2.2,-1.22l7.13,0.07l5.51,2.47l1.79,1.72l-0.53,2.24l-9.16,4.15l-1.97,1.52l0.16,0.71l6.77,1.91l2.16,-0.78l1.13,2.74l0.67,0.11l1.01,-1.15l3.81,-0.73l7.7,0.77l0.54,1.99l0.36,0.29l10.47,0.71l0.43,-0.38l0.13,-3.23l4.87,0.78l3.95,-0.02l3.83,2.4l1.03,2.71l-1.35,1.79l0.02,0.5l3.15,3.64l4.07,1.96l0.53,-0.18l2.23,-4.47l3.95,1.93l4.16,-1.21l4.73,1.39l2.05,-1.26l3.94,0.62l0.43,-0.55l-1.68,-4.02l2.89,-1.8l22.31,3.03l2.16,2.75l6.55,3.51l10.29,-0.81l4.82,0.73l1.85,1.66l-0.29,3.08l0.25,0.41l3.08,1.26l3.56,-0.88l4.35,-0.11l4.8,0.87l4.57,-0.47l4.23,3.79l0.43,0.07l3.1,-1.4l0.16,-0.6l-1.88,-2.62l0.85,-1.52l7.71,1.21l5.22,-0.26l7.09,2.09l9.59,5.22l6.35,4.11l-0.2,2.38l1.88,1.41l0.6,-0.42l-0.48,-2.53l6.15,0.57l4.4,3.51l-1.97,1.43l-4.0,0.41l-0.36,0.39l-0.06,3.79l-0.74,0.62l-2.07,-0.11l-1.91,-1.39l-3.14,-1.11l-0.78,-1.85l-2.72,-0.68l-2.63,0.49l-1.04,-1.1l0.46,-1.31l-0.5,-0.51l-3.0,0.98l-0.22,0.58l0.99,1.7l-1.21,1.48l-3.04,1.68l-3.12,-0.28l-0.4,0.23l0.09,0.46l2.2,2.09l1.46,3.2l1.15,1.1l0.24,1.33l-0.42,0.67l-4.63,-0.77l-6.96,2.9l-2.19,0.44l-7.6,5.06l-0.84,1.45l-3.61,-2.37l-6.24,2.82l-0.94,-1.15l-0.53,-0.08l-2.28,1.52l-3.2,-0.49l-0.44,0.27l-0.78,2.37l-3.05,3.78l0.09,1.47l0.29,0.36l2.54,0.72l-0.29,4.53l-1.97,0.11l-0.35,0.26l-1.07,2.94l0.8,1.45l-3.91,1.58l-1.05,3.95l-3.48,0.77l-0.3,0.3l-0.72,3.29l-3.09,2.65l-0.7,-1.74l-2.44,-12.44l1.16,-4.71l2.04,-2.06l0.22,-1.64l3.8,-0.86l4.46,-4.61l4.28,-3.81l4.48,-3.01l2.17,-5.63l-0.42,-0.54l-3.04,0.33l-1.77,3.31l-5.86,3.86l-1.86,-4.25l-0.45,-0.23l-6.46,1.3l-6.47,6.44l-0.01,0.55l1.58,1.74l-8.24,1.17l0.15,-2.2l-0.34,-0.42l-3.89,-0.56l-3.25,1.81l-7.62,-0.62l-8.45,1.19l-17.71,15.41l0.22,0.7l3.74,0.41l1.36,2.17l2.43,0.76l1.88,-1.68l2.4,0.2l3.4,3.54l0.08,2.6l-1.95,3.42l-0.21,3.9l-1.1,5.06l-3.71,4.54l-0.87,2.21l-8.29,8.89l-3.19,1.7l-1.32,0.03l-1.45,-1.36l-0.49,-0.04l-2.27,1.5l0.41,-3.65l-0.59,-2.47l1.75,-0.89l2.91,0.53l0.42,-0.2l1.68,-3.03l0.87,-3.46l0.97,-1.18l1.32,-2.88l-0.45,-0.56l-4.14,0.95l-2.19,1.25l-3.41,-0.0l-1.06,-2.93l-2.97,-2.3l-4.28,-1.06l-1.75,-5.07l-2.66,-5.01l-2.29,-1.29l-3.75,-1.01l-3.44,0.08l-3.18,0.62l-2.24,1.77l0.05,0.66l1.18,0.69l0.02,1.43l-1.33,1.05l-2.26,3.51l-0.04,1.43l-3.16,1.84l-2.82,-1.16l-3.01,0.23l-1.35,-1.07l-1.5,-0.35l-3.9,2.31l-3.22,0.52l-2.27,0.79l-3.05,-0.51l-2.21,0.03l-1.48,-1.6l-2.6,-1.63l-2.63,-0.43l-5.46,1.01l-3.23,-1.25l-0.72,-2.57l-5.2,-1.24l-2.75,-1.36l-0.5,0.12l-2.59,3.45l0.84,2.1l-2.06,1.93l-3.41,-0.77l-2.42,-0.12l-1.83,-1.54l-2.53,-0.05l-2.42,-0.98l-3.86,1.57l-4.72,2.78l-3.3,0.75l-1.55,-1.92l-3.0,0.41l-1.11,-1.33l-1.62,-0.59l-1.31,-1.94l-1.38,-0.6l-3.7,0.79l-3.31,-1.83l-0.51,0.11l-0.99,1.29l-5.29,-8.05l-2.96,-2.48l0.65,-0.77l0.01,-0.51l-0.5,-0.11l-6.2,3.21l-1.84,0.15l0.15,-1.39l-0.26,-0.42l-3.22,-1.17l-2.46,0.7l-0.69,-3.16l-0.32,-0.31l-4.5,-0.75l-2.47,1.47l-6.19,1.27l-1.29,0.86l-9.51,1.3l-1.15,1.17l-0.03,0.53l1.47,1.9l-1.89,0.69l-0.22,0.56l0.31,0.6l-2.11,1.44l0.03,0.68l3.75,2.12l-0.39,0.98l-3.23,-0.13l-0.86,0.86l-3.09,-1.59l-3.97,0.07l-2.66,1.35l-8.32,-3.56l-4.07,0.06l-5.39,3.68l-0.39,2.0l-2.03,-1.5l-0.59,0.13l-2.0,3.59l0.57,0.93l-1.28,2.16l0.06,0.48l2.13,2.17l1.95,0.04l1.37,1.82l-0.23,1.46l0.25,0.43l0.83,0.33l-0.8,1.31l-2.49,0.62l-2.49,3.2l0.0,0.49l2.17,2.78l-0.15,2.18l2.5,3.24l-1.58,1.59l-0.7,-0.13l-1.63,-1.72l-2.29,-0.84l-0.94,-1.31l-2.34,-0.63l-1.48,0.4l-0.43,-0.47l-3.51,-1.48l-5.76,-1.01l-0.45,0.19l-2.89,-2.34l-2.9,-1.2l-1.53,-1.29l1.29,-0.43l2.08,-2.61l-0.05,-0.55l-0.89,-0.79l3.05,-1.06l0.27,-0.42l-0.07,-0.69l-0.49,-0.35l-1.73,0.39l0.04,-0.68l1.04,-0.72l2.66,-0.48l0.4,-1.32l-0.5,-1.6l0.92,-1.54l0.03,-1.17l-0.29,-0.37l-3.69,-1.06l-1.41,0.02l-1.42,-1.41l-2.19,0.38l-2.77,-1.01l-0.03,-0.59l-0.89,-1.43l-2.0,-0.32l-0.11,-0.54l0.49,-0.53l0.01,-0.53l-1.6,-1.9l-3.58,0.02l-0.88,0.73l-0.46,-0.07l-1.0,-2.79l2.22,-0.02l0.97,-0.74l0.07,-0.57l-0.9,-1.04l-1.35,-0.48l-0.11,-0.7l-0.95,-0.58l-1.38,-1.99l0.46,-0.98l-0.51,-1.96l-2.45,-0.84l-1.21,0.3l-0.46,-0.76l-2.46,-0.83l-0.72,-1.87l-0.21,-1.69l-0.99,-0.85l0.85,-1.17l-0.7,-3.21l1.66,-1.97l-0.16,-0.79ZM749.2,170.72l-0.6,0.4l-0.13,0.16l-0.01,-0.51l0.74,-0.05ZM874.85,67.94l-5.63,0.48l-0.26,-0.84l3.15,-1.89l1.94,0.01l3.19,1.16l-2.39,1.09ZM797.39,48.49l-2.0,1.36l-3.8,-0.42l-4.25,-1.8l0.35,-0.97l9.69,1.83ZM783.67,46.12l-1.63,3.09l-8.98,-0.13l-4.09,1.14l-4.54,-2.97l1.16,-3.01l3.05,-0.89l6.5,0.22l8.54,2.56ZM778.2,134.98l-0.56,-0.9l0.27,-0.12l0.29,1.01ZM778.34,135.48l0.94,3.53l-0.05,3.38l1.05,3.39l2.18,5.0l-2.89,-0.83l-0.49,0.26l-1.54,4.65l2.42,3.5l-0.04,1.13l-1.24,-1.24l-0.61,0.06l-1.09,1.61l-0.28,-1.61l0.27,-3.1l-0.28,-3.4l0.58,-2.47l0.11,-4.39l-1.46,-3.36l0.21,-4.32l2.15,-1.46l0.07,-0.34ZM771.95,56.61l1.76,-1.42l2.89,-0.42l3.28,1.71l0.14,0.6l-3.27,0.03l-4.81,-0.5ZM683.76,31.09l-13.01,1.93l4.03,-6.35l1.82,-0.56l1.73,0.34l5.99,2.98l-0.56,1.66ZM670.85,27.93l-5.08,0.64l-6.86,-1.57l-3.99,-2.05l-2.1,-4.16l-2.6,-0.87l5.72,-3.5l5.2,-1.28l4.69,2.85l5.59,5.4l-0.56,4.53ZM564.15,68.94l-0.64,0.17l-7.85,-0.57l-0.86,-2.04l-4.28,-1.17l-0.28,-1.94l2.27,-0.89l0.25,-0.39l-0.08,-2.38l4.81,-3.97l-0.15,-0.7l-1.47,-0.38l5.3,-3.81l0.15,-0.44l-0.58,-1.94l5.28,-2.51l8.21,-3.27l8.28,-0.96l4.35,-1.94l4.6,-0.64l1.36,1.61l-1.34,1.28l-16.43,4.94l-7.97,4.88l-7.74,9.63l0.66,4.14l4.16,3.27ZM548.81,18.48l-5.5,1.18l-0.58,1.02l-2.59,0.84l-2.13,-1.07l1.12,-1.42l-0.3,-0.65l-2.33,-0.07l1.68,-0.36l3.47,-0.06l0.42,1.29l0.66,0.16l1.38,-1.34l2.15,-0.88l2.94,1.01l-0.39,0.36ZM477.37,133.15l-4.08,0.05l-2.56,-0.32l0.33,-0.87l3.17,-1.03l3.24,0.96l-0.09,1.23Z",name:"Russia"},RW:{path:"M497.0,288.25l0.71,1.01l-0.11,1.09l-1.63,0.03l-1.04,1.39l-0.83,-0.11l0.51,-1.2l0.08,-1.34l0.42,-0.41l0.7,0.14l1.19,-0.61Z",name:"Rwanda"},RS:{path:"M469.4,163.99l0.42,-0.5l-0.01,-0.52l-1.15,-1.63l1.43,-0.62l1.33,0.12l1.17,1.06l0.46,1.13l1.34,0.64l0.35,1.35l1.46,0.9l0.76,-0.29l0.2,0.69l-0.48,0.78l0.22,1.12l1.05,1.22l-0.77,0.8l-0.37,1.52l-1.21,0.08l0.24,-0.64l-0.39,-0.54l-2.08,-1.64l-0.9,0.05l-0.48,0.94l-2.12,-1.37l0.53,-1.6l-1.11,-1.37l0.51,-1.1l-0.41,-0.57Z",name:"Serbia"},LT:{path:"M486.93,129.3l0.17,1.12l-1.81,0.98l-0.72,2.02l-2.47,1.18l-2.1,-0.02l-0.73,-1.05l-1.06,-0.3l-0.09,-1.87l-3.56,-1.13l-0.43,-2.36l2.48,-0.94l4.12,0.22l2.25,-0.31l0.52,0.69l1.24,0.21l2.19,1.56Z",name:"Lithuania"},LU:{path:"M436.08,149.45l-0.48,-0.07l0.3,-1.28l0.27,0.4l-0.09,0.96Z",name:"Luxembourg"},LR:{path:"M399.36,265.97l0.18,1.54l-0.48,0.99l0.08,0.47l2.47,1.8l-0.33,2.8l-2.65,-1.13l-5.78,-4.61l0.58,-1.32l2.1,-2.33l0.86,-0.22l0.77,1.14l-0.14,0.85l0.59,0.87l1.0,0.14l0.76,-0.99Z",name:"Liberia"},RO:{path:"M487.53,154.23l0.6,0.24l2.87,3.98l-0.17,2.69l0.45,1.42l1.32,0.81l1.35,-0.42l0.76,0.36l0.02,0.31l-0.83,0.45l-0.59,-0.22l-0.54,0.3l-0.62,3.3l-1.0,-0.22l-2.07,-1.13l-2.95,0.71l-1.25,0.76l-3.51,-0.15l-1.89,-0.47l-0.87,0.16l-0.82,-1.3l0.29,-0.26l-0.06,-0.64l-1.09,-0.34l-0.56,0.5l-1.05,-0.64l-0.39,-1.39l-1.36,-0.65l-0.35,-1.0l-0.83,-0.75l1.54,-0.54l2.66,-4.21l2.4,-1.24l2.96,0.34l1.48,0.73l0.79,-0.45l1.78,-0.3l0.75,-0.74l0.79,0.0Z",name:"Romania"},GW:{path:"M386.23,253.6l-0.29,0.84l0.15,0.6l-2.21,0.59l-0.86,0.96l-1.04,-0.83l-1.09,-0.23l-0.54,-1.06l-0.66,-0.49l2.41,-0.48l4.13,0.1Z",name:"Guinea-Bissau"},GT:{path:"M195.08,249.77l-2.48,-0.37l-1.03,-0.45l-1.14,-0.89l0.3,-0.99l-0.24,-0.68l0.96,-1.66l2.98,-0.01l0.4,-0.37l-0.19,-1.28l-1.67,-1.4l0.51,-0.4l0.0,-1.05l3.85,0.02l-0.21,4.53l0.4,0.43l1.46,0.38l-1.48,0.98l-0.35,0.7l0.12,0.57l-2.2,1.96Z",name:"Guatemala"},GR:{path:"M487.07,174.59l-0.59,1.43l-0.37,0.21l-2.84,-0.35l-3.03,0.77l-0.18,0.68l1.28,1.23l-0.61,0.23l-1.14,0.0l-1.2,-1.39l-0.63,0.03l-0.53,1.01l0.56,1.76l1.03,1.19l-0.56,0.38l-0.05,0.62l2.52,2.12l0.02,0.87l-1.78,-0.59l-0.48,0.56l0.5,1.0l-1.07,0.2l-0.3,0.53l0.75,2.01l-0.98,0.02l-1.84,-1.12l-1.37,-4.2l-2.21,-2.95l-0.11,-0.56l1.04,-1.28l0.2,-0.95l0.85,-0.66l0.03,-0.46l1.32,-0.21l1.01,-0.64l1.22,0.05l0.65,-0.56l2.26,-0.0l1.82,-0.75l1.85,1.0l2.28,-0.28l0.35,-0.39l0.01,-0.77l0.34,0.22ZM480.49,192.16l0.58,0.4l-0.68,-0.12l0.11,-0.28ZM482.52,192.82l2.51,0.06l0.24,0.32l-1.99,0.13l-0.77,-0.51Z",name:"Greece"},GQ:{path:"M448.79,279.62l0.02,2.22l-4.09,0.0l0.69,-2.27l3.38,0.05Z",name:"Eq. Guinea"},GY:{path:"M277.42,270.07l-0.32,1.83l-1.32,0.57l-0.23,0.46l-0.28,2.0l1.11,1.82l0.83,0.19l0.32,1.25l1.13,1.62l-1.21,-0.19l-1.08,0.71l-1.77,0.5l-0.44,0.46l-0.86,-0.09l-1.32,-1.01l-0.77,-2.27l0.36,-1.9l0.68,-1.23l-0.57,-1.17l-0.74,-0.43l0.12,-1.16l-0.9,-0.69l-1.1,0.09l-1.31,-1.48l0.53,-0.72l-0.04,-0.84l1.99,-0.86l0.05,-0.59l-0.71,-0.78l0.14,-0.57l1.66,-1.24l1.36,0.77l1.41,1.49l0.06,1.15l0.37,0.38l0.8,0.05l2.06,1.86Z",name:"Guyana"},GE:{path:"M521.71,168.93l5.29,0.89l4.07,2.01l1.41,-0.44l2.07,0.56l0.68,1.1l1.07,0.55l-0.12,0.59l0.98,1.29l-1.01,-0.13l-1.81,-0.83l-0.94,0.47l-3.23,0.43l-2.29,-1.39l-2.33,0.05l0.21,-0.97l-0.76,-2.26l-1.45,-1.12l-1.43,-0.39l-0.41,-0.42Z",name:"Georgia"},GB:{path:"M412.61,118.72l-2.19,3.22l-0.0,0.45l5.13,-0.3l-0.53,2.37l-2.2,3.12l0.29,0.63l2.37,0.21l2.33,4.3l1.76,0.69l2.2,5.12l2.94,0.77l-0.23,1.62l-1.15,0.88l-0.1,0.52l0.82,1.42l-1.86,1.43l-3.3,-0.02l-4.12,0.87l-1.04,-0.58l-0.47,0.06l-1.51,1.41l-2.12,-0.34l-1.86,1.18l-0.6,-0.29l3.19,-3.0l2.16,-0.69l0.28,-0.41l-0.34,-0.36l-3.73,-0.53l-0.4,-0.76l2.2,-0.87l0.17,-0.61l-1.26,-1.67l0.36,-1.7l3.38,0.28l0.43,-0.33l0.37,-1.99l-1.79,-2.49l-3.11,-0.72l-0.38,-0.59l0.79,-1.35l-0.04,-0.46l-0.82,-0.97l-0.61,0.01l-0.68,0.84l-0.1,-2.34l-1.23,-1.88l0.85,-3.47l1.77,-2.68l1.85,0.26l2.17,-0.22ZM406.26,132.86l-1.01,1.77l-1.57,-0.59l-1.16,0.01l0.37,-1.54l-0.39,-1.39l1.45,-0.1l2.3,1.84Z",name:"United Kingdom"},GA:{path:"M453.24,279.52l-0.08,0.98l0.7,1.29l2.36,0.24l-0.98,2.63l1.18,1.79l0.25,1.78l-0.29,1.52l-0.6,0.93l-1.84,-0.09l-1.23,-1.11l-0.66,0.23l-0.15,0.84l-1.42,0.26l-1.02,0.7l-0.11,0.52l0.77,1.35l-1.34,0.97l-3.94,-4.3l-1.44,-2.45l0.06,-0.6l0.54,-0.81l1.05,-3.46l4.17,-0.07l0.4,-0.4l-0.02,-2.66l2.39,0.21l1.25,-0.27Z",name:"Gabon"},GN:{path:"M391.8,254.11l0.47,0.8l1.11,-0.32l0.98,0.7l1.07,0.2l2.26,-1.22l0.64,0.44l1.13,1.56l-0.48,1.4l0.8,0.3l-0.08,0.48l0.46,0.68l-0.35,1.36l1.05,2.61l-1.0,0.69l0.03,1.41l-0.72,-0.06l-1.08,1.0l-0.24,-0.27l0.07,-1.11l-1.05,-1.54l-1.79,0.21l-0.35,-2.01l-1.6,-2.18l-2.0,-0.0l-1.31,0.54l-1.95,2.18l-1.86,-2.19l-1.2,-0.78l-0.3,-1.11l-0.8,-0.85l0.65,-0.72l0.81,-0.03l1.64,-0.8l0.23,-1.87l2.67,0.64l0.89,-0.3l1.21,0.15Z",name:"Guinea"},GM:{path:"M379.31,251.39l0.1,-0.35l2.43,-0.07l0.74,-0.61l0.51,-0.03l0.77,0.49l-1.03,-0.3l-1.87,0.9l-1.65,-0.04ZM384.03,250.91l0.91,0.05l0.75,-0.24l-0.59,0.31l-1.08,-0.13Z",name:"Gambia"},GL:{path:"M353.02,1.2l14.69,4.67l-3.68,1.89l-22.97,0.86l-0.36,0.27l0.12,0.43l1.55,1.18l8.79,-0.66l7.48,2.07l4.86,-1.77l1.66,1.73l-2.53,3.19l-0.01,0.48l0.46,0.15l6.35,-2.2l12.06,-2.31l7.24,1.13l1.09,1.99l-9.79,4.01l-1.44,1.32l-7.87,0.98l-0.35,0.41l0.38,0.38l5.07,0.24l-2.53,3.58l-2.07,3.81l0.08,6.05l2.57,3.11l-3.22,0.2l-4.12,1.66l-0.05,0.72l4.45,2.65l0.51,3.75l-2.3,0.4l-0.25,0.64l2.79,3.69l-4.82,0.31l-0.36,0.29l0.16,0.44l2.62,1.8l-0.59,1.22l-3.3,0.7l-3.45,0.01l-0.29,0.68l3.03,3.12l0.02,1.34l-4.4,-1.73l-1.72,1.35l0.15,0.66l3.31,1.15l3.13,2.71l0.81,3.16l-3.85,0.75l-4.89,-4.26l-0.47,-0.03l-0.17,0.44l0.79,2.86l-2.71,2.21l-0.13,0.44l0.37,0.27l8.73,0.34l-12.32,6.64l-7.24,1.48l-2.94,0.08l-2.69,1.75l-3.43,4.41l-5.24,2.84l-1.73,0.18l-7.12,2.1l-2.15,2.52l-0.13,2.99l-1.19,2.45l-4.01,3.09l-0.14,0.44l0.97,2.9l-2.28,6.48l-3.1,0.2l-3.83,-3.07l-4.86,-0.02l-2.25,-1.93l-1.7,-3.79l-4.3,-4.84l-1.21,-2.49l-0.44,-3.8l-3.32,-3.63l0.84,-2.86l-1.56,-1.7l2.28,-4.6l3.83,-1.74l1.03,-1.96l0.52,-3.47l-0.59,-0.41l-4.17,2.21l-2.07,0.58l-2.72,-1.28l-0.15,-2.71l0.85,-2.09l2.01,-0.06l5.06,1.2l0.46,-0.23l-0.14,-0.49l-6.54,-4.47l-2.67,0.55l-1.58,-0.86l2.56,-4.01l-0.03,-0.48l-1.5,-1.74l-4.98,-8.5l-3.13,-1.96l0.03,-1.88l-0.24,-0.37l-6.85,-3.02l-5.36,-0.38l-12.7,0.58l-2.78,-1.57l-3.66,-2.77l5.73,-1.45l5.0,-0.28l0.38,-0.38l-0.35,-0.41l-10.67,-1.38l-5.3,-2.06l0.25,-1.54l18.41,-5.26l1.22,-2.27l-0.25,-0.55l-6.14,-1.86l1.68,-1.77l8.55,-4.03l3.59,-0.63l0.3,-0.54l-0.88,-2.27l5.47,-1.47l7.65,-0.95l7.55,-0.05l3.04,1.85l6.48,-3.27l5.81,2.22l3.56,0.5l5.16,1.94l0.5,-0.21l-0.17,-0.52l-5.71,-3.13l0.28,-2.13l8.12,-3.6l8.7,0.28l3.35,-2.34l8.71,-0.6l19.93,0.8Z",name:"Greenland"},KW:{path:"M540.81,207.91l0.37,0.86l-0.17,0.76l0.6,1.53l-0.95,0.04l-0.82,-1.28l-1.57,-0.18l1.31,-1.88l1.22,0.17Z",name:"Kuwait"},GH:{path:"M420.53,257.51l-0.01,0.72l0.96,1.2l0.24,3.73l0.59,0.95l-0.51,2.1l0.19,1.41l1.02,2.21l-6.97,2.84l-1.8,-0.57l0.04,-0.89l-1.02,-2.04l0.61,-2.65l1.07,-2.32l-0.96,-6.47l5.01,0.07l0.94,-0.39l0.61,0.11Z",name:"Ghana"},OM:{path:"M568.09,230.93l-0.91,1.67l-1.22,0.04l-0.6,0.76l-0.41,1.51l0.27,1.58l-1.16,0.05l-1.56,0.97l-0.76,1.74l-1.62,0.05l-0.98,0.65l-0.17,1.15l-0.89,0.52l-1.49,-0.18l-2.4,0.94l-2.47,-5.4l7.35,-2.71l1.67,-5.23l-1.12,-2.09l0.05,-0.83l0.67,-1.0l0.07,-1.05l0.9,-0.42l-0.05,-2.07l0.7,-0.01l1.0,1.62l1.51,1.08l3.3,0.84l1.73,2.29l0.81,0.37l-1.23,2.35l-0.99,0.79Z",name:"Oman"},_1:{path:"M531.15,258.94l1.51,0.12l5.13,-0.95l5.3,-1.48l-0.01,4.4l-2.67,3.39l-1.85,0.01l-8.04,-2.94l-2.55,-3.17l1.12,-1.71l2.04,2.34Z",name:"Somaliland"},_0:{path:"M472.77,172.64l-1.08,-1.29l0.96,-0.77l0.29,-0.83l1.98,1.64l-0.36,0.67l-1.79,0.58Z",name:"Kosovo"},JO:{path:"M518.64,201.38l-5.14,1.56l-0.19,0.65l2.16,2.39l-0.89,1.14l-1.71,0.34l-1.71,1.8l-2.34,-0.37l1.21,-4.32l0.56,-4.07l2.8,0.94l4.46,-2.71l0.79,2.66Z",name:"Jordan"},HR:{path:"M455.59,162.84l1.09,0.07l-0.82,0.94l-0.27,-1.01ZM456.96,162.92l0.62,-0.41l1.73,0.45l0.42,-0.4l-0.01,-0.59l0.86,-0.52l0.2,-1.05l1.63,-0.68l2.57,1.68l2.07,0.6l0.87,-0.31l1.05,1.57l-0.52,0.63l-1.05,-0.56l-1.68,0.04l-2.1,-0.5l-1.29,0.06l-0.57,0.49l-0.59,-0.47l-0.62,0.16l-0.46,1.7l1.79,2.42l2.79,2.75l-1.18,-0.87l-2.21,-0.87l-1.67,-1.78l0.13,-0.63l-1.05,-1.19l-0.32,-1.27l-1.42,-0.43Z",name:"Croatia"},HT:{path:"M237.05,238.38l-1.16,0.43l-0.91,-0.55l0.05,-0.2l2.02,0.31ZM237.53,238.43l1.06,0.12l-0.05,0.01l-1.01,-0.12ZM239.25,238.45l0.79,-0.51l0.06,-0.62l-1.02,-1.0l0.02,-0.82l-0.3,-0.4l-0.93,-0.32l3.16,0.45l0.02,1.84l-0.48,0.34l-0.08,0.58l0.54,0.72l-1.78,-0.26Z",name:"Haiti"},HU:{path:"M462.08,157.89l0.65,-1.59l-0.09,-0.44l0.64,-0.0l0.39,-0.34l0.1,-0.69l1.75,0.87l2.32,-0.37l0.43,-0.66l3.49,-0.78l0.69,-0.78l0.57,-0.14l2.57,0.93l0.67,-0.23l1.03,0.65l0.08,0.37l-1.42,0.71l-2.59,4.14l-1.8,0.53l-1.68,-0.1l-2.74,1.23l-1.85,-0.54l-2.54,-1.66l-0.66,-1.1Z",name:"Hungary"},HN:{path:"M199.6,249.52l-1.7,-1.21l0.06,-0.94l3.04,-2.14l2.37,0.28l1.27,-0.09l1.1,-0.52l1.3,0.28l1.14,-0.25l1.38,0.37l2.23,1.37l-2.36,0.93l-1.23,-0.39l-0.88,1.3l-1.28,0.99l-0.98,-0.22l-0.42,0.52l-0.96,0.05l-0.36,0.41l0.04,0.88l-0.52,0.6l-0.3,0.04l-0.3,-0.55l-0.66,-0.31l0.11,-0.67l-0.48,-0.65l-0.87,-0.26l-0.73,0.2Z",name:"Honduras"},PR:{path:"M256.17,238.73l-0.26,0.27l-2.83,0.05l-0.07,-0.55l1.95,-0.1l1.22,0.33Z",name:"Puerto Rico"},PS:{path:"M509.21,203.07l0.1,-0.06l-0.02,0.03l-0.09,0.03ZM509.36,202.91l-0.02,-0.63l-0.33,-0.16l0.31,-1.09l0.24,0.1l-0.2,1.78Z",name:"Palestine"},PT:{path:"M401.84,187.38l-0.64,0.47l-1.13,-0.35l-0.91,0.17l0.28,-1.78l-0.24,-1.78l-1.25,-0.56l-0.45,-0.84l0.17,-1.66l1.01,-1.18l0.69,-2.92l-0.04,-1.39l-0.59,-1.9l1.3,-0.85l0.84,1.35l3.1,-0.3l0.46,0.99l-1.05,0.94l-0.03,2.16l-0.41,0.57l-0.08,1.1l-0.79,0.18l-0.26,0.59l0.91,1.6l-0.63,1.75l0.76,1.09l-1.1,1.52l0.07,1.05Z",name:"Portugal"},PY:{path:"M274.9,336.12l0.74,1.52l-0.16,3.45l0.32,0.41l2.64,0.5l1.11,-0.47l1.4,0.59l0.36,0.6l0.53,3.42l1.27,0.4l0.98,-0.38l0.51,0.27l-0.0,1.18l-1.21,5.32l-2.09,1.9l-1.8,0.4l-4.71,-0.98l2.2,-3.63l-0.32,-1.5l-2.78,-1.28l-3.03,-1.94l-2.07,-0.44l-4.34,-4.06l0.91,-2.9l0.08,-1.42l1.07,-2.04l4.13,-0.72l2.18,0.03l2.05,1.17l0.03,0.59Z",name:"Paraguay"},PA:{path:"M213.8,263.68l0.26,-1.52l-0.36,-0.26l-0.01,-0.49l0.44,-0.1l0.93,1.4l1.26,0.03l0.77,0.49l1.38,-0.23l2.51,-1.11l0.86,-0.72l3.45,0.85l1.4,1.18l0.41,1.74l-0.21,0.34l-0.53,-0.12l-0.47,0.29l-0.16,0.6l-0.68,-1.28l0.45,-0.49l-0.19,-0.66l-0.47,-0.13l-0.54,-0.84l-1.5,-0.75l-1.1,0.16l-0.75,0.99l-1.62,0.84l-0.18,0.96l0.85,0.97l-0.58,0.45l-0.69,0.08l-0.34,-1.18l-1.27,0.03l-0.71,-1.05l-2.59,-0.46Z",name:"Panama"},PG:{path:"M808.58,298.86l2.54,2.56l-0.13,0.26l-0.33,0.12l-0.87,-0.78l-1.22,-2.16ZM801.41,293.04l0.5,0.29l0.26,0.27l-0.49,-0.35l-0.27,-0.21ZM803.17,294.58l0.59,0.5l0.08,1.06l-0.29,-0.91l-0.38,-0.65ZM796.68,298.41l0.52,0.75l1.43,-0.19l2.27,-1.81l-0.01,-1.43l1.12,0.16l-0.04,1.1l-0.7,1.28l-1.12,0.18l-0.62,0.79l-2.46,1.11l-1.17,-0.0l-3.08,-1.25l3.41,0.0l0.45,-0.68ZM789.15,303.55l2.31,1.8l1.59,2.61l1.34,0.13l-0.06,0.66l0.31,0.43l1.06,0.24l0.06,0.65l2.25,1.05l-1.22,0.13l-0.72,-0.63l-4.56,-0.65l-3.22,-2.87l-1.49,-2.34l-3.27,-1.1l-2.38,0.72l-1.59,0.86l-0.2,0.42l0.27,1.55l-1.55,0.68l-1.36,-0.4l-2.21,-0.09l-0.08,-15.41l8.39,2.93l2.95,2.4l0.6,1.64l4.02,1.49l0.31,0.68l-1.76,0.21l-0.33,0.52l0.55,1.68Z",name:"Papua New Guinea"},PE:{path:"M244.96,295.21l-1.26,-0.07l-0.57,0.42l-1.93,0.45l-2.98,1.75l-0.36,1.36l-0.58,0.8l0.12,1.37l-1.24,0.59l-0.22,1.22l-0.62,0.84l1.04,2.27l1.28,1.44l-0.41,0.84l0.32,0.57l1.48,0.13l1.16,1.37l2.21,0.07l1.63,-1.08l-0.13,3.02l0.3,0.4l1.14,0.29l1.31,-0.34l1.9,3.59l-0.48,0.85l-0.17,3.85l-0.94,1.59l0.35,0.75l-0.47,1.07l0.98,1.97l-2.1,3.82l-0.98,0.5l-2.17,-1.28l-0.39,-1.16l-4.95,-2.58l-4.46,-2.79l-1.84,-1.51l-0.91,-1.84l0.3,-0.96l-2.11,-3.33l-4.82,-9.68l-1.04,-1.2l-0.87,-1.94l-3.4,-2.48l0.58,-1.18l-1.13,-2.23l0.66,-1.49l1.45,-1.15l-0.6,0.98l0.07,0.92l0.47,0.36l1.74,0.03l0.97,1.17l0.54,0.07l1.42,-1.03l0.6,-1.84l1.42,-2.02l3.04,-1.04l2.73,-2.62l0.86,-1.74l-0.1,-1.87l1.44,1.02l0.9,1.25l1.06,0.59l1.7,2.73l1.86,0.31l1.45,-0.61l0.96,0.39l1.36,-0.19l1.45,0.89l-1.4,2.21l0.31,0.61l0.59,0.05l0.47,0.5Z",name:"Peru"},PK:{path:"M615.09,192.34l-1.83,1.81l-2.6,0.39l-3.73,-0.68l-1.58,1.33l-0.09,0.42l1.77,4.39l1.7,1.23l-1.69,1.27l-0.12,2.14l-2.33,2.64l-1.6,2.8l-2.46,2.67l-3.03,-0.07l-2.76,2.83l0.05,0.6l1.5,1.11l0.26,1.9l1.44,1.5l0.37,1.68l-5.01,-0.01l-1.78,1.7l-1.42,-0.52l-0.76,-1.87l-2.27,-2.15l-11.61,0.86l0.71,-2.34l3.43,-1.32l0.25,-0.44l-0.21,-1.24l-1.2,-0.65l-0.28,-2.46l-2.29,-1.14l-1.28,-1.94l2.82,0.94l2.62,-0.38l1.42,0.33l0.76,-0.56l1.71,0.19l3.25,-1.14l0.27,-0.36l0.08,-2.19l1.18,-1.32l1.68,0.0l0.58,-0.82l1.6,-0.3l1.19,0.16l0.98,-0.78l0.02,-1.88l0.93,-1.47l1.48,-0.66l0.19,-0.55l-0.66,-1.25l2.04,-0.11l0.69,-1.01l-0.02,-1.16l1.11,-1.06l-0.17,-1.78l-0.49,-1.03l1.15,-0.98l5.42,-0.91l2.6,-0.82l1.6,1.16l0.97,2.34l3.45,0.97Z",name:"Pakistan"},PH:{path:"M737.01,263.84l0.39,2.97l-0.44,1.18l-0.55,-1.53l-0.67,-0.14l-1.17,1.28l0.65,2.09l-0.42,0.69l-2.48,-1.23l-0.57,-1.49l0.65,-1.03l-0.1,-0.54l-1.59,-1.19l-0.56,0.08l-0.65,0.87l-1.23,0.0l-1.58,0.97l0.83,-1.8l2.56,-1.42l0.65,0.84l0.45,0.13l1.9,-0.69l0.56,-1.11l1.5,-0.06l0.38,-0.43l-0.09,-1.19l1.21,0.71l0.36,2.02ZM733.59,256.58l0.05,0.75l0.08,0.26l-0.8,-0.42l-0.18,-0.71l0.85,0.12ZM734.08,256.1l-0.12,-1.12l-1.0,-1.27l1.36,0.03l0.53,0.73l0.51,2.04l-1.27,-0.4ZM733.76,257.68l0.38,0.98l-0.32,0.15l-0.07,-1.13ZM724.65,238.43l1.46,0.7l0.72,-0.31l-0.32,1.17l0.79,1.71l-0.57,1.84l-1.53,1.04l-0.39,2.25l0.56,2.04l1.63,0.57l1.16,-0.27l2.71,1.23l-0.19,1.08l0.76,0.84l-0.08,0.36l-1.4,-0.9l-0.88,-1.27l-0.66,0.0l-0.38,0.55l-1.6,-1.31l-2.15,0.36l-0.87,-0.39l0.07,-0.61l0.66,-0.55l-0.01,-0.62l-0.75,-0.59l-0.72,0.44l-0.74,-0.87l-0.39,-2.49l0.32,0.27l0.66,-0.28l0.26,-3.97l0.7,-2.02l1.14,0.0ZM731.03,258.87l-0.88,0.85l-1.19,1.94l-1.05,-1.19l0.93,-1.1l0.32,-1.47l0.52,-0.06l-0.27,1.15l0.22,0.45l0.49,-0.12l1.0,-1.32l-0.08,0.85ZM726.83,255.78l0.83,0.38l1.17,-0.0l-0.02,0.48l-2.0,1.4l0.03,-2.26ZM724.81,252.09l-0.38,1.27l-1.42,-1.95l1.2,0.05l0.6,0.63ZM716.55,261.82l1.1,-0.95l0.03,-0.03l-0.28,0.36l-0.85,0.61ZM719.22,259.06l0.04,-0.06l0.8,-1.53l0.16,0.75l-1.0,0.84Z",name:"Philippines"},PL:{path:"M468.44,149.42l-1.11,-1.54l-1.86,-0.33l-0.48,-1.05l-1.72,-0.37l-0.65,0.69l-0.72,-0.36l0.11,-0.61l-0.33,-0.46l-1.75,-0.27l-1.04,-0.93l-0.94,-1.94l0.16,-1.22l-0.62,-1.8l-0.78,-1.07l0.57,-1.04l-0.48,-1.43l1.41,-0.83l6.91,-2.71l2.14,0.5l0.52,0.91l5.51,0.44l4.55,-0.05l1.07,0.31l0.48,0.84l0.15,1.58l0.65,1.2l-0.01,0.99l-1.27,0.58l-0.19,0.54l0.73,1.48l0.08,1.55l1.2,2.76l-0.17,0.58l-1.23,0.44l-2.27,2.72l0.18,0.95l-1.97,-1.03l-1.98,0.4l-1.36,-0.28l-1.24,0.58l-1.07,-0.97l-1.16,0.24Z",name:"Poland"},"-99":{path:"M504.91,192.87l0.34,0.01l0.27,-0.07l-0.29,0.26l-0.31,-0.2Z",name:"N. Cyprus"},ZM:{path:"M481.47,313.3l0.39,0.31l2.52,0.14l0.99,1.17l2.01,0.35l1.4,-0.64l0.69,1.17l1.78,0.33l1.84,2.35l2.23,0.18l0.4,-0.43l-0.21,-2.74l-0.62,-0.3l-0.48,0.32l-1.98,-1.17l0.72,-5.29l-0.51,-1.18l0.57,-1.3l3.68,-0.62l0.26,0.63l1.21,0.63l0.9,-0.22l2.16,0.67l1.33,0.71l1.07,1.02l0.56,1.87l-0.88,2.7l0.43,2.09l-0.73,0.87l-0.76,2.37l0.59,0.68l-6.6,1.83l-0.29,0.44l0.19,1.45l-1.68,0.35l-1.43,1.02l-0.38,0.87l-0.87,0.26l-3.48,3.69l-4.16,-0.53l-1.52,-1.0l-1.77,-0.13l-1.83,0.52l-3.04,-3.4l0.11,-7.59l4.82,0.03l0.39,-0.49l-0.18,-0.76l0.33,-0.83l-0.4,-1.36l0.24,-1.05Z",name:"Zambia"},EH:{path:"M384.42,230.28l0.25,-0.79l1.06,-1.29l0.8,-3.51l3.38,-2.78l0.7,-1.81l0.06,4.84l-1.98,0.2l-0.94,1.59l0.39,3.56l-3.7,-0.01ZM392.01,218.1l0.7,-1.8l1.77,-0.24l2.09,0.34l0.95,-0.62l1.28,-0.07l-0.0,2.51l-6.79,-0.12Z",name:"W. Sahara"},EE:{path:"M485.71,115.04l2.64,0.6l2.56,0.11l-1.6,1.91l0.61,3.54l-0.81,0.87l-1.78,-0.01l-3.22,-1.76l-1.8,0.45l0.21,-1.53l-0.58,-0.41l-0.69,0.34l-1.26,-1.03l-0.17,-1.63l2.83,-0.92l3.05,-0.52Z",name:"Estonia"},EG:{path:"M492.06,205.03l1.46,0.42l2.95,-1.64l2.04,-0.21l1.53,0.3l0.59,1.19l0.69,0.04l0.41,-0.64l1.81,0.58l1.95,0.16l1.04,-0.51l1.42,4.08l-2.03,4.54l-1.66,-1.77l-1.76,-3.85l-0.64,-0.12l-0.36,0.67l1.04,2.88l3.44,6.95l1.78,3.04l2.03,2.65l-0.36,0.53l0.23,2.01l2.7,2.19l-28.41,0.0l0.0,-18.96l-0.73,-2.2l0.59,-1.56l-0.32,-1.26l0.68,-0.99l3.06,-0.04l4.82,1.52Z",name:"Egypt"},ZA:{path:"M467.14,373.21l-0.13,-1.96l-0.68,-1.56l0.7,-0.68l-0.13,-2.33l-4.56,-8.19l0.77,-0.86l0.6,0.45l0.69,1.31l2.83,0.72l1.5,-0.26l2.24,-1.39l0.19,-9.55l1.35,2.3l-0.21,1.5l0.61,1.2l0.4,0.19l1.79,-0.27l2.6,-2.07l0.69,-1.32l0.96,-0.48l2.19,1.04l2.04,0.13l1.77,-0.65l0.85,-2.12l1.38,-0.33l1.59,-2.76l2.15,-1.89l3.41,-1.87l2.0,0.45l1.02,-0.28l0.99,0.2l1.75,5.29l-0.38,3.25l-0.81,-0.23l-1.0,0.46l-0.87,1.68l-0.05,1.16l1.97,1.84l1.47,-0.29l0.69,-1.18l1.09,0.01l-0.76,3.69l-0.58,1.09l-2.2,1.79l-3.17,4.76l-2.8,2.83l-3.57,2.88l-2.53,1.05l-1.22,0.14l-0.51,0.7l-1.18,-0.32l-1.39,0.5l-2.59,-0.52l-1.61,0.33l-1.18,-0.11l-2.55,1.1l-2.1,0.44l-1.6,1.07l-0.85,0.05l-0.93,-0.89l-0.93,-0.15l-0.97,-1.13l-0.25,0.05ZM491.45,364.19l0.62,-0.93l1.48,-0.59l1.18,-2.19l-0.07,-0.49l-1.99,-1.69l-1.66,0.56l-1.43,1.14l-1.34,1.73l0.02,0.51l1.88,2.11l1.31,-0.16Z",name:"South Africa"},EC:{path:"M231.86,285.53l0.29,1.59l-0.69,1.45l-2.61,2.51l-3.13,1.11l-1.53,2.18l-0.49,1.68l-1.0,0.73l-1.02,-1.11l-1.78,-0.16l0.67,-1.15l-0.24,-0.86l1.25,-2.13l-0.54,-1.09l-0.67,-0.08l-0.72,0.87l-0.87,-0.64l0.35,-0.69l-0.36,-1.96l0.81,-0.51l0.45,-1.51l0.92,-1.57l-0.07,-0.97l2.65,-1.33l2.75,1.35l0.77,1.05l2.12,0.35l0.76,-0.32l1.96,1.21Z",name:"Ecuador"},AL:{path:"M470.32,171.8l0.74,0.03l0.92,0.89l-0.17,1.95l0.36,1.28l1.01,0.82l-1.82,2.83l-0.19,-0.61l-1.25,-0.89l-0.18,-1.2l0.53,-2.82l-0.54,-1.47l0.6,-0.83Z",name:"Albania"},AO:{path:"M461.55,300.03l1.26,3.15l1.94,2.36l2.47,-0.53l1.25,0.32l0.44,-0.18l0.93,-1.92l1.31,-0.08l0.41,-0.44l0.47,-0.0l-0.1,0.41l0.39,0.49l2.65,-0.02l0.03,1.19l0.48,1.01l-0.34,1.52l0.18,1.55l0.83,1.04l-0.13,2.85l0.54,0.39l3.96,-0.41l-0.1,1.79l0.39,1.05l-0.24,1.43l-4.7,-0.03l-0.4,0.39l-0.12,8.13l2.92,3.49l-3.83,0.88l-5.89,-0.36l-1.88,-1.24l-10.47,0.22l-1.3,-1.01l-1.85,-0.16l-2.4,0.77l-0.15,-1.06l0.33,-2.16l1.0,-3.45l1.35,-3.2l2.24,-2.8l0.33,-2.06l-0.13,-1.53l-0.8,-1.08l-1.21,-2.87l0.87,-1.62l-1.27,-4.12l-1.17,-1.53l2.47,-0.63l7.03,0.03ZM451.71,298.87l-0.47,-1.25l1.25,-1.11l0.32,0.3l-0.99,1.03l-0.12,1.03Z",name:"Angola"},KZ:{path:"M552.8,172.89l0.46,-1.27l-0.48,-1.05l-2.96,-1.19l-1.06,-2.58l-1.37,-0.87l-0.03,-0.3l1.95,0.23l0.45,-0.38l0.08,-1.96l1.75,-0.41l2.1,0.45l0.48,-0.33l0.45,-3.04l-0.45,-2.09l-0.41,-0.31l-2.42,0.15l-2.36,-0.73l-2.87,1.37l-2.17,0.61l-0.85,-0.34l0.13,-1.61l-1.6,-2.12l-2.02,-0.08l-1.78,-1.82l1.29,-2.18l-0.57,-0.95l1.62,-2.91l2.21,1.63l0.63,-0.27l0.29,-2.22l4.92,-3.43l3.71,-0.08l8.4,3.6l2.92,-1.36l3.77,-0.06l3.11,1.66l0.51,-0.11l0.6,-0.81l3.31,0.13l0.39,-0.25l0.63,-1.57l-0.17,-0.5l-3.5,-1.98l1.87,-1.27l-0.13,-1.03l1.98,-0.72l0.18,-0.62l-1.59,-2.06l0.81,-0.82l9.23,-1.18l1.33,-0.88l6.18,-1.26l2.26,-1.42l4.08,0.68l0.73,3.33l0.51,0.3l2.48,-0.8l2.79,1.02l-0.17,1.56l0.43,0.44l2.55,-0.24l4.89,-2.53l0.03,0.32l3.15,2.61l5.56,8.47l0.65,0.02l1.12,-1.46l3.15,1.74l3.76,-0.78l1.15,0.49l1.14,1.8l1.84,0.76l0.99,1.29l3.35,-0.25l1.02,1.52l-1.6,1.81l-1.93,0.28l-0.34,0.38l-0.11,3.05l-1.13,1.16l-4.75,-1.0l-0.46,0.27l-1.76,5.47l-1.1,0.59l-4.91,1.23l-0.27,0.54l2.1,4.97l-1.37,0.63l-0.23,0.41l0.13,1.13l-0.88,-0.25l-1.42,-1.13l-7.89,-0.4l-0.92,0.31l-3.73,-1.22l-1.42,0.63l-0.53,1.66l-3.72,-0.94l-1.85,0.43l-0.76,1.4l-4.65,2.62l-1.13,2.08l-0.44,0.01l-0.92,-1.4l-2.87,-0.09l-0.45,-2.14l-0.38,-0.32l-0.8,-0.01l0.0,-2.96l-3.0,-2.22l-7.31,0.58l-2.35,-2.68l-6.71,-3.69l-6.45,1.83l-0.29,0.39l0.1,10.85l-0.7,0.08l-1.62,-2.17l-1.83,-0.96l-3.11,0.59l-0.64,0.51Z",name:"Kazakhstan"},ET:{path:"M516.04,247.79l1.1,0.84l1.63,-0.45l0.68,0.47l1.63,0.03l2.01,0.94l1.73,1.66l1.64,2.07l-1.52,2.04l0.16,1.72l0.39,0.38l2.05,0.0l-0.36,1.03l2.86,3.58l8.32,3.08l1.31,0.02l-6.32,6.75l-3.1,0.11l-2.36,1.77l-1.47,0.04l-0.86,0.79l-1.38,-0.0l-1.32,-0.81l-2.29,1.05l-0.76,0.98l-3.29,-0.41l-3.07,-2.07l-1.8,-0.07l-0.62,-0.6l0.0,-1.24l-0.28,-0.38l-1.15,-0.37l-1.4,-2.59l-1.19,-0.68l-0.47,-1.0l-1.27,-1.23l-1.16,-0.22l0.43,-0.72l1.45,-0.28l0.41,-0.95l-0.03,-2.21l0.68,-2.44l1.05,-0.63l1.43,-3.06l1.57,-1.37l1.02,-2.51l0.35,-1.88l2.52,0.46l0.44,-0.24l0.58,-1.43Z",name:"Ethiopia"},ZW:{path:"M498.91,341.09l-1.11,-0.22l-0.92,0.28l-2.09,-0.44l-1.5,-1.11l-1.89,-0.43l-0.62,-1.4l-0.01,-0.84l-0.3,-0.38l-0.97,-0.25l-2.71,-2.74l-1.92,-3.32l3.83,0.45l3.73,-3.82l1.08,-0.44l0.26,-0.77l1.25,-0.9l1.41,-0.26l0.5,0.89l1.99,-0.05l1.72,1.17l1.11,0.17l1.05,0.66l0.01,2.99l-0.59,3.76l0.38,0.86l-0.23,1.23l-0.39,0.35l-0.63,1.81l-2.43,2.75Z",name:"Zimbabwe"},ES:{path:"M416.0,169.21l1.07,1.17l4.61,1.38l1.06,-0.57l2.6,1.26l2.71,-0.3l0.09,1.12l-2.14,1.8l-3.11,0.61l-0.31,0.31l-0.2,0.89l-1.54,1.69l-0.97,2.4l0.84,1.74l-1.32,1.27l-0.48,1.68l-1.88,0.65l-1.66,2.07l-5.36,-0.01l-1.79,1.08l-0.89,0.98l-0.88,-0.17l-0.79,-0.82l-0.68,-1.59l-2.37,-0.63l-0.11,-0.5l1.21,-1.82l-0.77,-1.13l0.61,-1.68l-0.76,-1.62l0.87,-0.49l0.09,-1.25l0.42,-0.6l0.03,-2.11l0.99,-0.69l0.13,-0.5l-1.03,-1.73l-1.46,-0.11l-0.61,0.38l-1.06,0.0l-0.52,-1.23l-0.53,-0.21l-1.32,0.67l-0.01,-1.49l-0.75,-0.96l3.03,-1.88l2.99,0.53l3.32,-0.02l2.63,0.51l6.01,-0.06Z",name:"Spain"},ER:{path:"M520.38,246.23l3.42,2.43l3.5,3.77l0.84,0.54l-0.95,-0.01l-3.51,-3.89l-2.33,-1.15l-1.73,-0.07l-0.91,-0.51l-1.26,0.51l-1.34,-1.02l-0.61,0.17l-0.66,1.61l-2.35,-0.43l-0.17,-0.67l1.29,-5.29l0.61,-0.61l1.95,-0.53l0.87,-1.01l1.17,2.41l0.68,2.33l1.49,1.43Z",name:"Eritrea"},ME:{path:"M468.91,172.53l-1.22,-1.02l0.47,-1.81l0.89,-0.72l2.26,1.51l-0.5,0.57l-0.75,-0.27l-1.14,1.73Z",name:"Montenegro"},MD:{path:"M488.41,153.73l1.4,-0.27l1.72,0.93l1.07,0.15l0.85,0.65l-0.14,0.84l0.96,0.85l1.12,2.47l-1.15,-0.07l-0.66,-0.41l-0.52,0.25l-0.09,0.86l-1.08,1.89l-0.27,-0.86l0.25,-1.34l-0.16,-1.6l-3.29,-4.34Z",name:"Moldova"},MG:{path:"M545.91,319.14l0.4,3.03l0.62,1.21l-0.21,1.02l-0.57,-0.8l-0.69,-0.01l-0.47,0.76l0.41,2.12l-0.18,0.87l-0.73,0.78l-0.15,2.14l-4.71,15.2l-1.06,2.88l-3.92,1.64l-3.12,-1.49l-0.6,-1.21l-0.19,-2.4l-0.86,-2.05l-0.21,-1.77l0.38,-1.62l1.21,-0.75l0.01,-0.76l1.19,-2.04l0.23,-1.66l-1.06,-2.99l-0.19,-2.21l0.81,-1.33l0.32,-1.46l4.63,-1.22l3.44,-3.0l0.85,-1.4l-0.08,-0.7l0.78,-0.04l1.38,-1.77l0.13,-1.64l0.45,-0.61l1.16,1.69l0.59,1.6Z",name:"Madagascar"},MA:{path:"M378.78,230.02l0.06,-0.59l0.92,-0.73l0.82,-1.37l-0.09,-1.04l0.79,-1.7l1.31,-1.58l0.96,-0.59l0.66,-1.55l0.09,-1.47l0.81,-1.48l1.72,-1.07l1.55,-2.69l1.16,-0.96l2.44,-0.39l1.94,-1.82l1.31,-0.78l2.09,-2.28l-0.51,-3.65l1.24,-3.7l1.5,-1.75l4.46,-2.57l2.37,-4.47l1.44,0.01l1.68,1.21l2.32,-0.19l3.47,0.65l0.8,1.54l0.16,1.71l0.86,2.96l0.56,0.59l-0.26,0.61l-3.05,0.44l-1.26,1.05l-1.33,0.22l-0.33,0.37l-0.09,1.78l-2.68,1.0l-1.07,1.42l-4.47,1.13l-4.04,2.01l-0.54,4.64l-1.15,0.06l-0.92,0.61l-1.96,-0.35l-2.42,0.54l-0.74,1.9l-0.86,0.4l-1.14,3.26l-3.53,3.01l-0.8,3.55l-0.96,1.1l-0.29,0.82l-4.95,0.18Z",name:"Morocco"},UZ:{path:"M598.64,172.75l-1.63,1.52l0.06,0.64l1.85,1.12l1.97,-0.64l2.21,1.17l-2.52,1.68l-2.59,-0.22l-0.18,-0.41l0.46,-1.23l-0.45,-0.53l-3.35,0.69l-2.1,3.51l-1.87,-0.12l-1.03,1.51l0.22,0.55l1.64,0.62l0.46,1.83l-1.19,2.49l-2.66,-0.53l0.05,-1.36l-0.26,-0.39l-3.3,-1.23l-2.56,-1.4l-4.4,-3.34l-1.34,-3.14l-1.08,-0.6l-2.58,0.13l-0.69,-0.44l-0.47,-2.52l-3.37,-1.6l-0.43,0.05l-2.07,1.72l-2.1,1.01l-0.21,0.47l0.28,1.01l-1.91,0.03l-0.09,-10.5l5.99,-1.7l6.19,3.54l2.71,2.84l7.05,-0.67l2.71,2.01l-0.17,2.81l0.39,0.42l0.9,0.02l0.44,2.14l0.38,0.32l2.94,0.09l0.95,1.42l1.28,-0.24l1.05,-2.04l4.43,-2.5Z",name:"Uzbekistan"},MM:{path:"M673.9,230.21l-1.97,1.57l-0.57,0.96l-1.4,0.6l-1.36,1.05l-1.99,0.36l-1.08,2.66l-0.91,0.4l-0.19,0.55l1.21,2.27l2.52,3.43l-0.79,1.91l-0.74,0.41l-0.17,0.52l0.65,1.37l1.61,1.95l0.25,2.58l0.9,2.13l-1.92,3.57l0.68,-2.25l-0.81,-1.74l0.19,-2.65l-1.05,-1.53l-1.24,-6.17l-1.12,-2.26l-0.6,-0.13l-4.34,3.02l-2.39,-0.65l0.77,-2.84l-0.52,-2.61l-1.91,-2.96l0.25,-0.75l-0.29,-0.51l-1.33,-0.3l-1.61,-1.93l-0.1,-1.3l0.82,-0.24l0.04,-1.64l1.02,-0.52l0.21,-0.45l-0.23,-0.95l0.54,-0.96l0.08,-2.22l1.46,0.45l0.47,-0.2l1.12,-2.19l0.16,-1.35l1.33,-2.16l-0.0,-1.52l2.89,-1.66l1.63,0.44l0.5,-0.44l-0.17,-1.4l0.64,-0.36l0.08,-1.04l0.77,-0.11l0.71,1.35l1.06,0.69l-0.03,3.86l-2.38,2.37l-0.3,3.15l0.46,0.43l2.28,-0.38l0.51,2.08l1.47,0.67l-0.6,1.8l0.19,0.48l2.97,1.48l1.64,-0.55l0.02,0.32Z",name:"Myanmar"},ML:{path:"M392.61,254.08l-0.19,-2.37l-0.99,-0.87l-0.44,-1.3l-0.09,-1.28l0.81,-0.58l0.35,-1.24l2.37,0.65l1.31,-0.47l0.86,0.15l0.66,-0.56l9.83,-0.04l0.38,-0.28l0.56,-1.8l-0.44,-0.65l-2.35,-21.95l3.27,-0.04l16.7,11.38l0.74,1.31l2.5,1.09l0.02,1.38l0.44,0.39l2.34,-0.21l0.01,5.38l-1.28,1.61l-0.26,1.49l-5.31,0.57l-1.07,0.92l-2.9,0.1l-0.86,-0.48l-1.38,0.36l-2.4,1.08l-0.6,0.87l-1.85,1.09l-0.43,0.7l-0.79,0.39l-1.44,-0.21l-0.81,0.84l-0.34,1.64l-1.91,2.02l-0.06,1.03l-0.67,1.22l0.13,1.16l-0.97,0.39l-0.23,-0.64l-0.52,-0.24l-1.35,0.4l-0.34,0.55l-2.69,-0.28l-0.37,-0.35l-0.02,-0.9l-0.65,-0.35l0.45,-0.64l-0.03,-0.53l-2.12,-2.44l-0.76,-0.01l-2.0,1.16l-0.78,-0.15l-0.8,-0.67l-1.21,0.23Z",name:"Mali"},MN:{path:"M676.61,146.48l3.81,1.68l5.67,-1.0l2.37,0.41l2.34,1.5l1.79,1.75l2.29,-0.03l3.12,0.52l2.47,-0.81l3.41,-0.59l3.53,-2.21l1.25,0.29l1.53,1.13l2.27,-0.21l-2.66,5.01l0.64,1.68l0.47,0.21l1.32,-0.38l2.38,0.48l2.02,-1.11l1.76,0.89l2.06,2.02l-0.13,0.53l-1.72,-0.29l-3.77,0.46l-1.88,0.99l-1.76,1.99l-3.71,1.17l-2.45,1.6l-3.83,-0.87l-0.41,0.17l-1.31,1.99l1.04,2.24l-1.52,0.9l-1.74,1.57l-2.79,1.02l-3.78,0.13l-4.05,1.05l-2.77,1.52l-1.16,-0.85l-2.94,0.0l-3.62,-1.79l-2.58,-0.49l-3.4,0.41l-5.12,-0.67l-2.63,0.06l-1.31,-1.6l-1.4,-3.0l-1.48,-0.33l-3.13,-1.94l-6.16,-0.93l-0.71,-1.06l0.86,-3.82l-1.93,-2.71l-3.5,-1.18l-1.95,-1.58l-0.5,-1.72l2.34,-0.52l4.75,-2.8l3.62,-1.47l2.18,0.97l2.46,0.05l1.81,1.53l2.46,0.12l3.95,0.71l2.43,-2.28l0.08,-0.48l-0.9,-1.72l2.24,-2.98l2.62,1.27l4.94,1.17l0.43,2.24Z",name:"Mongolia"},MK:{path:"M472.8,173.98l0.49,-0.71l3.57,-0.71l1.0,0.77l0.13,1.45l-0.65,0.53l-1.15,-0.05l-1.12,0.67l-1.39,0.22l-0.79,-0.55l-0.29,-1.03l0.19,-0.6Z",name:"Macedonia"},MW:{path:"M505.5,309.31l0.85,1.95l0.15,2.86l-0.69,1.65l0.71,1.8l0.06,1.28l0.49,0.64l0.07,1.06l0.4,0.55l0.8,-0.23l0.55,0.61l0.69,-0.21l0.34,0.6l0.19,2.94l-1.04,0.62l-0.54,1.25l-1.11,-1.08l-0.16,-1.56l0.51,-1.31l-0.32,-1.3l-0.99,-0.65l-0.82,0.12l-2.36,-1.64l0.63,-1.96l0.82,-1.18l-0.46,-2.01l0.9,-2.86l-0.94,-2.51l0.96,0.18l0.29,0.4Z",name:"Malawi"},MR:{path:"M407.36,220.66l-2.58,0.03l-0.39,0.44l2.42,22.56l0.36,0.43l-0.39,1.24l-9.75,0.04l-0.56,0.53l-0.91,-0.11l-1.27,0.45l-1.61,-0.66l-0.97,0.03l-0.36,0.29l-0.38,1.35l-0.42,0.23l-2.93,-3.4l-2.96,-1.52l-1.62,-0.03l-1.27,0.54l-1.12,-0.2l-0.65,0.4l-0.08,-0.49l0.68,-1.29l0.31,-2.43l-0.57,-3.91l0.23,-1.21l-0.69,-1.5l-1.15,-1.02l0.25,-0.39l9.58,0.02l0.4,-0.45l-0.46,-3.68l0.47,-1.04l2.12,-0.21l0.36,-0.4l-0.08,-6.4l7.81,0.13l0.41,-0.4l0.01,-3.31l7.76,5.35Z",name:"Mauritania"},UG:{path:"M498.55,276.32l0.7,-0.46l1.65,0.5l1.96,-0.57l1.7,0.01l1.45,-0.98l0.91,1.33l1.33,3.95l-2.57,4.03l-1.46,-0.4l-2.54,0.91l-1.37,1.61l-0.01,0.81l-2.42,-0.01l-2.26,1.01l-0.17,-1.59l0.58,-1.04l0.14,-1.94l1.37,-2.28l1.78,-1.58l-0.17,-0.65l-0.72,-0.24l0.13,-2.43Z",name:"Uganda"},MY:{path:"M717.47,273.46l-1.39,0.65l-2.12,-0.41l-2.88,-0.0l-0.38,0.28l-0.84,2.75l-0.99,0.96l-1.21,3.29l-1.73,0.45l-2.45,-0.68l-1.39,0.31l-1.33,1.15l-1.59,-0.14l-1.41,0.44l-1.44,-1.19l-0.18,-0.73l1.34,0.53l1.93,-0.47l0.75,-2.22l4.02,-1.03l2.75,-3.21l0.82,0.94l0.64,-0.05l0.4,-0.65l0.96,0.06l0.42,-0.36l0.24,-2.68l1.81,-1.64l1.21,-1.86l0.63,-0.01l1.07,1.05l0.34,1.28l3.44,1.35l-0.06,0.35l-1.37,0.1l-0.35,0.54l0.32,0.88ZM673.68,269.59l0.17,1.09l0.47,0.33l1.65,-0.3l0.87,-0.94l1.61,1.52l0.98,1.56l-0.12,2.81l0.41,2.29l0.95,0.9l0.88,2.44l-1.27,0.12l-5.1,-3.67l-0.34,-1.29l-1.37,-1.59l-0.33,-1.97l-0.88,-1.4l0.25,-1.68l-0.46,-1.05l1.63,0.84Z",name:"Malaysia"},MX:{path:"M133.12,200.41l0.2,0.47l9.63,3.33l6.96,-0.02l0.4,-0.4l0.0,-0.74l3.77,0.0l3.55,2.93l1.39,2.83l1.52,1.04l2.08,0.82l0.47,-0.14l1.46,-2.0l1.73,-0.04l1.59,0.98l2.05,3.35l1.47,1.56l1.26,3.14l2.18,1.02l2.26,0.58l-1.18,3.72l-0.42,5.04l1.79,4.89l1.62,1.89l0.61,1.52l1.2,1.42l2.55,0.66l1.37,1.1l7.54,-1.89l1.86,-1.3l1.14,-4.3l4.1,-1.21l3.57,-0.11l0.32,0.3l-0.06,0.94l-1.26,1.45l-0.67,1.71l0.38,0.7l-0.72,2.27l-0.49,-0.3l-1.0,0.08l-1.0,1.39l-0.47,-0.11l-0.53,0.47l-4.26,-0.02l-0.4,0.4l-0.0,1.06l-1.1,0.26l0.1,0.44l1.82,1.44l0.56,0.91l-3.19,0.21l-1.21,2.09l0.24,0.72l-0.2,0.44l-2.24,-2.18l-1.45,-0.93l-2.22,-0.69l-1.52,0.22l-3.07,1.16l-10.55,-3.85l-2.86,-1.96l-3.78,-0.92l-1.08,-1.19l-2.62,-1.43l-1.18,-1.54l-0.38,-0.81l0.66,-0.63l-0.18,-0.53l0.52,-0.76l0.01,-0.91l-2.0,-3.82l-2.21,-2.63l-2.53,-2.09l-1.19,-1.62l-2.2,-1.17l-0.3,-0.43l0.34,-1.48l-0.21,-0.45l-1.23,-0.6l-1.36,-1.2l-0.59,-1.78l-1.54,-0.47l-2.44,-2.55l-0.16,-0.9l-1.33,-2.03l-0.84,-1.99l-0.16,-1.33l-1.81,-1.1l-0.97,0.05l-1.31,-0.7l-0.57,0.22l-0.4,1.12l0.72,3.77l3.51,3.89l0.28,0.78l0.53,0.26l0.41,1.43l1.33,1.73l1.58,1.41l0.8,2.39l1.43,2.41l0.13,1.32l0.37,0.36l1.04,0.08l1.67,2.28l-0.85,0.76l-0.66,-1.51l-1.68,-1.54l-2.91,-1.87l0.06,-1.82l-0.54,-1.68l-2.91,-2.03l-0.55,0.09l-1.95,-1.1l-0.88,-0.94l0.68,-0.08l0.93,-1.01l0.08,-1.78l-1.93,-1.94l-1.46,-0.77l-3.75,-7.56l4.88,-0.42Z",name:"Mexico"},VU:{path:"M839.04,322.8l0.22,1.14l-0.44,0.03l-0.2,-1.45l0.42,0.27Z",name:"Vanuatu"},FR:{path:"M444.48,172.62l-0.64,1.78l-0.58,-0.31l-0.49,-1.72l0.4,-0.89l1.0,-0.72l0.3,1.85ZM429.64,147.1l1.78,1.58l1.46,-0.13l2.1,1.42l1.35,0.27l1.23,0.83l3.04,0.5l-1.03,1.85l-0.3,2.12l-0.41,0.32l-0.95,-0.24l-0.5,0.43l0.06,0.61l-1.81,1.92l-0.04,1.42l0.55,0.38l0.88,-0.36l0.61,0.97l-0.03,1.0l0.57,0.91l-0.75,1.09l0.65,2.39l1.27,0.57l-0.18,0.82l-2.01,1.53l-4.77,-0.8l-3.82,1.0l-0.53,1.85l-2.49,0.34l-2.71,-1.31l-1.16,0.57l-4.31,-1.29l-0.72,-0.86l1.19,-1.78l0.39,-6.45l-2.58,-3.3l-1.9,-1.66l-3.72,-1.23l-0.19,-1.72l2.81,-0.61l4.12,0.81l0.47,-0.48l-0.6,-2.77l1.94,0.95l5.83,-2.54l0.92,-2.74l1.6,-0.49l0.24,0.78l1.36,0.33l1.05,1.19ZM289.01,278.39l-0.81,0.8l-0.78,0.12l-0.5,-0.66l-0.56,-0.1l-0.91,0.6l-0.46,-0.22l1.09,-2.96l-0.96,-1.77l-0.17,-1.49l1.07,-1.77l2.32,0.75l2.51,2.01l0.3,0.74l-2.14,3.96Z",name:"France"},FI:{path:"M492.17,76.39l-0.23,3.5l3.52,2.63l-2.08,2.88l-0.02,0.44l2.8,4.56l-1.59,3.31l2.16,3.24l-0.94,2.39l0.14,0.47l3.44,2.51l-0.77,1.62l-7.52,6.95l-4.5,0.31l-4.38,1.37l-3.8,0.74l-1.44,-1.96l-2.17,-1.11l0.5,-3.66l-1.16,-3.33l1.09,-2.08l2.21,-2.42l5.67,-4.32l1.64,-0.83l0.21,-0.42l-0.46,-2.02l-3.38,-1.89l-0.75,-1.43l-0.22,-6.74l-6.79,-4.8l0.8,-0.62l2.54,2.12l3.46,-0.12l3.0,0.96l2.51,-2.11l1.17,-3.08l3.55,-1.38l2.76,1.53l-0.95,2.79Z",name:"Finland"},FJ:{path:"M871.53,326.34l-2.8,1.05l-0.08,-0.23l2.97,-1.21l-0.1,0.39ZM867.58,329.25l0.43,0.37l-0.27,0.88l-1.24,0.28l-1.04,-0.24l-0.14,-0.66l0.63,-0.58l0.92,0.26l0.7,-0.31Z",name:"Fiji"},FK:{path:"M274.36,425.85l1.44,1.08l-0.47,0.73l-3.0,0.89l-0.96,-1.0l-0.52,-0.05l-1.83,1.29l-0.73,-0.88l2.46,-1.64l1.93,0.76l1.67,-1.19Z",name:"Falkland Is."},NI:{path:"M202.33,252.67l0.81,-0.18l1.03,-1.02l-0.04,-0.88l0.68,-0.0l0.63,-0.54l0.97,0.22l1.53,-1.26l0.58,-0.99l1.17,0.34l2.41,-0.94l0.13,1.32l-0.81,1.94l0.1,2.74l-0.36,0.37l-0.11,1.75l-0.47,0.81l0.18,1.14l-1.73,-0.85l-0.71,0.27l-1.47,-0.6l-0.52,0.16l-4.01,-3.81Z",name:"Nicaragua"},NL:{path:"M430.31,143.39l0.6,-0.5l2.13,-4.8l3.2,-1.33l1.74,0.08l0.33,0.8l-0.59,2.92l-0.5,0.99l-1.26,0.0l-0.4,0.45l0.33,2.7l-2.2,-1.78l-2.62,0.58l-0.75,-0.11Z",name:"Netherlands"},NO:{path:"M491.44,67.41l6.8,2.89l-2.29,0.86l-0.15,0.65l2.33,2.38l-4.98,1.79l0.84,-2.45l-0.18,-0.48l-3.55,-1.8l-3.89,1.52l-1.42,3.38l-2.12,1.72l-2.64,-1.0l-3.11,0.21l-2.66,-2.22l-0.5,-0.01l-1.41,1.1l-1.44,0.17l-0.35,0.35l-0.32,2.47l-4.32,-0.64l-0.44,0.29l-0.58,2.11l-2.45,0.2l-4.15,7.68l-3.88,5.76l0.78,1.62l-0.64,1.16l-2.24,-0.06l-0.38,0.24l-1.66,3.89l0.15,5.17l1.57,2.04l-0.78,4.16l-2.02,2.48l-0.85,1.63l-1.3,-1.75l-0.58,-0.07l-4.87,4.19l-3.1,0.79l-3.16,-1.7l-0.85,-3.77l-0.77,-8.55l2.14,-2.31l6.55,-3.27l5.02,-4.17l10.63,-13.84l10.98,-8.7l5.35,-1.91l4.34,0.12l3.69,-3.64l4.49,0.19l4.37,-0.89ZM484.55,20.04l4.26,1.75l-3.1,2.55l-7.1,0.65l-7.08,-0.9l-0.37,-1.31l-0.37,-0.29l-3.44,-0.1l-2.08,-2.0l6.87,-1.44l3.9,1.31l2.39,-1.64l6.13,1.4ZM481.69,33.93l-4.45,1.74l-3.54,-0.99l1.12,-0.9l0.05,-0.58l-1.06,-1.22l4.22,-0.89l1.09,1.97l2.57,0.87ZM466.44,24.04l7.43,3.77l-5.41,1.86l-1.58,4.08l-2.26,1.2l-1.12,4.11l-2.61,0.18l-4.79,-2.86l1.84,-1.54l-0.1,-0.68l-3.69,-1.53l-4.77,-4.51l-1.73,-3.89l6.11,-1.82l1.54,1.92l3.57,-0.08l1.2,-1.96l3.32,-0.18l3.05,1.92Z",name:"Norway"},NA:{path:"M474.26,330.66l-0.97,0.04l-0.38,0.4l-0.07,8.9l-2.09,0.08l-0.39,0.4l-0.0,17.42l-1.98,1.23l-1.17,0.17l-2.44,-0.66l-0.48,-1.13l-0.99,-0.74l-0.54,0.05l-0.9,1.01l-1.53,-1.68l-0.93,-1.88l-1.99,-8.56l-0.06,-3.12l-0.33,-1.52l-2.3,-3.34l-1.91,-4.83l-1.96,-2.43l-0.12,-1.57l2.33,-0.79l1.43,0.07l1.81,1.13l10.23,-0.25l1.84,1.23l5.87,0.35ZM474.66,330.64l6.51,-1.6l1.9,0.39l-1.69,0.4l-1.31,0.83l-1.12,-0.94l-4.29,0.92Z",name:"Namibia"},NC:{path:"M838.78,341.24l-0.33,0.22l-2.9,-1.75l-3.26,-3.37l1.65,0.83l4.85,4.07Z",name:"New Caledonia"},NE:{path:"M454.75,226.53l1.33,1.37l0.48,0.07l1.27,-0.7l0.53,3.52l0.94,0.83l0.17,0.92l0.81,0.69l-0.44,0.95l-0.96,5.26l-0.13,3.22l-3.04,2.31l-1.22,3.57l1.02,1.24l-0.0,1.46l0.39,0.4l1.13,0.04l-0.9,1.25l-1.47,-2.42l-0.86,-0.29l-2.09,1.37l-1.74,-0.67l-1.45,-0.17l-0.85,0.35l-1.36,-0.07l-1.64,1.09l-1.06,0.05l-2.94,-1.28l-1.44,0.59l-1.01,-0.03l-0.97,-0.94l-2.7,-0.98l-2.69,0.3l-0.87,0.64l-0.47,1.6l-0.75,1.16l-0.12,1.53l-1.57,-1.1l-1.31,0.24l0.03,-0.81l-0.32,-0.41l-2.59,-0.52l-0.15,-1.16l-1.35,-1.6l-0.29,-1.0l0.13,-0.84l1.29,-0.08l1.08,-0.92l3.31,-0.22l2.22,-0.41l0.32,-0.34l0.2,-1.47l1.39,-1.88l-0.01,-5.66l3.36,-1.12l7.24,-5.12l8.42,-4.92l3.69,1.06Z",name:"Niger"},NG:{path:"M456.32,253.89l0.64,0.65l-0.28,1.04l-2.11,2.01l-2.03,5.18l-1.37,1.16l-1.15,3.18l-1.33,0.66l-1.46,-0.97l-1.21,0.16l-1.38,1.36l-0.91,0.24l-1.79,4.06l-2.33,0.81l-1.11,-0.07l-0.86,0.5l-1.71,-0.05l-1.19,-1.39l-0.89,-1.89l-1.77,-1.66l-3.95,-0.08l0.07,-5.21l0.42,-1.43l1.95,-2.3l-0.14,-0.91l0.43,-1.18l-0.53,-1.41l0.25,-2.92l0.72,-1.07l0.32,-1.34l0.46,-0.39l2.47,-0.28l2.34,0.89l1.15,1.02l1.28,0.04l1.22,-0.58l3.03,1.27l1.49,-0.14l1.36,-1.0l1.33,0.07l0.82,-0.35l3.45,0.8l1.82,-1.32l1.84,2.67l0.66,0.16Z",name:"Nigeria"},NZ:{path:"M857.8,379.65l1.86,3.12l0.44,0.18l0.3,-0.38l0.03,-1.23l0.38,0.27l0.57,2.31l2.02,0.94l1.81,0.27l1.57,-1.06l0.7,0.18l-1.15,3.59l-1.98,0.11l-0.74,1.2l0.2,1.11l-2.42,3.98l-1.49,0.92l-1.04,-0.85l1.21,-2.05l-0.81,-2.01l-2.63,-1.25l0.04,-0.57l1.82,-1.19l0.43,-2.34l-0.16,-2.03l-0.95,-1.82l-0.06,-0.72l-3.11,-3.64l-0.79,-1.52l1.56,1.45l1.76,0.66l0.65,2.34ZM853.83,393.59l0.57,1.24l0.59,0.16l1.42,-0.97l0.46,0.79l0.0,1.03l-2.47,3.48l-1.26,1.2l-0.06,0.5l0.55,0.87l-1.41,0.07l-2.33,1.38l-2.03,5.02l-3.02,2.16l-2.06,-0.06l-1.71,-1.04l-2.47,-0.2l-0.27,-0.73l1.22,-2.1l3.05,-2.94l1.62,-0.59l4.02,-2.82l1.57,-1.67l1.07,-2.16l0.88,-0.7l0.48,-1.75l1.24,-0.97l0.35,0.79Z",name:"New Zealand"},NP:{path:"M641.14,213.62l0.01,3.19l-1.74,0.04l-4.8,-0.86l-1.58,-1.39l-3.37,-0.34l-7.65,-3.7l0.8,-2.09l2.33,-1.7l1.77,0.75l2.49,1.76l1.38,0.41l0.99,1.35l1.9,0.52l1.99,1.17l5.49,0.9Z",name:"Nepal"},CI:{path:"M407.4,259.27l0.86,0.42l0.56,0.9l1.13,0.53l1.19,-0.61l0.97,-0.08l1.42,0.54l0.6,3.24l-1.03,2.08l-0.65,2.84l1.06,2.33l-0.06,0.53l-2.54,-0.47l-1.66,0.03l-3.06,0.46l-4.11,1.6l0.32,-3.06l-1.18,-1.31l-1.32,-0.66l0.42,-0.85l-0.2,-1.4l0.5,-0.67l0.01,-1.59l0.84,-0.32l0.26,-0.5l-1.15,-3.01l0.12,-0.5l0.51,-0.25l0.66,0.31l1.93,0.02l0.67,-0.71l0.71,-0.14l0.25,0.69l0.57,0.22l1.4,-0.61Z",name:"Côte d'Ivoire"},CH:{path:"M444.62,156.35l-0.29,0.87l0.18,0.53l1.13,0.58l1.0,0.1l-0.1,0.65l-0.79,0.38l-1.72,-0.37l-0.45,0.23l-0.45,1.04l-0.75,0.06l-0.84,-0.4l-1.32,1.0l-0.96,0.12l-0.88,-0.55l-0.81,-1.3l-0.49,-0.16l-0.63,0.26l0.02,-0.65l1.71,-1.66l0.1,-0.56l0.93,0.08l0.58,-0.46l1.99,0.02l0.66,-0.61l2.19,0.79Z",name:"Switzerland"},CO:{path:"M242.07,254.93l-1.7,0.59l-0.59,1.18l-1.7,1.69l-0.38,1.93l-0.67,1.43l0.31,0.57l1.03,0.13l0.25,0.9l0.57,0.64l-0.04,2.34l1.64,1.42l3.16,-0.24l1.26,0.28l1.67,2.06l0.41,0.13l4.09,-0.39l0.45,0.22l-0.92,1.95l-0.2,1.8l0.52,1.83l0.75,1.05l-1.12,1.1l0.07,0.63l0.84,0.51l0.74,1.29l-0.39,-0.45l-0.59,-0.01l-0.71,0.74l-4.71,-0.05l-0.4,0.41l0.03,1.57l0.33,0.39l1.11,0.2l-1.68,0.4l-0.29,0.38l-0.01,1.82l1.16,1.14l0.34,1.25l-1.05,7.05l-1.04,-0.87l1.26,-1.99l-0.13,-0.56l-2.18,-1.23l-1.38,0.2l-1.14,-0.38l-1.27,0.61l-1.55,-0.26l-1.38,-2.46l-1.23,-0.75l-0.85,-1.2l-1.67,-1.19l-0.86,0.13l-2.11,-1.32l-1.01,0.31l-1.8,-0.29l-0.52,-0.91l-3.09,-1.68l0.77,-0.52l-0.1,-1.12l0.41,-0.64l1.34,-0.32l2.0,-2.88l-0.11,-0.57l-0.66,-0.43l0.39,-1.38l-0.52,-2.1l0.49,-0.83l-0.4,-2.13l-0.97,-1.35l0.17,-0.66l0.86,-0.08l0.47,-0.75l-0.46,-1.63l1.41,-0.07l1.8,-1.69l0.93,-0.24l0.3,-0.38l0.45,-2.76l1.22,-1.0l1.44,-0.04l0.45,-0.5l1.91,0.12l2.93,-1.84l1.15,-1.14l0.91,0.46l-0.25,0.45Z",name:"Colombia"},CN:{path:"M740.23,148.97l4.57,1.3l2.8,2.17l0.98,2.9l0.38,0.27l3.8,0.0l2.32,-1.28l3.29,-0.75l-0.96,2.09l-1.02,1.28l-0.85,3.4l-1.52,2.73l-2.76,-0.5l-2.4,1.13l-0.21,0.45l0.64,2.57l-0.32,3.2l-0.94,0.06l-0.37,0.89l-0.91,-1.01l-0.64,0.07l-0.92,1.57l-3.73,1.25l-0.26,0.48l0.26,1.06l-1.5,-0.08l-1.09,-0.86l-0.56,0.06l-1.67,2.06l-2.7,1.56l-2.03,1.88l-3.4,0.83l-1.93,1.4l-1.15,0.34l0.33,-0.7l-0.41,-0.89l1.79,-1.79l0.02,-0.54l-1.32,-1.56l-0.48,-0.1l-2.24,1.09l-2.83,2.06l-1.51,1.83l-2.28,0.13l-1.55,1.49l-0.04,0.5l1.32,1.97l2.0,0.58l0.31,1.35l1.98,0.84l3.0,-1.96l2.0,1.02l1.49,0.11l0.22,0.83l-3.37,0.86l-1.12,1.48l-2.5,1.52l-1.29,1.99l0.14,0.56l2.57,1.48l0.97,2.7l3.17,4.63l-0.03,1.66l-1.35,0.65l-0.2,0.51l0.6,1.47l1.4,0.91l-0.89,3.82l-1.43,0.38l-3.85,6.44l-2.27,3.11l-6.78,4.57l-2.73,0.29l-1.45,1.04l-0.62,-0.61l-0.55,-0.01l-1.36,1.25l-3.39,1.27l-2.61,0.4l-1.1,2.79l-0.81,0.09l-0.49,-1.42l0.5,-0.85l-0.25,-0.59l-3.36,-0.84l-1.3,0.4l-2.31,-0.62l-0.94,-0.84l0.33,-1.28l-0.3,-0.49l-2.19,-0.46l-1.13,-0.93l-0.47,-0.02l-2.06,1.36l-4.29,0.28l-2.76,1.05l-0.28,0.43l0.32,2.53l-0.59,-0.03l-0.19,-1.34l-0.55,-0.34l-1.68,0.7l-2.46,-1.23l0.62,-1.87l-0.26,-0.51l-1.37,-0.44l-0.54,-2.22l-0.45,-0.3l-2.13,0.35l0.24,-2.48l2.39,-2.4l0.03,-4.31l-1.19,-0.92l-0.78,-1.49l-0.41,-0.21l-1.41,0.19l-1.98,-0.3l0.46,-1.07l-1.17,-1.7l-0.55,-0.11l-1.63,1.05l-2.25,-0.57l-2.89,1.73l-2.25,1.98l-1.75,0.29l-1.17,-0.71l-3.31,-0.65l-1.48,0.79l-1.04,1.27l-0.12,-1.17l-0.54,-0.34l-1.44,0.54l-5.55,-0.86l-1.98,-1.16l-1.89,-0.54l-0.99,-1.35l-1.34,-0.37l-2.55,-1.79l-2.01,-0.84l-1.21,0.56l-5.57,-3.45l-0.53,-2.31l1.19,0.25l0.48,-0.37l0.08,-1.42l-0.98,-1.56l0.15,-2.44l-2.69,-3.32l-4.12,-1.23l-0.67,-2.0l-1.92,-1.48l-0.38,-0.7l-0.51,-3.01l-1.52,-0.66l-0.7,0.13l-0.48,-2.05l0.55,-0.51l-0.09,-0.82l2.03,-1.19l1.6,-0.54l2.56,0.38l0.42,-0.22l0.85,-1.7l3.0,-0.33l1.1,-1.26l4.05,-1.77l0.39,-0.91l-0.17,-1.44l1.45,-0.67l0.2,-0.52l-2.07,-4.9l4.51,-1.12l1.37,-0.73l1.89,-5.51l4.98,0.86l1.51,-1.7l0.11,-2.87l1.99,-0.38l1.83,-2.06l0.49,-0.13l0.68,2.08l2.23,1.77l3.44,1.16l1.55,2.29l-0.92,3.49l0.96,1.67l6.54,1.13l2.95,1.87l1.47,0.35l1.06,2.62l1.53,1.91l3.05,0.08l5.14,0.67l3.37,-0.41l2.36,0.43l3.65,1.8l3.06,0.04l1.45,0.88l2.87,-1.59l3.95,-1.02l3.83,-0.14l3.06,-1.14l1.77,-1.6l1.72,-1.01l0.17,-0.49l-1.1,-2.05l1.02,-1.54l4.02,0.8l2.45,-1.61l3.76,-1.19l1.96,-2.13l1.63,-0.83l3.51,-0.4l1.92,0.34l0.46,-0.3l0.17,-1.5l-2.27,-2.22l-2.11,-1.09l-2.18,1.11l-2.32,-0.47l-1.29,0.32l-0.4,-0.82l2.73,-5.16l3.02,1.06l3.53,-2.06l0.18,-1.68l2.16,-3.35l1.49,-1.35l-0.03,-1.85l-1.07,-0.85l1.54,-1.26l2.98,-0.59l3.23,-0.09l3.64,0.99l2.04,1.16l3.29,6.71l0.92,3.19ZM696.92,237.31l-1.87,1.08l-1.63,-0.64l-0.06,-1.79l1.03,-0.98l2.58,-0.69l1.16,0.05l0.3,0.54l-0.98,1.06l-0.53,1.37Z",name:"China"},CM:{path:"M457.92,257.49l1.05,1.91l-1.4,0.16l-1.05,-0.23l-0.45,0.22l-0.54,1.19l0.08,0.45l1.48,1.47l1.05,0.45l1.01,2.46l-1.52,2.99l-0.68,0.68l-0.13,3.69l2.38,3.84l1.09,0.8l0.24,2.48l-3.67,-1.14l-11.27,-0.13l0.23,-1.79l-0.98,-1.66l-1.19,-0.54l-0.44,-0.97l-0.6,-0.42l1.71,-4.27l0.75,-0.13l1.38,-1.36l0.65,-0.03l1.71,0.99l1.93,-1.12l1.14,-3.18l1.38,-1.17l2.0,-5.14l2.17,-2.13l0.3,-1.64l-0.86,-0.88l0.03,-0.33l0.94,1.28l0.07,3.22Z",name:"Cameroon"},CL:{path:"M246.5,429.18l-3.14,1.83l-0.57,3.16l-0.64,0.05l-2.68,-1.06l-2.82,-2.33l-3.04,-1.89l-0.69,-1.85l0.63,-2.14l-1.21,-2.11l-0.31,-5.37l1.01,-2.91l2.57,-2.38l-0.18,-0.68l-3.16,-0.77l2.05,-2.47l0.77,-4.65l2.32,0.9l0.54,-0.29l1.31,-6.31l-0.22,-0.44l-1.68,-0.8l-0.56,0.28l-0.7,3.36l-0.81,-0.22l1.56,-9.41l1.15,-2.24l-0.71,-2.82l-0.18,-2.84l1.01,-0.33l3.26,-9.14l1.07,-4.22l-0.56,-4.21l0.74,-2.34l-0.29,-3.27l1.46,-3.34l2.04,-16.59l-0.66,-7.76l1.03,-0.53l0.54,-0.9l0.79,1.14l0.32,1.78l1.25,1.16l-0.69,2.55l1.33,2.9l0.97,3.59l0.46,0.29l1.5,-0.3l0.11,0.23l-0.76,2.44l-2.57,1.23l-0.23,0.37l0.08,4.33l-0.46,0.77l0.56,1.21l-1.58,1.51l-1.68,2.62l-0.89,2.47l0.2,2.7l-1.48,2.73l1.12,5.09l0.64,0.61l-0.01,2.29l-1.38,2.68l0.01,2.4l-1.89,2.04l0.02,2.75l0.69,2.57l-1.43,1.13l-1.26,5.68l0.39,3.51l-0.97,0.89l0.58,3.5l1.02,1.14l-0.65,1.02l0.15,0.57l1.0,0.53l0.16,0.69l-1.03,0.85l0.26,1.75l-0.89,4.03l-1.31,2.66l0.24,1.75l-0.71,1.83l-1.99,1.7l0.3,3.67l0.88,1.19l1.58,0.01l0.01,2.21l1.04,1.95l5.98,0.63ZM248.69,430.79l0.0,7.33l0.4,0.4l3.52,0.05l-0.44,0.75l-1.94,0.98l-2.49,-0.37l-1.88,-1.06l-2.55,-0.49l-5.59,-3.71l-2.38,-2.63l4.1,2.48l3.32,1.23l0.45,-0.12l1.29,-1.57l0.83,-2.32l2.05,-1.24l1.31,0.29Z",name:"Chile"},CA:{path:"M280.06,145.6l-1.67,2.88l0.07,0.49l0.5,0.04l1.46,-0.98l1.0,0.42l-0.56,0.72l0.17,0.62l2.22,0.89l1.35,-0.71l1.95,0.78l-0.66,2.01l0.5,0.51l1.32,-0.42l0.98,3.17l-0.91,2.41l-0.8,0.08l-1.23,-0.45l0.47,-2.25l-0.89,-0.83l-0.48,0.06l-2.78,2.63l-0.34,-0.02l1.02,-0.85l-0.14,-0.69l-2.4,-0.77l-7.4,0.08l-0.17,-0.41l1.3,-0.94l0.02,-0.64l-0.73,-0.58l1.85,-1.74l2.57,-5.16l1.47,-1.79l1.99,-1.05l0.46,0.06l-1.53,2.45ZM68.32,74.16l4.13,0.95l4.02,2.14l2.61,0.4l2.47,-1.89l2.88,-1.31l3.85,0.48l3.71,-1.94l3.82,-1.04l1.56,1.68l0.49,0.08l1.87,-1.04l0.65,-1.98l1.24,0.35l4.16,3.94l0.54,0.01l2.75,-2.49l0.26,2.59l0.49,0.35l3.08,-0.73l1.04,-1.27l2.73,0.23l3.83,1.86l5.86,1.61l3.47,0.75l2.44,-0.26l2.73,1.78l-2.98,1.81l-0.19,0.41l0.31,0.32l4.53,0.92l6.87,-0.5l2.0,-0.69l2.49,2.39l0.53,0.02l2.72,-2.16l-0.02,-0.64l-2.16,-1.54l1.15,-1.06l4.83,-0.61l1.84,0.95l2.48,2.31l3.01,-0.23l4.55,1.92l3.85,-0.67l3.61,0.1l0.41,-0.44l-0.25,-2.36l1.79,-0.61l3.49,1.32l-0.01,3.77l0.31,0.39l0.45,-0.22l1.48,-3.16l1.74,0.1l0.41,-0.3l1.13,-4.37l-2.78,-3.11l-2.8,-1.74l0.19,-4.64l2.71,-3.07l2.98,0.67l2.41,1.95l3.19,4.8l-1.99,1.97l0.21,0.68l4.33,0.84l-0.01,4.15l0.25,0.37l0.44,-0.09l3.07,-3.15l2.54,2.39l-0.61,3.33l2.42,2.88l0.61,0.0l2.61,-3.08l1.88,-3.82l0.17,-4.58l6.72,0.94l3.13,2.04l0.13,1.82l-1.76,2.19l-0.01,0.49l1.66,2.16l-0.26,1.71l-4.68,2.8l-3.28,0.61l-2.47,-1.2l-0.55,0.23l-0.73,2.04l-2.38,3.43l-0.74,1.77l-2.74,2.57l-3.44,0.25l-2.21,1.78l-0.28,2.53l-2.82,0.55l-3.12,3.22l-2.72,4.31l-1.03,3.17l-0.14,4.31l0.33,0.41l3.44,0.57l2.24,5.95l0.45,0.23l3.4,-0.69l4.52,1.51l2.43,1.31l1.91,1.73l3.1,0.96l2.62,1.46l6.6,0.54l-0.35,2.74l0.81,3.53l1.81,3.78l3.83,3.3l0.45,0.04l2.1,-1.28l1.37,-3.69l-1.31,-5.38l-1.45,-1.58l3.57,-1.47l2.84,-2.46l1.52,-2.8l-0.25,-2.55l-1.7,-3.07l-2.85,-2.61l2.8,-3.95l-1.08,-3.37l-0.79,-5.67l1.36,-0.7l6.76,1.41l2.12,-0.96l5.12,3.36l1.05,1.61l4.08,0.26l-0.06,2.87l0.83,4.7l0.3,0.32l2.16,0.54l1.73,2.06l0.5,0.09l3.63,-2.03l2.52,-4.19l1.26,-1.32l7.6,11.72l-0.92,2.04l0.16,0.51l3.3,1.97l2.22,1.98l4.1,0.98l1.43,0.99l0.95,2.79l2.1,0.68l0.84,1.08l0.17,3.45l-3.37,2.26l-4.22,1.24l-3.06,2.63l-4.06,0.51l-5.35,-0.69l-6.39,0.2l-2.3,2.41l-3.26,1.51l-6.47,7.15l-0.06,0.48l0.44,0.19l2.13,-0.52l4.17,-4.24l5.12,-2.62l3.52,-0.3l1.69,1.21l-2.12,2.21l0.81,3.47l1.02,2.61l3.47,1.6l4.14,-0.45l2.15,-2.8l0.26,1.48l1.14,0.8l-2.56,1.69l-5.5,1.82l-2.54,1.27l-2.74,2.15l-1.4,-0.16l-0.07,-2.01l4.14,-2.44l0.18,-0.45l-0.39,-0.29l-6.63,0.45l-1.39,-1.49l-0.14,-4.43l-1.11,-0.91l-1.82,0.39l-0.66,-0.66l-0.6,0.03l-1.91,2.39l-0.82,2.52l-0.8,1.27l-1.67,0.56l-0.46,0.76l-8.31,0.07l-1.21,0.62l-2.35,1.97l-0.71,-0.14l-1.37,0.96l-1.12,-0.48l-4.74,1.26l-0.9,1.17l0.21,0.62l1.73,0.3l-1.81,0.31l-1.85,0.81l-2.11,-0.13l-2.95,1.78l-0.69,-0.09l1.39,-2.1l1.73,-1.21l0.1,-2.29l1.16,-1.99l0.49,0.53l2.03,0.42l1.2,-1.16l0.02,-0.47l-2.66,-3.51l-2.28,-0.61l-5.64,-0.71l-0.4,-0.57l-0.79,0.13l0.2,-0.41l-0.22,-0.55l-0.68,-0.26l0.19,-1.26l-0.78,-0.73l0.31,-0.64l-0.29,-0.57l-2.6,-0.44l-0.75,-1.63l-0.94,-0.66l-4.31,-0.65l-1.13,1.19l-1.48,0.59l-0.85,1.06l-2.83,-0.76l-2.09,0.39l-2.39,-0.97l-4.24,-0.7l-0.57,-0.4l-0.41,-1.63l-0.4,-0.3l-0.85,0.02l-0.39,0.4l-0.01,0.85l-69.13,-0.01l-6.51,-4.52l-4.5,-1.38l-1.26,-2.66l0.33,-1.93l-0.23,-0.43l-3.01,-1.35l-0.55,-2.77l-2.89,-2.38l-0.04,-1.45l1.39,-1.83l-0.28,-2.55l-4.16,-2.2l-4.07,-6.6l-4.02,-3.22l-1.3,-1.88l-0.5,-0.13l-2.51,1.21l-2.23,1.87l-3.85,-3.88l-2.44,-1.04l-2.22,-0.13l0.03,-37.49ZM260.37,148.65l3.04,0.76l2.26,1.2l-3.78,-0.95l-1.53,-1.01ZM249.4,3.81l6.68,0.49l5.32,0.79l4.26,1.57l-0.07,1.1l-5.85,2.53l-6.02,1.21l-2.39,1.39l-0.18,0.45l0.39,0.29l4.01,-0.02l-4.65,2.82l-4.2,1.74l-4.19,4.59l-5.03,0.92l-1.67,1.15l-7.47,0.59l-0.37,0.37l0.32,0.42l2.41,0.49l-0.81,0.47l-0.12,0.59l1.83,2.41l-2.02,1.59l-3.81,1.51l-1.32,2.16l-3.38,1.53l-0.22,0.48l0.35,1.19l0.4,0.29l3.88,-0.18l0.03,0.61l-6.33,2.95l-6.41,-1.4l-7.43,0.79l-3.72,-0.62l-4.4,-0.25l-0.23,-1.83l4.29,-1.11l0.28,-0.51l-1.1,-3.45l1.0,-0.25l6.58,2.28l0.47,-0.16l-0.05,-0.49l-3.41,-3.45l-3.58,-0.98l1.48,-1.55l4.34,-1.29l0.97,-2.19l-0.16,-0.48l-3.42,-2.13l-0.81,-2.26l6.2,0.22l2.24,0.58l3.91,-2.1l0.2,-0.43l-0.35,-0.32l-5.64,-0.67l-8.73,0.36l-4.26,-1.9l-2.12,-2.4l-2.78,-1.66l-0.41,-1.52l3.31,-1.03l2.93,-0.2l4.91,-0.99l3.7,-2.27l2.87,0.3l2.62,1.67l0.56,-0.14l1.82,-3.2l3.13,-0.94l4.44,-0.69l7.53,-0.26l1.48,0.67l7.19,-1.06l10.8,0.79ZM203.85,57.54l0.01,0.42l1.97,2.97l0.68,-0.02l2.24,-3.72l5.95,-1.86l4.01,4.64l-0.35,2.91l0.5,0.43l4.95,-1.36l2.32,-1.8l5.31,2.28l3.27,2.11l0.3,1.84l0.48,0.33l4.42,-0.99l2.64,2.87l5.97,1.77l2.06,1.72l2.11,3.71l-4.19,1.86l-0.01,0.73l5.9,2.83l3.94,0.94l3.78,3.95l3.46,0.25l-0.63,2.37l-4.11,4.47l-2.76,-1.56l-3.9,-3.94l-3.59,0.41l-0.33,0.34l-0.19,2.72l2.63,2.38l3.42,1.89l0.94,0.97l1.55,3.75l-0.7,2.29l-2.74,-0.92l-6.25,-3.15l-0.51,0.13l0.05,0.52l6.07,5.69l0.18,0.59l-6.09,-1.39l-5.31,-2.24l-2.63,-1.66l0.6,-0.77l-0.12,-0.6l-7.39,-4.01l-0.59,0.37l0.03,0.79l-6.73,0.6l-1.69,-1.1l1.36,-2.46l4.51,-0.07l5.15,-0.52l0.31,-0.6l-0.74,-1.3l0.78,-1.84l3.21,-4.05l-0.67,-2.35l-1.11,-1.6l-3.84,-2.1l-4.35,-1.28l0.91,-0.63l0.06,-0.61l-2.65,-2.75l-2.34,-0.36l-1.89,-1.46l-0.53,0.03l-1.24,1.23l-4.36,0.55l-9.04,-0.99l-9.26,-1.98l-1.6,-1.22l2.22,-1.77l0.13,-0.44l-0.38,-0.27l-3.22,-0.02l-0.72,-4.25l1.83,-4.04l2.42,-1.85l5.5,-1.1l-1.39,2.35ZM261.19,159.33l2.07,0.61l1.44,-0.04l-1.15,0.63l-2.94,-1.23l-0.4,-0.68l0.36,-0.37l0.61,1.07ZM230.83,84.39l-2.37,0.18l-0.49,-1.63l0.93,-2.09l1.94,-0.51l1.62,0.99l0.02,1.52l-1.66,1.54ZM229.43,58.25l0.11,0.65l-4.87,-0.21l-2.72,0.62l-3.1,-2.57l0.08,-1.26l0.86,-0.23l5.57,0.51l4.08,2.5ZM222.0,105.02l-0.72,1.49l-0.63,-0.19l-0.48,-0.84l0.81,-0.99l0.65,0.05l0.37,0.46ZM183.74,38.32l2.9,1.7l4.79,-0.01l1.84,1.46l-0.49,1.68l0.23,0.48l2.82,1.14l1.76,1.26l7.01,0.65l4.1,-1.1l5.03,-0.43l3.93,0.35l2.48,1.77l0.46,1.7l-1.3,1.1l-3.56,1.01l-3.23,-0.59l-7.17,0.76l-5.09,0.09l-3.99,-0.6l-6.42,-1.54l-0.79,-2.51l-0.3,-2.49l-2.64,-2.5l-5.32,-0.72l-2.52,-1.4l0.68,-1.57l4.78,0.31ZM207.38,91.35l0.4,1.56l0.56,0.26l1.06,-0.52l1.32,0.96l5.42,2.57l0.2,1.68l0.46,0.35l1.68,-0.28l1.15,0.85l-1.55,0.87l-3.61,-0.88l-1.32,-1.69l-0.57,-0.06l-2.45,2.1l-3.12,1.79l-0.7,-1.87l-0.42,-0.26l-2.16,0.24l1.39,-1.39l0.32,-3.14l0.76,-3.35l1.18,0.22ZM215.49,102.6l-2.67,1.95l-1.4,-0.07l-0.3,-0.58l1.53,-1.48l2.84,0.18ZM202.7,24.12l2.53,1.59l-2.87,1.4l-4.53,4.05l-4.25,0.38l-5.03,-0.68l-2.45,-2.04l0.03,-1.62l1.82,-1.37l0.14,-0.45l-0.38,-0.27l-4.45,0.04l-2.59,-1.76l-1.41,-2.29l1.57,-2.32l1.62,-1.66l2.44,-0.39l0.25,-0.65l-0.6,-0.74l4.86,-0.25l3.24,3.11l8.16,2.3l1.9,3.61ZM187.47,59.2l-2.76,3.49l-2.38,-0.15l-1.44,-3.84l0.04,-2.2l1.19,-1.88l2.3,-1.23l5.07,0.17l4.11,1.02l-3.24,3.72l-2.88,0.89ZM186.07,48.79l-1.08,1.53l-3.34,-0.34l-2.56,-1.1l1.03,-1.75l3.25,-1.23l1.95,1.58l0.75,1.3ZM185.71,35.32l-5.3,-0.2l-0.32,-0.71l4.31,0.07l1.3,0.84ZM180.68,32.48l-3.34,1.0l-1.79,-1.1l-0.98,-1.87l-0.15,-1.73l4.1,0.53l2.67,1.7l-0.51,1.47ZM180.9,76.31l-1.1,1.08l-3.13,-1.23l-2.12,0.43l-2.71,-1.57l1.72,-1.09l1.55,-1.72l3.81,1.9l1.98,2.2ZM169.74,54.87l2.96,0.97l4.17,-0.57l0.41,0.88l-2.14,2.11l0.09,0.64l3.55,1.92l-0.4,3.72l-3.79,1.65l-2.17,-0.35l-1.72,-1.74l-6.02,-3.5l0.03,-0.85l4.68,0.54l0.4,-0.21l-0.05,-0.45l-2.48,-2.81l2.46,-1.95ZM174.45,40.74l1.37,1.73l0.07,2.44l-1.05,3.45l-3.79,0.47l-2.32,-0.69l0.05,-2.64l-0.44,-0.41l-3.68,0.35l-0.12,-3.1l2.45,0.1l3.67,-1.73l3.41,0.29l0.37,-0.26ZM170.05,31.55l0.67,1.56l-3.33,-0.49l-4.22,-1.77l-4.35,-0.16l1.4,-0.94l-0.06,-0.7l-2.81,-1.23l-0.12,-1.39l4.39,0.68l6.62,1.98l1.81,2.47ZM134.5,58.13l-1.02,1.82l0.45,0.58l5.4,-1.39l3.33,2.29l0.49,-0.03l2.6,-2.23l1.94,1.32l2.0,4.5l0.7,0.06l1.3,-2.29l-1.63,-4.46l1.69,-0.54l2.31,0.71l2.65,1.81l2.49,7.92l8.48,4.27l-0.19,1.35l-3.79,0.33l-0.26,0.67l1.4,1.49l-0.58,1.1l-4.23,-0.64l-4.43,-1.19l-3.0,0.28l-4.66,1.47l-10.52,1.04l-1.43,-2.02l-3.42,-1.2l-2.21,0.43l-2.51,-2.86l4.84,-1.05l3.6,0.19l3.27,-0.78l0.31,-0.39l-0.31,-0.39l-4.84,-1.06l-8.79,0.27l-0.85,-1.07l5.26,-1.66l0.27,-0.45l-0.4,-0.34l-3.8,0.06l-3.81,-1.06l1.81,-3.01l1.66,-1.79l6.48,-2.81l1.97,0.71ZM158.7,56.61l-1.7,2.44l-3.2,-2.75l0.37,-0.3l3.11,-0.18l1.42,0.79ZM149.61,42.73l1.01,1.89l0.5,0.18l2.14,-0.82l2.23,0.19l0.36,2.04l-1.33,2.09l-8.28,0.76l-6.35,2.15l-3.41,0.1l-0.19,-0.96l4.9,-2.08l0.23,-0.46l-0.41,-0.31l-11.25,0.59l-2.89,-0.74l3.04,-4.44l2.14,-1.32l6.81,1.69l4.58,3.06l4.37,0.39l0.36,-0.63l-3.36,-4.6l1.85,-1.53l2.18,0.51l0.77,2.26ZM144.76,34.41l-4.36,1.44l-3.0,-1.4l1.46,-1.24l3.47,-0.52l2.96,0.71l-0.52,1.01ZM145.13,29.83l-1.9,0.66l-3.67,-0.0l2.27,-1.61l3.3,0.95ZM118.92,65.79l-6.03,2.02l-1.33,-1.9l-5.38,-2.28l2.59,-5.05l2.16,-3.14l-0.02,-0.48l-1.97,-2.41l7.64,-0.7l3.6,1.02l6.3,0.27l4.42,2.95l-2.53,0.98l-6.24,3.43l-3.1,3.28l-0.11,2.01ZM129.54,35.53l-0.28,3.37l-1.72,1.62l-2.33,0.28l-4.61,2.19l-3.86,0.76l-2.64,-0.87l3.72,-3.4l5.01,-3.34l3.72,0.07l3.0,-0.67ZM111.09,152.69l-0.67,0.24l-3.85,-1.37l-0.83,-1.17l-2.12,-1.07l-0.66,-1.02l-2.4,-0.55l-0.74,-1.71l6.02,1.45l2.0,2.55l2.52,1.39l0.73,1.27ZM87.8,134.64l0.89,0.29l1.86,-0.21l-0.65,3.34l1.69,2.33l-1.31,-1.33l-0.99,-1.62l-1.17,-0.98l-0.33,-1.82Z",name:"Canada"},CG:{path:"M466.72,276.48l-0.1,1.03l-1.25,2.97l-0.19,3.62l-0.46,1.78l-0.23,0.63l-1.61,1.19l-1.21,1.39l-1.09,2.43l0.04,2.09l-3.25,3.24l-0.5,-0.24l-0.5,-0.83l-1.36,-0.02l-0.98,0.89l-1.68,-0.99l-1.54,1.24l-1.52,-1.96l1.57,-1.14l0.11,-0.52l-0.77,-1.35l2.1,-0.66l0.39,-0.73l1.05,0.82l2.21,0.11l1.12,-1.37l0.37,-1.81l-0.27,-2.09l-1.13,-1.5l1.0,-2.69l-0.13,-0.45l-0.92,-0.58l-1.6,0.17l-0.51,-0.94l0.1,-0.61l2.75,0.09l3.97,1.24l0.51,-0.33l0.17,-1.28l1.24,-2.21l1.28,-1.14l2.76,0.49Z",name:"Congo"},CF:{path:"M461.16,278.2l-0.26,-1.19l-1.09,-0.77l-0.84,-1.17l-0.29,-1.0l-1.04,-1.15l0.08,-3.43l0.58,-0.49l1.16,-2.35l1.85,-0.17l0.61,-0.62l0.97,0.58l3.15,-0.96l2.48,-1.92l0.02,-0.96l2.81,0.02l2.36,-1.17l1.93,-2.85l1.16,-0.93l1.11,-0.3l0.27,0.86l1.34,1.47l-0.39,2.01l0.3,1.01l4.01,2.75l0.17,0.93l2.63,2.31l0.6,1.44l2.08,1.4l-3.84,-0.21l-1.94,0.88l-1.23,-0.49l-2.67,1.2l-1.29,-0.18l-0.51,0.36l-0.6,1.22l-3.35,-0.65l-1.57,-0.91l-2.42,-0.83l-1.45,0.91l-0.97,1.27l-0.26,1.56l-3.22,-0.43l-1.49,1.33l-0.94,1.62Z",name:"Central African Rep."},CD:{path:"M487.01,272.38l2.34,-0.14l1.35,1.84l1.34,0.45l0.86,-0.39l1.21,0.12l1.07,-0.41l0.54,0.89l2.04,1.54l-0.14,2.72l0.7,0.54l-1.38,1.13l-1.53,2.54l-0.17,2.05l-0.59,1.08l-0.02,1.72l-0.72,0.84l-0.66,3.01l0.63,1.32l-0.44,4.26l0.64,1.47l-0.37,1.22l0.86,1.8l1.53,1.41l0.3,1.26l0.44,0.5l-4.08,0.75l-0.92,1.81l0.51,1.34l-0.74,5.43l0.17,0.38l2.45,1.46l0.54,-0.1l0.12,1.62l-1.28,-0.01l-1.85,-2.35l-1.94,-0.45l-0.48,-1.13l-0.55,-0.2l-1.41,0.74l-1.71,-0.3l-1.01,-1.18l-2.49,-0.19l-0.44,-0.77l-1.98,-0.21l-2.88,0.36l0.11,-2.41l-0.85,-1.13l-0.16,-1.36l0.32,-1.73l-0.46,-0.89l-0.04,-1.49l-0.4,-0.39l-2.53,0.02l0.1,-0.41l-0.39,-0.49l-1.28,0.01l-0.43,0.45l-1.62,0.32l-0.83,1.79l-1.09,-0.28l-2.4,0.52l-1.37,-1.91l-1.3,-3.3l-0.38,-0.27l-7.39,-0.03l-2.46,0.42l0.5,-0.45l0.37,-1.47l0.66,-0.38l0.92,0.08l0.73,-0.82l0.87,0.02l0.31,0.68l1.4,0.36l3.59,-3.63l0.01,-2.23l1.02,-2.29l2.69,-2.39l0.43,-0.99l0.49,-1.96l0.17,-3.51l1.25,-2.95l0.36,-3.14l0.86,-1.13l1.1,-0.66l3.57,1.73l3.65,0.73l0.46,-0.21l0.8,-1.46l1.24,0.19l2.61,-1.17l0.81,0.44l1.04,-0.03l0.59,-0.66l0.7,-0.16l1.81,0.25Z",name:"Dem. Rep. Congo"},CZ:{path:"M458.46,144.88l1.22,1.01l1.47,0.23l0.13,0.93l1.36,0.68l0.54,-0.2l0.24,-0.55l1.15,0.25l0.53,1.09l1.68,0.18l0.6,0.84l-1.04,0.73l-0.96,1.28l-1.6,0.17l-0.55,0.56l-1.04,-0.46l-1.05,0.15l-2.12,-0.96l-1.05,0.34l-1.2,1.12l-1.56,-0.87l-2.57,-2.1l-0.53,-1.88l4.7,-2.52l0.71,0.26l0.9,-0.28Z",name:"Czech Rep."},CY:{path:"M504.36,193.47l0.43,0.28l-1.28,0.57l-0.92,-0.28l-0.24,-0.46l2.01,-0.13Z",name:"Cyprus"},CR:{path:"M211.34,258.05l0.48,0.99l1.6,1.6l-0.54,0.45l0.29,1.42l-0.25,1.19l-1.09,-0.59l-0.05,-1.25l-2.46,-1.42l-0.28,-0.77l-0.66,-0.45l-0.45,-0.0l-0.11,1.04l-1.32,-0.95l0.31,-1.3l-0.36,-0.6l0.31,-0.27l1.42,0.58l1.29,-0.14l0.56,0.56l0.74,0.17l0.55,-0.27Z",name:"Costa Rica"},CU:{path:"M221.21,227.25l1.27,1.02l2.19,-0.28l4.43,3.33l2.08,0.43l-0.1,0.38l0.36,0.5l1.75,0.1l1.48,0.84l-3.11,0.51l-4.15,-0.03l0.77,-0.67l-0.04,-0.64l-1.2,-0.74l-1.49,-0.16l-0.7,-0.61l-0.56,-1.4l-0.4,-0.25l-1.34,0.1l-2.2,-0.66l-0.88,-0.58l-3.18,-0.4l-0.27,-0.16l0.58,-0.74l-0.36,-0.29l-2.72,-0.05l-1.7,1.29l-0.91,0.03l-0.61,0.69l-1.01,0.22l1.11,-1.29l1.01,-0.52l3.69,-1.01l3.98,0.21l2.21,0.84Z",name:"Cuba"},SZ:{path:"M500.35,351.36l0.5,2.04l-0.38,0.89l-1.05,0.21l-1.23,-1.2l-0.02,-0.64l0.83,-1.57l1.34,0.27Z",name:"Swaziland"},SY:{path:"M511.0,199.79l0.05,-1.33l0.54,-1.36l1.28,-0.99l0.13,-0.45l-0.41,-1.11l-1.14,-0.36l-0.19,-1.74l0.52,-1.0l1.29,-1.21l0.2,-1.18l0.59,0.23l2.62,-0.76l1.36,0.52l2.06,-0.01l2.95,-1.08l3.25,-0.26l-0.67,0.94l-1.28,0.66l-0.21,0.4l0.23,2.01l-0.88,3.19l-10.15,5.73l-2.15,-0.85Z",name:"Syria"},KG:{path:"M621.35,172.32l-3.87,1.69l-0.96,1.18l-3.04,0.34l-1.13,1.86l-2.36,-0.35l-1.99,0.63l-2.39,1.4l0.06,0.95l-0.4,0.37l-4.52,0.43l-3.02,-0.93l-2.37,0.17l0.11,-0.79l2.32,0.42l1.13,-0.88l1.99,0.2l3.21,-2.14l-0.03,-0.69l-2.97,-1.57l-1.94,0.65l-1.22,-0.74l1.71,-1.58l-0.12,-0.67l-0.36,-0.15l0.32,-0.77l1.36,-0.35l4.02,1.02l0.49,-0.3l0.35,-1.59l1.09,-0.48l3.42,1.22l1.11,-0.31l7.64,0.39l1.16,1.0l1.23,0.39Z",name:"Kyrgyzstan"},KE:{path:"M506.26,284.69l1.87,-2.56l0.93,-2.15l-1.38,-4.08l-1.06,-1.6l2.82,-2.75l0.79,0.26l0.12,1.41l0.86,0.83l1.9,0.11l3.28,2.13l3.57,0.44l1.05,-1.12l1.96,-0.9l0.82,0.68l1.16,0.09l-1.78,2.45l0.03,9.12l1.3,1.94l-1.37,0.78l-0.67,1.03l-1.08,0.46l-0.34,1.67l-0.81,1.07l-0.45,1.55l-0.68,0.56l-3.2,-2.23l-0.35,-1.58l-8.86,-4.98l0.14,-1.6l-0.57,-1.04Z",name:"Kenya"},SS:{path:"M481.71,263.34l1.07,-0.72l1.2,-3.18l1.36,-0.26l1.61,1.99l0.87,0.34l1.1,-0.41l1.5,0.07l0.57,0.53l2.49,0.0l0.44,-0.63l1.07,-0.4l0.45,-0.84l0.59,-0.33l1.9,1.33l1.6,-0.2l2.83,-3.33l-0.32,-2.21l1.59,-0.52l-0.24,1.6l0.3,1.83l1.35,1.18l0.2,1.87l0.35,0.41l0.02,1.53l-0.23,0.47l-1.42,0.25l-0.85,1.44l0.3,0.6l1.4,0.16l1.11,1.08l0.59,1.13l1.03,0.53l1.28,2.36l-4.41,3.98l-1.74,0.01l-1.89,0.55l-1.47,-0.52l-1.15,0.57l-2.96,-2.62l-1.3,0.49l-1.06,-0.15l-0.79,0.39l-0.82,-0.22l-1.8,-2.7l-1.91,-1.1l-0.66,-1.5l-2.62,-2.32l-0.18,-0.94l-2.37,-1.6Z",name:"S. Sudan"},SR:{path:"M283.12,270.19l2.1,0.53l-1.08,1.95l0.2,1.72l0.93,1.49l-0.59,2.03l-0.43,0.71l-1.12,-0.42l-1.32,0.22l-0.93,-0.2l-0.46,0.26l-0.25,0.73l0.33,0.7l-0.89,-0.13l-1.39,-1.97l-0.31,-1.34l-0.97,-0.31l-0.89,-1.47l0.35,-1.61l1.45,-0.82l0.33,-1.87l2.61,0.44l0.57,-0.47l1.75,-0.16Z",name:"Suriname"},KH:{path:"M689.52,249.39l0.49,1.45l-0.28,2.74l-4.0,1.86l-0.16,0.6l0.68,0.95l-2.06,0.17l-2.05,0.97l-1.82,-0.32l-2.12,-3.7l-0.55,-2.85l1.4,-1.85l3.02,-0.45l2.23,0.35l2.01,0.98l0.51,-0.14l0.95,-1.48l1.74,0.74Z",name:"Cambodia"},SV:{path:"M195.8,250.13l1.4,-1.19l2.24,1.45l0.98,-0.27l0.44,0.2l-0.27,1.05l-1.14,-0.03l-3.64,-1.21Z",name:"El Salvador"},SK:{path:"M476.82,151.17l-1.14,1.9l-2.73,-0.92l-0.82,0.2l-0.74,0.8l-3.46,0.73l-0.47,0.69l-1.76,0.33l-1.88,-1.0l-0.18,-0.81l0.38,-0.75l1.87,-0.32l1.74,-1.89l0.83,0.16l0.79,-0.34l1.51,1.04l1.34,-0.63l1.25,0.3l1.65,-0.42l1.81,0.95Z",name:"Slovakia"},KR:{path:"M737.51,185.84l0.98,-0.1l0.87,-1.17l2.69,-0.32l0.33,-0.29l1.76,2.79l0.58,1.76l0.02,3.12l-0.8,1.32l-2.21,0.55l-1.93,1.13l-1.8,0.19l-0.2,-1.1l0.43,-2.28l-0.95,-2.56l1.43,-0.37l0.23,-0.62l-1.43,-2.06Z",name:"Korea"},SI:{path:"M456.18,162.07l-0.51,-1.32l0.18,-1.05l1.69,0.2l1.42,-0.71l2.09,-0.07l0.62,-0.51l0.21,0.47l-1.61,0.67l-0.44,1.34l-0.66,0.24l-0.26,0.82l-1.22,-0.49l-0.84,0.46l-0.69,-0.04Z",name:"Slovenia"},KP:{path:"M736.77,185.16l-0.92,-0.42l-0.88,0.62l-1.21,-0.88l0.96,-1.15l0.59,-2.59l-0.46,-0.74l-2.09,-0.77l1.64,-1.52l2.72,-1.58l1.58,-1.91l1.11,0.78l2.17,0.11l0.41,-0.5l-0.3,-1.22l3.52,-1.18l0.94,-1.4l0.98,1.08l-2.19,2.18l0.01,2.14l-1.06,0.54l-1.41,1.4l-1.7,0.52l-1.25,1.09l-0.14,1.98l0.94,0.45l1.15,1.04l-0.13,0.26l-2.6,0.29l-1.13,1.29l-1.22,0.08Z",name:"Dem. Rep. Korea"},SO:{path:"M525.13,288.48l-1.13,-1.57l-0.03,-8.86l2.66,-3.38l1.67,-0.13l2.13,-1.69l3.41,-0.23l7.08,-7.55l2.91,-3.69l0.08,-4.82l2.98,-0.67l1.24,-0.86l0.45,-0.0l-0.2,3.0l-1.21,3.62l-2.73,5.97l-2.13,3.65l-5.03,6.16l-8.56,6.4l-2.78,3.08l-0.8,1.56Z",name:"Somalia"},SN:{path:"M390.09,248.21l0.12,1.55l0.49,1.46l0.96,0.82l0.05,1.28l-1.26,-0.19l-0.75,0.33l-1.84,-0.61l-5.84,-0.13l-2.54,0.51l-0.22,-1.03l1.77,0.04l2.01,-0.91l1.03,0.48l1.09,0.04l1.29,-0.62l0.14,-0.58l-0.51,-0.74l-1.81,0.25l-1.13,-0.63l-0.79,0.04l-0.72,0.61l-2.31,0.06l-0.92,-1.77l-0.81,-0.64l0.64,-0.35l2.46,-3.74l1.04,0.19l1.38,-0.56l1.19,-0.02l2.72,1.37l3.03,3.48Z",name:"Senegal"},SL:{path:"M394.46,264.11l-1.73,1.98l-0.58,1.33l-2.07,-1.06l-1.22,-1.26l-0.65,-2.39l1.16,-0.96l0.67,-1.17l1.21,-0.52l1.66,0.0l1.03,1.64l0.52,2.41Z",name:"Sierra Leone"},SB:{path:"M826.69,311.6l-0.61,0.09l-0.2,-0.33l0.37,0.15l0.44,0.09ZM824.18,307.38l-0.26,-0.3l-0.31,-0.91l0.03,0.0l0.54,1.21ZM823.04,309.33l-1.66,-0.22l-0.2,-0.52l1.16,0.28l0.69,0.46ZM819.28,304.68l1.14,0.65l0.02,0.03l-0.81,-0.44l-0.35,-0.23Z",name:"Solomon Is."},SA:{path:"M537.53,210.34l2.0,0.24l0.9,1.32l1.49,-0.06l0.87,2.08l1.29,0.76l0.51,0.99l1.56,1.03l-0.1,1.9l0.32,0.9l1.58,2.47l0.76,0.53l0.7,-0.04l1.68,4.23l7.53,1.33l0.51,-0.29l0.77,1.25l-1.55,4.87l-7.29,2.52l-7.3,1.03l-2.34,1.17l-1.88,2.74l-0.76,0.28l-0.82,-0.78l-0.91,0.12l-2.88,-0.51l-3.51,0.25l-0.86,-0.56l-0.57,0.15l-0.66,1.27l0.16,1.11l-0.43,0.32l-0.93,-1.4l-0.33,-1.16l-1.23,-0.88l-1.27,-2.06l-0.78,-2.22l-1.73,-1.79l-1.14,-0.48l-1.54,-2.31l-0.21,-3.41l-1.44,-2.93l-1.27,-1.16l-1.33,-0.57l-1.31,-3.37l-0.77,-0.67l-0.97,-1.97l-2.8,-4.03l-1.06,-0.17l0.37,-1.96l0.2,-0.72l2.74,0.3l1.08,-0.84l0.6,-0.94l1.74,-0.35l0.65,-1.03l0.71,-0.4l0.1,-0.62l-2.06,-2.28l4.39,-1.22l0.48,-0.37l2.77,0.69l3.66,1.9l7.03,5.5l4.87,0.3Z",name:"Saudi Arabia"},SE:{path:"M480.22,89.3l-4.03,1.17l-2.43,2.86l0.26,2.57l-8.77,6.64l-1.78,5.79l1.78,2.68l2.22,1.96l-2.07,3.77l-2.72,1.13l-0.95,6.04l-1.29,3.01l-2.74,-0.31l-0.4,0.22l-1.31,2.59l-2.34,0.13l-0.75,-3.09l-2.08,-4.03l-1.83,-4.96l1.0,-1.93l2.14,-2.7l0.83,-4.45l-1.6,-2.17l-0.15,-4.94l1.48,-3.39l2.58,-0.15l0.87,-1.59l-0.78,-1.57l3.76,-5.59l4.04,-7.48l2.17,0.01l0.39,-0.29l0.57,-2.07l4.37,0.64l0.46,-0.34l0.33,-2.56l1.1,-0.13l6.94,4.87l0.06,6.32l0.66,1.36Z",name:"Sweden"},SD:{path:"M505.98,259.4l-0.34,-0.77l-1.17,-0.9l-0.26,-1.61l0.29,-1.81l-0.34,-0.46l-1.16,-0.17l-0.54,0.59l-1.23,0.11l-0.28,0.65l0.53,0.65l0.17,1.22l-2.44,3.0l-0.96,0.19l-2.39,-1.4l-0.95,0.52l-0.38,0.78l-1.11,0.41l-0.29,0.5l-1.94,0.0l-0.54,-0.52l-1.81,-0.09l-0.95,0.4l-2.45,-2.35l-2.07,0.54l-0.73,1.26l-0.6,2.1l-1.25,0.58l-0.75,-0.62l0.27,-2.65l-1.48,-1.78l-0.22,-1.48l-0.92,-0.96l-0.02,-1.29l-0.57,-1.16l-0.68,-0.16l0.69,-1.29l-0.18,-1.14l0.65,-0.62l0.03,-0.55l-0.36,-0.41l1.55,-2.97l1.91,0.16l0.43,-0.4l-0.1,-10.94l2.49,-0.01l0.4,-0.4l-0.0,-4.82l29.02,0.0l0.64,2.04l-0.49,0.66l0.36,2.69l0.93,3.16l2.12,1.55l-0.89,1.04l-1.72,0.39l-0.98,0.9l-1.43,5.65l0.24,1.15l-0.38,2.06l-0.96,2.38l-1.53,1.31l-1.32,2.91l-1.22,0.86l-0.37,1.34Z",name:"Sudan"},DO:{path:"M241.8,239.2l0.05,-0.65l-0.46,-0.73l0.42,-0.44l0.19,-1.0l-0.09,-1.53l1.66,0.01l1.99,0.63l0.33,0.67l1.28,0.19l0.33,0.76l1.0,0.08l0.8,0.62l-0.45,0.51l-1.13,-0.47l-1.88,-0.01l-1.27,0.59l-0.75,-0.55l-1.01,0.54l-0.79,1.4l-0.23,-0.61Z",name:"Dominican Rep."},DJ:{path:"M528.43,256.18l-0.45,0.66l-0.58,-0.25l-1.51,0.13l-0.18,-1.01l1.45,-1.95l0.83,0.17l0.77,-0.44l0.2,1.0l-1.2,0.51l-0.06,0.7l0.73,0.47Z",name:"Djibouti"},DK:{path:"M452.28,129.07l-1.19,2.24l-2.13,-1.6l-0.23,-0.95l2.98,-0.95l0.57,1.26ZM447.74,126.31l-0.26,0.57l-0.88,-0.07l-1.8,2.53l0.48,1.69l-1.09,0.36l-1.61,-0.39l-0.89,-1.69l-0.07,-3.43l0.96,-1.73l2.02,-0.2l1.09,-1.07l1.33,-0.67l-0.05,1.06l-0.73,1.41l0.3,1.0l1.2,0.64Z",name:"Denmark"},DE:{path:"M453.14,155.55l-0.55,-0.36l-1.2,-0.1l-1.87,0.57l-2.13,-0.13l-0.56,0.63l-0.86,-0.6l-0.96,0.09l-2.57,-0.93l-0.85,0.67l-1.47,-0.02l0.24,-1.75l1.23,-2.14l-0.28,-0.59l-3.52,-0.58l-0.92,-0.66l0.12,-1.2l-0.48,-0.88l0.27,-2.17l-0.37,-3.03l1.41,-0.22l0.63,-1.26l0.66,-3.19l-0.41,-1.18l0.26,-0.39l1.66,-0.15l0.33,0.54l0.62,0.07l1.7,-1.69l-0.54,-3.02l1.37,0.33l1.31,-0.37l0.31,1.18l2.25,0.71l-0.02,0.92l0.5,0.4l2.55,-0.65l1.34,-0.87l2.57,1.24l1.06,0.98l0.48,1.44l-0.57,0.74l-0.0,0.48l0.87,1.15l0.57,1.64l-0.14,1.29l0.82,1.7l-1.5,-0.07l-0.56,0.57l-4.47,2.15l-0.22,0.54l0.68,2.26l2.58,2.16l-0.66,1.11l-0.79,0.36l-0.23,0.43l0.32,1.87Z",name:"Germany"},YE:{path:"M528.27,246.72l0.26,-0.42l-0.22,-1.01l0.19,-1.5l0.92,-0.69l-0.07,-1.35l0.39,-0.75l1.01,0.47l3.34,-0.27l3.76,0.41l0.95,0.81l1.36,-0.58l1.74,-2.62l2.18,-1.09l6.86,-0.94l2.48,5.41l-1.64,0.76l-0.56,1.9l-6.23,2.16l-2.29,1.8l-1.93,0.05l-1.41,1.02l-4.24,0.74l-1.72,1.49l-3.28,0.19l-0.52,-1.18l0.02,-1.51l-1.34,-3.29Z",name:"Yemen"},AT:{path:"M462.89,152.8l0.04,2.25l-1.07,0.0l-0.33,0.63l0.36,0.51l-1.04,2.13l-2.02,0.07l-1.33,0.7l-5.29,-0.99l-0.47,-0.93l-0.44,-0.21l-2.47,0.55l-0.42,0.51l-3.18,-0.81l0.43,-0.91l1.12,0.78l0.6,-0.17l0.25,-0.58l1.93,0.12l1.86,-0.56l1.0,0.08l0.68,0.57l0.62,-0.15l0.26,-0.77l-0.3,-1.78l0.8,-0.44l0.68,-1.15l1.52,0.85l0.47,-0.06l1.34,-1.25l0.64,-0.17l1.81,0.92l1.28,-0.11l0.7,0.37Z",name:"Austria"},DZ:{path:"M441.46,188.44l-0.32,1.07l0.39,2.64l-0.54,2.16l-1.58,1.82l0.37,2.39l1.91,1.55l0.18,0.8l1.42,1.03l1.84,7.23l0.12,1.16l-0.57,5.0l0.2,1.51l-0.87,0.99l-0.02,0.51l1.41,1.86l0.14,1.2l0.89,1.48l0.5,0.16l0.98,-0.41l1.73,1.08l0.82,1.23l-8.22,4.81l-7.23,5.11l-3.43,1.13l-2.3,0.21l-0.28,-1.59l-2.56,-1.09l-0.67,-1.25l-26.12,-17.86l0.01,-3.47l3.77,-1.88l2.44,-0.41l2.12,-0.75l1.08,-1.42l2.81,-1.05l0.35,-2.08l1.33,-0.29l1.04,-0.94l3.47,-0.69l0.46,-1.08l-0.1,-0.45l-0.58,-0.52l-0.82,-2.81l-0.19,-1.83l-0.78,-1.49l2.03,-1.31l2.63,-0.48l1.7,-1.22l2.31,-0.84l8.24,-0.73l1.49,0.38l2.28,-1.1l2.46,-0.02l0.92,0.6l1.35,-0.05Z",name:"Algeria"},US:{path:"M892.72,99.2l1.31,0.53l1.41,-0.37l1.89,0.98l1.89,0.42l-1.32,0.58l-2.9,-1.53l-2.08,0.22l-0.26,-0.15l0.07,-0.67ZM183.22,150.47l0.37,1.47l1.12,0.85l4.23,0.7l2.39,0.98l2.17,-0.38l1.85,0.5l-1.55,0.65l-3.49,2.61l-0.16,0.77l0.5,0.39l2.33,-0.61l1.77,1.02l5.15,-2.4l-0.31,0.65l0.25,0.56l1.36,0.38l1.71,1.16l4.7,-0.88l0.67,0.85l1.31,0.21l0.58,0.58l-1.34,0.17l-2.18,-0.32l-3.6,0.89l-2.71,3.25l0.35,0.9l0.59,-0.0l0.55,-0.6l-1.36,4.65l0.29,3.09l0.67,1.58l0.61,0.45l1.77,-0.44l1.6,-1.96l0.14,-2.21l-0.82,-1.96l0.11,-1.13l1.19,-2.37l0.44,-0.33l0.48,0.75l0.4,-0.29l0.4,-1.37l0.6,-0.47l0.24,-0.8l1.69,0.49l1.65,1.08l-0.03,2.37l-1.27,1.13l-0.0,1.13l0.87,0.36l1.66,-1.29l0.5,0.17l0.5,2.6l-2.49,3.75l0.17,0.61l1.54,0.62l1.48,0.17l1.92,-0.44l4.72,-2.15l2.16,-1.8l-0.05,-1.24l0.75,-0.22l3.92,0.36l2.12,-1.05l0.21,-0.4l-0.28,-1.48l3.27,-2.4l8.32,-0.02l0.56,-0.82l1.9,-0.77l0.93,-1.51l0.74,-2.37l1.58,-1.98l0.92,0.62l1.47,-0.47l0.8,0.66l-0.0,4.09l1.96,2.6l-2.34,1.31l-5.37,2.09l-1.83,2.72l0.02,1.79l0.83,1.59l0.54,0.23l-6.19,0.94l-2.2,0.89l-0.23,0.48l0.45,0.29l2.99,-0.46l-2.19,0.56l-1.13,0.0l-0.15,-0.32l-0.48,0.08l-0.76,0.82l0.22,0.67l0.32,0.06l-0.41,1.62l-1.27,1.58l-1.48,-1.07l-0.49,-0.04l-0.16,0.46l0.52,1.58l0.61,0.59l0.03,0.79l-0.95,1.38l-1.21,-1.22l-0.27,-2.27l-0.35,-0.35l-0.42,0.25l-0.48,1.27l0.33,1.41l-0.97,-0.27l-0.48,0.24l0.18,0.5l1.52,0.83l0.1,2.52l0.79,0.51l0.52,3.42l-1.42,1.88l-2.47,0.8l-1.71,1.66l-1.31,0.25l-1.27,1.03l-0.43,0.99l-2.69,1.78l-2.64,3.03l-0.45,2.12l0.45,2.08l0.85,2.38l1.09,1.9l0.04,1.2l1.16,3.06l-0.18,2.69l-0.55,1.43l-0.47,0.21l-0.89,-0.23l-0.49,-1.18l-0.87,-0.56l-2.75,-5.16l0.48,-1.68l-0.72,-1.78l-2.01,-2.38l-1.12,-0.53l-2.72,1.18l-1.47,-1.35l-1.57,-0.68l-2.99,0.31l-2.17,-0.3l-2.0,0.19l-1.15,0.46l-0.19,0.58l0.39,0.63l0.14,1.34l-0.84,-0.2l-0.84,0.46l-1.58,-0.07l-2.08,-1.44l-2.09,0.33l-1.91,-0.62l-3.73,0.84l-2.39,2.07l-2.54,1.22l-1.45,1.41l-0.61,1.38l0.34,3.71l-0.29,0.02l-3.5,-1.33l-1.25,-3.11l-1.44,-1.5l-2.24,-3.56l-1.76,-1.09l-2.27,-0.01l-1.71,2.07l-1.76,-0.69l-1.16,-0.74l-1.52,-2.98l-3.93,-3.16l-4.34,-0.0l-0.4,0.4l-0.0,0.74l-6.5,0.02l-9.02,-3.14l-0.34,-0.71l-5.7,0.49l-0.43,-1.29l-1.62,-1.61l-1.14,-0.38l-0.55,-0.88l-1.28,-0.13l-1.01,-0.77l-2.22,-0.27l-0.43,-0.3l-0.36,-1.58l-2.4,-2.83l-2.01,-3.85l-0.06,-0.9l-2.92,-3.26l-0.33,-2.29l-1.3,-1.66l0.52,-2.37l-0.09,-2.57l-0.78,-2.3l0.95,-2.82l0.61,-5.68l-0.47,-4.27l-1.46,-4.08l3.19,0.79l1.26,2.83l0.69,0.08l0.69,-1.14l-1.1,-4.79l68.76,-0.0l0.4,-0.4l0.14,-0.86ZM32.44,67.52l1.73,1.97l0.55,0.05l0.99,-0.79l3.65,0.24l-0.09,0.62l0.32,0.45l3.83,0.77l2.61,-0.43l5.19,1.4l4.84,0.43l1.89,0.57l3.42,-0.7l6.14,1.87l-0.03,38.06l0.38,0.4l2.39,0.11l2.31,0.98l3.9,3.99l0.55,0.04l2.4,-2.03l2.16,-1.04l1.2,1.71l3.95,3.14l4.09,6.63l4.2,2.29l0.06,1.83l-1.02,1.23l-1.16,-1.08l-2.04,-1.03l-0.67,-2.89l-3.28,-3.03l-1.65,-3.57l-6.35,-0.32l-2.82,-1.01l-5.26,-3.85l-6.77,-2.04l-3.53,0.3l-4.81,-1.69l-3.25,-1.63l-2.78,0.8l-0.28,0.46l0.44,2.21l-3.91,0.96l-2.26,1.27l-2.3,0.65l-0.27,-1.65l1.05,-3.42l2.49,-1.09l0.16,-0.6l-0.69,-0.96l-0.55,-0.1l-3.19,2.12l-1.78,2.56l-3.55,2.61l-0.04,0.61l1.56,1.52l-2.07,2.29l-5.11,2.57l-0.77,1.66l-3.76,1.77l-0.92,1.73l-2.69,1.38l-1.81,-0.22l-6.95,3.32l-3.97,0.91l4.85,-2.5l2.59,-1.86l3.26,-0.52l1.19,-1.4l3.42,-2.1l2.59,-2.27l0.42,-2.68l1.23,-2.1l-0.04,-0.46l-0.45,-0.11l-2.68,1.03l-0.63,-0.49l-0.53,0.03l-1.05,1.04l-1.36,-1.54l-0.66,0.08l-0.32,0.62l-0.58,-1.14l-0.56,-0.16l-2.41,1.42l-1.07,-0.0l-0.17,-1.75l0.3,-1.71l-1.61,-1.33l-3.41,0.59l-1.96,-1.63l-1.57,-0.84l-0.15,-2.21l-1.7,-1.43l0.82,-1.88l1.99,-2.12l0.88,-1.92l1.71,-0.24l2.04,0.51l1.87,-1.77l1.91,0.25l1.91,-1.23l0.17,-0.43l-0.47,-1.82l-1.07,-0.7l1.39,-1.17l0.12,-0.45l-0.39,-0.26l-1.65,0.07l-2.66,0.88l-0.75,0.78l-1.92,-0.8l-3.46,0.44l-3.44,-0.91l-1.06,-1.61l-2.65,-1.99l2.91,-1.43l5.5,-2.0l1.52,0.0l-0.26,1.62l0.41,0.46l5.29,-0.16l0.3,-0.65l-2.03,-2.59l-3.14,-1.68l-1.79,-2.12l-2.4,-1.83l-3.09,-1.24l1.04,-1.69l4.23,-0.14l3.36,-2.07l0.73,-2.27l2.39,-1.99l2.42,-0.52l4.65,-1.97l2.46,0.23l3.71,-2.35l3.5,0.89ZM37.6,123.41l-2.25,1.23l-0.95,-0.69l-0.29,-1.24l3.21,-1.63l1.42,0.21l0.67,0.7l-1.8,1.42ZM31.06,234.03l0.98,0.47l0.74,0.87l-1.77,1.07l-0.44,-1.53l0.49,-0.89ZM29.34,232.07l0.18,0.05l0.08,0.05l-0.16,0.03l-0.11,-0.14ZM25.16,230.17l0.05,-0.03l0.18,0.22l-0.13,-0.01l-0.1,-0.18ZM5.89,113.26l-1.08,0.41l-2.21,-1.12l1.53,-0.4l1.62,0.28l0.14,0.83Z",name:"United States"},LV:{path:"M489.16,122.85l0.96,0.66l0.22,1.65l0.68,1.76l-3.65,1.7l-2.23,-1.58l-1.29,-0.26l-0.68,-0.77l-2.42,0.34l-4.16,-0.23l-2.47,0.9l0.06,-1.98l1.13,-2.06l1.95,-1.02l2.12,2.58l2.01,-0.07l0.38,-0.33l0.44,-2.52l1.76,-0.53l3.06,1.7l2.15,0.07Z",name:"Latvia"},UY:{path:"M286.85,372.74l-0.92,1.5l-2.59,1.44l-1.69,-0.52l-1.42,0.26l-2.39,-1.19l-1.52,0.08l-1.27,-1.3l0.16,-1.5l0.56,-0.79l-0.02,-2.73l1.21,-4.74l1.19,-0.21l2.37,2.0l1.08,0.03l4.36,3.17l1.22,1.6l-0.96,1.5l0.61,1.4Z",name:"Uruguay"},LB:{path:"M510.37,198.01l-0.88,0.51l1.82,-3.54l0.62,0.08l0.22,0.61l-1.13,0.88l-0.65,1.47Z",name:"Lebanon"},LA:{path:"M689.54,248.53l-1.76,-0.74l-0.49,0.15l-0.94,1.46l-1.32,-0.64l0.62,-0.98l0.11,-2.17l-2.04,-2.42l-0.25,-2.65l-1.9,-2.1l-2.15,-0.31l-0.78,0.91l-1.12,0.06l-1.05,-0.4l-2.06,1.2l-0.04,-1.59l0.61,-2.68l-0.36,-0.49l-1.35,-0.1l-0.11,-1.23l-0.96,-0.88l1.96,-1.89l0.39,0.36l1.33,0.07l0.42,-0.45l-0.34,-2.66l0.7,-0.21l1.28,1.81l1.11,2.35l0.36,0.23l2.82,0.02l0.71,1.67l-1.39,0.65l-0.72,0.93l0.13,0.6l2.91,1.51l3.6,5.25l1.88,1.78l0.56,1.62l-0.35,1.96Z",name:"Lao PDR"},TW:{path:"M724.01,226.68l-0.74,1.48l-0.9,-1.52l-0.25,-1.74l1.38,-2.44l1.73,-1.74l0.64,0.44l-1.85,5.52Z",name:"Taiwan"},TT:{path:"M266.64,259.32l0.28,-1.16l1.13,-0.22l-0.06,1.2l-1.35,0.18Z",name:"Trinidad and Tobago"},TR:{path:"M513.21,175.47l3.64,1.17l3.05,-0.44l2.1,0.26l3.11,-1.56l2.46,-0.13l2.19,1.33l0.33,0.82l-0.22,1.33l0.25,0.44l2.28,1.13l-1.17,0.57l-0.21,0.45l0.75,3.2l-0.41,1.16l1.13,1.92l-0.55,0.22l-0.9,-0.67l-2.91,-0.37l-1.24,0.46l-4.23,0.41l-2.81,1.05l-1.91,0.01l-1.52,-0.53l-2.58,0.75l-0.66,-0.45l-0.62,0.3l-0.12,1.45l-0.89,0.84l-0.47,-0.67l0.79,-1.3l-0.41,-0.2l-1.43,0.23l-2.0,-0.63l-2.02,1.65l-3.51,0.3l-2.13,-1.53l-2.7,-0.1l-0.86,1.24l-1.38,0.27l-2.29,-1.44l-2.71,-0.01l-1.37,-2.65l-1.68,-1.52l1.07,-1.99l-0.09,-0.49l-1.27,-1.12l2.37,-2.41l3.7,-0.11l1.28,-2.24l4.49,0.37l3.21,-1.97l2.81,-0.82l3.99,-0.06l4.29,2.07ZM488.79,176.72l-1.72,1.31l-0.5,-0.88l1.37,-2.57l-0.7,-0.85l1.7,-0.63l1.8,0.34l0.46,1.17l1.76,0.78l-2.87,0.32l-1.3,1.01Z",name:"Turkey"},LK:{path:"M624.16,268.99l-1.82,0.48l-0.99,-1.67l-0.42,-3.46l0.95,-3.43l1.21,0.98l2.26,4.19l-0.34,2.33l-0.85,0.58Z",name:"Sri Lanka"},TN:{path:"M448.1,188.24l-1.0,1.27l-0.02,1.32l0.84,0.88l-0.28,2.09l-1.53,1.32l-0.12,0.42l0.48,1.54l1.42,0.32l0.53,1.11l0.9,0.52l-0.11,1.67l-3.54,2.64l-0.1,2.38l-0.58,0.3l-0.96,-4.45l-1.54,-1.25l-0.16,-0.78l-1.92,-1.56l-0.18,-1.76l1.51,-1.62l0.59,-2.34l-0.38,-2.78l0.42,-1.21l2.45,-1.05l1.29,0.26l-0.06,1.11l0.58,0.38l1.47,-0.73Z",name:"Tunisia"},TL:{path:"M734.55,307.93l-0.1,-0.97l4.5,-0.86l-2.82,1.28l-1.59,0.55Z",name:"Timor-Leste"},TM:{path:"M553.03,173.76l-0.04,0.34l-0.09,-0.22l0.13,-0.12ZM555.87,172.66l0.45,-0.1l1.48,0.74l2.06,2.43l4.07,-0.18l0.38,-0.51l-0.32,-1.19l1.92,-0.94l1.91,-1.59l2.94,1.39l0.43,2.47l1.19,0.67l2.58,-0.13l0.62,0.4l1.32,3.12l4.54,3.44l2.67,1.45l3.06,1.14l-0.04,1.05l-1.33,-0.75l-0.59,0.19l-0.32,0.84l-2.2,0.81l-0.46,2.13l-1.21,0.74l-1.91,0.42l-0.73,1.33l-1.56,0.31l-2.22,-0.94l-0.2,-2.17l-0.38,-0.36l-1.73,-0.09l-2.76,-2.46l-2.14,-0.4l-2.84,-1.48l-1.78,-0.27l-1.24,0.53l-1.57,-0.08l-2.0,1.69l-1.7,0.43l-0.36,-1.58l0.36,-2.98l-0.22,-0.4l-1.65,-0.84l0.54,-1.69l-0.34,-0.52l-1.22,-0.13l0.36,-1.64l2.22,0.59l2.2,-0.95l0.12,-0.65l-1.77,-1.74l-0.66,-1.57Z",name:"Turkmenistan"},TJ:{path:"M597.75,178.82l-2.54,-0.44l-0.47,0.34l-0.24,1.7l0.43,0.45l2.64,-0.22l3.18,0.95l4.39,-0.41l0.56,2.37l0.52,0.29l0.67,-0.24l1.11,0.49l0.21,2.13l-3.76,-0.21l-1.8,1.32l-1.76,0.74l-0.61,-0.58l0.21,-2.23l-0.64,-0.49l-0.07,-0.93l-1.36,-0.66l-0.45,0.07l-1.08,1.01l-0.55,1.48l-1.31,-0.05l-0.95,1.16l-0.9,-0.35l-1.86,0.74l1.26,-2.83l-0.54,-2.17l-1.67,-0.82l0.33,-0.66l2.18,-0.04l1.19,-1.63l0.76,-1.79l2.43,-0.5l-0.26,1.0l0.73,1.05Z",name:"Tajikistan"},LS:{path:"M491.06,363.48l-0.49,0.15l-1.49,-1.67l1.1,-1.43l2.19,-1.44l1.51,1.27l-0.98,1.82l-1.23,0.38l-0.62,0.93Z",name:"Lesotho"},TH:{path:"M670.27,255.86l-1.41,3.87l0.15,2.0l0.38,0.36l1.38,0.07l0.9,2.04l0.55,2.34l1.4,1.44l1.61,0.38l0.96,0.97l-0.5,0.64l-1.1,0.2l-0.34,-1.18l-2.04,-1.1l-0.63,0.23l-0.63,-0.62l-0.48,-1.3l-2.56,-2.63l-0.73,0.41l0.95,-3.89l2.16,-4.22ZM670.67,254.77l-0.92,-2.18l-0.26,-2.61l-2.14,-3.06l0.71,-0.49l0.89,-2.59l-3.61,-5.45l0.87,-0.51l1.05,-2.58l1.74,-0.18l2.6,-1.59l0.76,0.56l0.13,1.39l0.37,0.36l1.23,0.09l-0.51,2.28l0.05,2.42l0.6,0.34l2.43,-1.42l0.77,0.39l1.47,-0.07l0.71,-0.88l1.48,0.14l1.71,1.88l0.25,2.65l1.92,2.11l-0.1,1.89l-0.61,0.86l-2.22,-0.33l-3.5,0.64l-1.6,2.12l0.36,2.58l-1.51,-0.79l-1.84,-0.01l0.28,-1.52l-0.4,-0.47l-2.21,0.01l-0.4,0.37l-0.19,2.74l-0.34,0.93Z",name:"Thailand"},TF:{path:"M596.68,420.38l-3.2,0.18l-0.05,-1.26l0.39,-1.41l1.3,0.78l2.08,0.35l-0.52,1.36Z",name:"Fr. S. Antarctic Lands"},TG:{path:"M422.7,257.63l-0.09,1.23l1.53,1.52l0.08,1.09l0.5,0.65l-0.11,5.62l0.49,1.47l-1.31,0.35l-1.02,-2.13l-0.18,-1.12l0.53,-2.19l-0.63,-1.16l-0.22,-3.68l-1.01,-1.4l0.07,-0.28l1.37,0.03Z",name:"Togo"},TD:{path:"M480.25,235.49l0.12,9.57l-2.1,0.05l-1.14,1.89l-0.69,1.63l0.34,0.73l-0.66,0.91l0.24,0.89l-0.86,1.95l0.45,0.5l0.6,-0.1l0.34,0.64l0.03,1.38l0.9,1.04l-1.45,0.43l-1.27,1.03l-1.83,2.76l-2.16,1.07l-2.31,-0.15l-0.86,0.25l-0.26,0.49l0.17,0.61l-2.11,1.68l-2.85,0.87l-1.09,-0.57l-0.73,0.66l-1.12,0.1l-1.1,-3.12l-1.25,-0.64l-1.22,-1.22l0.29,-0.64l3.01,0.04l0.35,-0.6l-1.3,-2.2l-0.08,-3.31l-0.97,-1.66l0.22,-1.04l-0.38,-0.48l-1.22,-0.04l0.0,-1.25l-0.98,-1.07l0.96,-3.01l3.25,-2.65l0.13,-3.33l0.95,-5.18l0.52,-1.07l-0.1,-0.48l-0.91,-0.78l-0.2,-0.96l-0.8,-0.58l-0.55,-3.65l2.1,-1.2l19.57,9.83Z",name:"Chad"},LY:{path:"M483.48,203.15l-0.75,1.1l0.29,1.39l-0.6,1.83l0.73,2.14l0.0,24.12l-2.48,0.01l-0.41,0.85l-19.41,-9.76l-4.41,2.28l-1.37,-1.33l-3.82,-1.1l-1.14,-1.65l-1.98,-1.23l-1.22,0.32l-0.66,-1.11l-0.17,-1.26l-1.28,-1.69l0.87,-1.19l-0.07,-4.34l0.43,-2.27l-0.86,-3.45l1.13,-0.76l0.22,-1.16l-0.2,-1.03l3.48,-2.61l0.29,-1.94l2.45,0.8l1.18,-0.21l1.98,0.44l3.15,1.18l1.37,2.54l5.72,1.67l2.64,1.35l1.61,-0.72l1.29,-1.34l-0.44,-2.34l0.66,-1.13l1.67,-1.21l1.57,-0.35l3.14,0.53l1.08,1.28l3.99,0.78l0.36,0.54Z",name:"Libya"},AE:{path:"M550.76,223.97l1.88,-0.4l3.84,0.02l4.78,-4.75l0.19,0.36l0.26,1.58l-0.81,0.01l-0.39,0.35l-0.08,2.04l-0.81,0.63l-0.01,0.96l-0.66,0.99l-0.39,1.41l-7.08,-1.25l-0.7,-1.96Z",name:"United Arab Emirates"},VE:{path:"M240.68,256.69l0.53,0.75l-0.02,1.06l-1.07,1.78l0.95,2.0l0.42,0.22l1.4,-0.44l0.56,-1.83l-0.77,-1.17l-0.1,-1.47l2.82,-0.93l0.26,-0.49l-0.28,-0.96l0.3,-0.28l0.66,1.31l1.96,0.26l1.4,1.22l0.08,0.68l0.39,0.35l4.81,-0.22l1.49,1.11l1.92,0.31l1.67,-0.84l0.22,-0.6l3.44,-0.14l-0.17,0.55l0.86,1.19l2.19,0.35l1.67,1.1l0.37,1.86l0.41,0.32l1.55,0.17l-1.66,1.35l-0.22,0.92l0.65,0.97l-1.67,0.54l-0.3,0.4l0.04,0.99l-0.56,0.57l-0.01,0.55l1.85,2.27l-0.66,0.69l-4.47,1.29l-0.72,0.54l-3.69,-0.9l-0.71,0.27l-0.02,0.7l0.91,0.53l-0.08,1.54l0.35,1.58l0.35,0.31l1.66,0.17l-1.3,0.52l-0.48,1.13l-2.68,0.91l-0.6,0.77l-1.57,0.13l-1.17,-1.13l-0.8,-2.52l-1.25,-1.26l1.02,-1.23l-1.29,-2.95l0.18,-1.62l1.0,-2.21l-0.2,-0.49l-1.14,-0.46l-4.02,0.36l-1.82,-2.1l-1.57,-0.33l-2.99,0.22l-1.06,-0.97l0.25,-1.23l-0.2,-1.01l-0.59,-0.69l-0.29,-1.06l-1.08,-0.39l0.78,-2.79l1.9,-2.11Z",name:"Venezuela"},AF:{path:"M600.7,188.88l-1.57,1.3l-0.1,0.48l0.8,2.31l-1.09,1.04l-0.03,1.27l-0.48,0.71l-2.16,-0.08l-0.37,0.59l0.78,1.48l-1.38,0.69l-1.06,1.69l0.06,1.7l-0.65,0.52l-0.91,-0.21l-1.91,0.36l-0.48,0.77l-1.88,0.13l-1.4,1.56l-0.18,2.32l-2.91,1.02l-1.65,-0.23l-0.71,0.55l-1.41,-0.3l-2.41,0.39l-3.52,-1.17l1.96,-2.35l-0.21,-1.78l-0.3,-0.34l-1.63,-0.4l-0.19,-1.58l-0.75,-2.03l0.95,-1.36l-0.19,-0.6l-0.73,-0.28l1.47,-4.8l2.14,0.9l2.12,-0.36l0.74,-1.34l1.77,-0.39l1.54,-0.92l0.63,-2.31l1.87,-0.5l0.49,-0.81l0.94,0.56l2.13,0.11l2.55,0.92l1.95,-0.83l0.65,0.43l0.56,-0.13l0.69,-1.12l1.57,-0.08l0.72,-1.66l0.79,-0.74l0.8,0.39l-0.17,0.56l0.71,0.58l-0.08,2.39l1.11,0.95ZM601.37,188.71l1.73,-0.71l1.43,-1.18l4.03,0.35l-2.23,0.74l-4.95,0.8Z",name:"Afghanistan"},IQ:{path:"M530.82,187.47l0.79,0.66l1.26,-0.28l1.46,3.08l1.63,0.94l0.14,1.23l-1.22,1.05l-0.53,2.52l1.73,2.67l3.12,1.62l1.15,1.88l-0.38,1.85l0.39,0.48l0.41,-0.0l0.02,1.07l0.76,0.94l-2.47,-0.1l-1.71,2.44l-4.31,-0.2l-7.02,-5.48l-3.73,-1.94l-2.88,-0.73l-0.85,-2.87l5.45,-3.02l0.95,-3.43l-0.19,-1.96l1.27,-0.7l1.22,-1.7l0.87,-0.36l2.69,0.34Z",name:"Iraq"},IS:{path:"M384.14,88.06l-0.37,2.61l2.54,2.51l-2.9,2.75l-9.19,3.4l-9.25,-1.66l1.7,-1.22l-0.1,-0.7l-4.05,-1.47l2.96,-0.53l0.33,-0.43l-0.11,-1.2l-0.33,-0.36l-4.67,-0.85l1.28,-2.04l3.45,-0.56l3.77,2.72l0.44,0.02l3.64,-2.16l3.3,1.08l3.98,-2.16l3.58,0.26Z",name:"Iceland"},IR:{path:"M533.43,187.16l-1.27,-2.15l0.42,-0.98l-0.71,-3.04l1.03,-0.5l0.33,0.83l1.26,1.35l2.05,0.51l1.11,-0.16l2.89,-2.11l0.62,-0.14l0.39,0.46l-0.72,1.2l0.06,0.49l1.56,1.53l0.65,0.04l0.67,1.81l2.56,0.83l1.87,1.48l3.69,0.49l3.91,-0.76l0.47,-0.73l2.17,-0.6l1.66,-1.54l1.51,0.08l1.18,-0.53l1.59,0.24l2.83,1.48l1.88,0.3l2.77,2.47l1.77,0.18l0.18,1.99l-1.68,5.49l0.24,0.5l0.61,0.23l-0.82,1.48l0.8,2.18l0.19,1.71l0.3,0.34l1.63,0.4l0.15,1.32l-2.15,2.35l-0.01,0.53l2.21,3.03l2.34,1.24l0.06,2.14l1.24,0.72l0.11,0.69l-3.31,1.27l-1.08,3.03l-9.68,-1.68l-0.99,-3.05l-1.43,-0.73l-2.17,0.46l-2.47,1.26l-2.83,-0.82l-2.46,-2.02l-2.41,-0.8l-3.42,-6.06l-0.48,-0.2l-1.18,0.39l-1.44,-0.82l-0.5,0.08l-0.65,0.74l-0.97,-1.01l-0.02,-1.31l-0.71,-0.39l0.26,-1.81l-1.29,-2.11l-3.13,-1.63l-1.58,-2.43l0.5,-1.9l1.31,-1.26l-0.19,-1.66l-1.74,-1.1l-1.57,-3.3Z",name:"Iran"},AM:{path:"M536.99,182.33l-0.28,0.03l-1.23,-2.13l-0.93,0.01l-0.62,-0.66l-0.69,-0.07l-0.96,-0.81l-1.56,-0.62l0.19,-1.12l-0.26,-0.79l2.72,-0.36l1.09,1.01l-0.17,0.92l1.02,0.78l-0.47,0.62l0.08,0.56l2.04,1.23l0.04,1.4Z",name:"Armenia"},IT:{path:"M451.59,158.63l3.48,0.94l-0.21,1.17l0.3,0.83l-1.49,-0.24l-2.04,1.1l-0.21,0.39l0.13,1.45l-0.25,1.12l0.82,1.57l2.39,1.63l1.31,2.54l2.79,2.43l2.05,0.08l0.21,0.23l-0.39,0.33l0.09,0.67l4.05,1.97l2.17,1.76l-0.16,0.36l-1.17,-1.08l-2.18,-0.49l-0.44,0.2l-1.05,1.91l0.14,0.54l1.57,0.95l-0.19,0.98l-1.06,0.33l-1.25,2.34l-0.37,0.08l0.0,-0.33l1.0,-2.45l-1.73,-3.17l-1.12,-0.51l-0.88,-1.33l-1.51,-0.51l-1.27,-1.25l-1.75,-0.18l-4.12,-3.21l-1.62,-1.65l-1.03,-3.19l-3.53,-1.36l-1.3,0.51l-1.69,1.41l0.16,-0.72l-0.28,-0.47l-1.14,-0.33l-0.53,-1.96l0.72,-0.78l0.04,-0.48l-0.65,-1.17l0.8,0.39l1.4,-0.23l1.11,-0.84l0.52,0.35l1.19,-0.1l0.75,-1.2l1.53,0.33l1.36,-0.56l0.35,-1.14l1.08,0.32l0.68,-0.64l1.98,-0.44l0.42,0.82ZM459.19,184.75l-0.65,1.65l0.32,1.05l-0.31,0.89l-1.5,-0.85l-4.5,-1.67l0.19,-0.82l2.67,0.23l3.78,-0.48ZM443.93,176.05l1.18,1.66l-0.3,3.32l-1.06,-0.01l-0.77,0.73l-0.53,-0.44l-0.1,-3.37l-0.39,-1.22l1.04,0.01l0.92,-0.68Z",name:"Italy"},VN:{path:"M690.56,230.25l-2.7,1.82l-2.09,2.46l-0.63,1.95l4.31,6.45l2.32,1.65l1.43,1.94l1.11,4.59l-0.32,4.24l-1.93,1.54l-2.84,1.61l-2.11,2.15l-2.73,2.06l-0.59,-1.05l0.63,-1.53l-0.13,-0.47l-1.34,-1.04l1.51,-0.71l2.55,-0.18l0.3,-0.63l-0.82,-1.14l4.0,-2.07l0.31,-3.05l-0.57,-1.77l0.42,-2.66l-0.73,-1.97l-1.86,-1.76l-3.63,-5.29l-2.72,-1.46l0.36,-0.47l1.5,-0.64l0.21,-0.52l-0.97,-2.27l-0.37,-0.24l-2.83,-0.02l-2.24,-3.9l0.83,-0.4l4.39,-0.29l2.06,-1.31l1.15,0.89l1.88,0.4l-0.17,1.51l1.35,1.16l1.67,0.45Z",name:"Vietnam"},AR:{path:"M249.29,428.93l-2.33,-0.52l-5.83,-0.43l-0.89,-1.66l0.05,-2.37l-0.45,-0.4l-1.43,0.18l-0.67,-0.91l-0.2,-3.13l1.88,-1.47l0.79,-2.04l-0.25,-1.7l1.3,-2.68l0.91,-4.15l-0.22,-1.69l0.85,-0.45l0.2,-0.44l-0.27,-1.16l-0.98,-0.68l0.59,-0.92l-0.05,-0.5l-1.04,-1.07l-0.52,-3.1l0.97,-0.86l-0.42,-3.58l1.2,-5.43l1.38,-0.98l0.16,-0.43l-0.75,-2.79l-0.01,-2.43l1.78,-1.75l0.06,-2.57l1.43,-2.85l0.01,-2.58l-0.69,-0.74l-1.09,-4.52l1.47,-2.7l-0.18,-2.79l0.85,-2.35l1.59,-2.46l1.73,-1.64l0.05,-0.52l-0.6,-0.84l0.44,-0.85l-0.07,-4.19l2.7,-1.44l0.86,-2.75l-0.21,-0.71l1.76,-2.01l2.9,0.57l1.38,1.78l0.68,-0.08l0.87,-1.87l2.39,0.09l4.95,4.77l2.17,0.49l3.0,1.92l2.47,1.0l0.25,0.82l-2.37,3.93l0.23,0.59l5.39,1.16l2.12,-0.44l2.45,-2.16l0.5,-2.38l0.76,-0.31l0.98,1.2l-0.04,1.8l-3.67,2.51l-2.85,2.66l-3.43,3.88l-1.3,5.07l0.01,2.72l-0.54,0.73l-0.36,3.28l3.14,2.64l-0.16,2.11l1.4,1.11l-0.1,1.09l-2.29,3.52l-3.55,1.49l-4.92,0.6l-2.71,-0.29l-0.43,0.51l0.5,1.65l-0.49,2.1l0.38,1.42l-1.19,0.83l-2.36,0.38l-2.3,-1.04l-1.38,0.83l0.41,3.64l1.69,0.91l1.4,-0.71l0.36,0.76l-2.04,0.86l-2.01,1.89l-0.97,4.63l-2.34,0.1l-2.09,1.78l-0.61,2.75l2.46,2.31l2.17,0.63l-0.7,2.32l-2.83,1.73l-1.73,3.86l-2.17,1.22l-1.16,1.67l0.75,3.76l1.04,1.28ZM256.71,438.88l-2.0,0.15l-1.4,-1.22l-3.82,-0.1l-0.0,-5.83l1.6,3.05l3.26,2.07l3.08,0.78l-0.71,1.1Z",name:"Argentina"},AU:{path:"M705.8,353.26l0.26,0.04l0.17,-0.47l-0.48,-1.42l0.92,1.11l0.45,0.15l0.27,-0.39l-0.1,-1.56l-1.98,-3.63l1.09,-3.31l-0.24,-1.57l0.34,-0.62l0.38,1.06l0.43,-0.19l0.99,-1.7l1.91,-0.83l1.29,-1.15l1.81,-0.91l0.96,-0.17l0.92,0.26l1.92,-0.95l1.47,-0.28l1.03,-0.8l1.43,0.04l2.78,-0.84l1.36,-1.15l0.71,-1.45l1.41,-1.26l0.3,-2.58l1.27,-1.59l0.78,1.65l0.54,0.19l1.07,-0.51l0.15,-0.6l-0.73,-1.0l0.45,-0.71l0.78,0.39l0.58,-0.3l0.28,-1.82l1.87,-2.14l1.12,-0.39l0.28,-0.58l0.62,0.17l0.53,-0.73l1.87,-0.57l1.65,1.05l1.35,1.48l3.39,0.38l0.43,-0.54l-0.46,-1.23l1.05,-1.79l1.04,-0.61l0.14,-0.55l-0.25,-0.41l0.88,-1.17l1.31,-0.77l1.3,0.27l2.1,-0.48l0.31,-0.4l-0.05,-1.3l-0.92,-0.77l1.48,0.56l1.41,1.07l2.11,0.65l0.81,-0.2l1.4,0.7l1.69,-0.66l0.8,0.19l0.64,-0.33l0.71,0.77l-1.33,1.94l-0.71,0.07l-0.35,0.51l0.24,0.86l-1.52,2.35l0.12,1.05l2.15,1.65l1.97,0.85l3.04,2.36l1.97,0.65l0.55,0.88l2.72,0.85l1.84,-1.1l2.07,-5.97l-0.42,-3.59l0.3,-1.73l0.47,-0.87l-0.31,-0.68l1.09,-3.28l0.46,-0.47l0.4,0.71l0.16,1.51l0.65,0.52l0.16,1.04l0.85,1.21l0.12,2.38l0.9,2.0l0.57,0.18l1.3,-0.78l1.69,1.7l-0.2,1.08l0.53,2.2l0.39,1.3l0.68,0.48l0.6,1.95l-0.19,1.48l0.81,1.76l6.01,3.69l-0.11,0.76l1.38,1.58l0.95,2.77l0.58,0.22l0.72,-0.41l0.8,0.9l0.61,0.01l0.46,2.41l4.81,4.71l0.66,2.02l-0.07,3.31l1.14,2.2l-0.13,2.24l-1.1,3.68l0.03,1.64l-0.47,1.89l-1.05,2.4l-1.9,1.47l-1.72,3.51l-2.38,6.09l-0.24,2.82l-1.14,0.8l-2.85,0.15l-2.31,1.19l-2.51,2.25l-3.09,-1.57l0.3,-1.15l-0.54,-0.47l-1.5,0.63l-2.01,1.94l-7.12,-2.18l-1.48,-1.63l-1.14,-3.74l-1.45,-1.26l-1.81,-0.26l0.56,-1.18l-0.61,-2.1l-0.72,-0.1l-1.14,1.82l-0.9,0.21l0.63,-0.82l0.36,-1.55l0.92,-1.31l-0.13,-2.34l-0.7,-0.22l-2.0,2.34l-1.51,0.93l-0.94,2.01l-1.35,-0.81l-0.02,-1.52l-1.57,-2.04l-1.09,-0.88l0.24,-0.33l-0.14,-0.59l-3.21,-1.69l-1.83,-0.12l-2.54,-1.35l-4.58,0.28l-6.02,1.9l-2.53,-0.13l-2.62,1.41l-2.13,0.63l-1.49,2.6l-3.49,0.31l-2.29,-0.5l-3.48,0.43l-1.6,1.47l-0.81,-0.04l-2.37,1.63l-3.26,-0.1l-3.72,-2.21l0.04,-1.05l1.19,-0.46l0.49,-0.89l0.21,-2.97l-0.28,-1.64l-1.34,-2.86l-0.38,-1.47l0.05,-1.72l-0.95,-1.7l-0.18,-0.97l-1.01,-0.99l-0.29,-1.98l-1.13,-1.75ZM784.92,393.44l2.65,1.02l3.23,-0.96l1.09,0.14l0.15,3.06l-0.85,1.13l-0.17,1.63l-0.87,-0.24l-1.57,1.91l-1.68,-0.18l-1.4,-2.36l-0.37,-2.04l-1.39,-2.51l0.04,-0.8l1.15,0.18Z",name:"Australia"},IL:{path:"M507.76,203.05l0.4,-0.78l0.18,0.4l-0.33,1.03l0.52,0.44l0.68,-0.22l-0.86,3.6l-1.16,-3.32l0.59,-0.74l-0.03,-0.41ZM508.73,200.34l0.37,-1.02l0.64,0.0l0.52,-0.51l-0.49,1.53l-0.56,-0.24l-0.48,0.23Z",name:"Israel"},IN:{path:"M623.34,207.03l-1.24,1.04l-0.97,2.55l0.22,0.51l8.04,3.87l3.42,0.37l1.57,1.38l4.92,0.88l2.18,-0.04l0.38,-0.3l0.29,-1.24l-0.32,-1.64l0.14,-0.87l0.82,-0.31l0.45,2.48l2.28,1.02l1.77,-0.38l4.14,0.1l0.38,-0.36l0.18,-1.66l-0.5,-0.65l1.37,-0.29l2.25,-1.99l2.7,-1.62l1.93,0.62l1.8,-0.98l0.79,1.14l-0.68,0.91l0.26,0.63l2.42,0.36l0.09,0.47l-0.83,0.75l0.13,1.07l-1.52,-0.29l-3.24,1.86l-0.13,1.78l-1.32,2.14l-0.18,1.39l-0.93,1.82l-1.64,-0.5l-0.52,0.37l-0.09,2.63l-0.56,1.11l0.19,0.81l-0.53,0.27l-1.18,-3.73l-1.08,-0.27l-0.38,0.31l-0.24,1.0l-0.66,-0.66l0.54,-1.06l1.22,-0.34l1.15,-2.25l-0.24,-0.56l-1.57,-0.47l-4.34,-0.28l-0.18,-1.56l-0.35,-0.35l-1.11,-0.12l-1.91,-1.12l-0.56,0.17l-0.88,1.82l0.11,0.49l1.36,1.07l-1.09,0.69l-0.69,1.11l0.18,0.56l1.24,0.57l-0.32,1.54l0.85,1.94l0.36,2.01l-0.22,0.59l-4.58,0.52l-0.33,0.42l0.13,1.8l-1.17,1.36l-3.65,1.81l-2.79,3.03l-4.32,3.28l-0.18,1.27l-4.65,1.79l-0.77,2.16l0.64,5.3l-1.06,2.49l-0.01,3.94l-1.24,0.28l-1.14,1.93l0.39,0.84l-1.68,0.53l-1.04,1.83l-0.65,0.47l-2.06,-2.05l-2.1,-6.02l-2.2,-3.64l-1.05,-4.75l-2.29,-3.57l-1.76,-8.2l0.01,-3.11l-0.49,-2.53l-0.55,-0.29l-3.53,1.52l-1.53,-0.27l-2.86,-2.77l0.85,-0.67l0.08,-0.55l-0.74,-1.03l-2.67,-2.06l1.24,-1.32l5.34,0.01l0.39,-0.49l-0.5,-2.29l-1.42,-1.46l-0.27,-1.93l-1.43,-1.2l2.31,-2.37l3.05,0.06l2.62,-2.85l1.6,-2.81l2.4,-2.73l0.07,-2.04l1.97,-1.48l-0.02,-0.65l-1.93,-1.31l-0.82,-1.78l-0.8,-2.21l0.9,-0.89l3.59,0.65l2.92,-0.42l2.33,-2.19l2.31,2.85l-0.24,2.13l0.99,1.59l-0.05,0.82l-1.34,-0.28l-0.47,0.48l0.7,3.06l2.62,1.99l2.99,1.65Z",name:"India"},TZ:{path:"M495.56,296.42l2.8,-3.12l-0.02,-0.81l-0.64,-1.3l0.68,-0.52l0.14,-1.47l-0.76,-1.25l0.31,-0.11l2.26,0.03l-0.51,2.76l0.76,1.3l0.5,0.12l1.05,-0.53l1.19,-0.12l0.61,0.24l1.43,-0.62l0.1,-0.67l-0.71,-0.62l1.57,-1.7l8.65,4.86l0.32,1.53l3.34,2.33l-1.05,2.8l0.13,1.61l1.63,1.12l-0.6,1.76l-0.01,2.33l1.89,4.03l0.57,0.43l-1.46,1.08l-2.61,0.94l-1.43,-0.04l-1.06,0.77l-2.29,0.36l-2.87,-0.68l-0.83,0.07l-0.63,-0.75l-0.31,-2.78l-1.32,-1.35l-3.25,-0.77l-3.96,-1.58l-1.18,-2.41l-0.32,-1.75l-1.76,-1.49l0.42,-1.05l-0.44,-0.89l0.08,-0.96l-0.46,-0.58l0.06,-0.56Z",name:"Tanzania"},AZ:{path:"M539.29,175.73l1.33,0.32l1.94,-1.8l2.3,3.34l1.43,0.43l-1.26,0.15l-0.35,0.32l-0.8,3.14l-0.99,0.96l0.05,1.11l-1.26,-1.13l0.7,-1.18l-0.04,-0.47l-0.74,-0.86l-1.48,0.15l-2.34,1.71l-0.03,-1.27l-2.03,-1.35l0.47,-0.62l-0.08,-0.56l-1.03,-0.79l0.29,-0.43l-0.14,-0.58l-1.13,-0.86l1.89,0.68l1.69,0.06l0.37,-0.87l-0.81,-1.37l0.42,0.06l1.63,1.72ZM533.78,180.57l0.61,0.46l0.69,-0.0l0.59,1.15l-0.68,-0.15l-1.21,-1.45Z",name:"Azerbaijan"},IE:{path:"M405.08,135.42l0.35,2.06l-1.75,2.78l-4.22,1.88l-2.84,-0.4l1.73,-3.0l-1.18,-3.53l4.6,-3.74l0.32,1.15l-0.49,1.74l0.4,0.51l1.47,-0.04l1.6,0.6Z",name:"Ireland"},ID:{path:"M756.47,287.89l0.69,4.01l2.79,1.78l0.51,-0.1l2.04,-2.59l2.71,-1.43l2.05,-0.0l3.9,1.73l2.46,0.45l0.08,15.12l-1.75,-1.54l-2.54,-0.51l-0.88,0.71l-2.32,0.06l0.69,-1.33l1.45,-0.64l0.23,-0.46l-0.65,-2.74l-1.24,-2.21l-5.04,-2.29l-2.09,-0.23l-3.68,-2.27l-0.55,0.13l-0.65,1.07l-0.52,0.12l-0.55,-1.89l-1.21,-0.78l1.84,-0.62l1.72,0.05l0.39,-0.52l-0.21,-0.66l-0.38,-0.28l-3.45,-0.0l-1.13,-1.48l-2.1,-0.43l-0.52,-0.6l2.69,-0.48l1.28,-0.78l3.66,0.94l0.3,0.71ZM757.91,300.34l-0.62,0.82l-0.1,-0.8l0.59,-1.12l0.13,1.1ZM747.38,292.98l0.34,0.72l-1.22,-0.57l-4.68,-0.1l0.27,-0.62l2.78,-0.09l2.52,0.67ZM741.05,285.25l-0.67,-2.88l0.64,-2.01l0.41,0.86l1.21,0.18l0.16,0.7l-0.1,1.68l-0.84,-0.16l-0.46,0.3l-0.34,1.34ZM739.05,293.5l-0.5,0.44l-1.34,-0.36l-0.17,-0.37l1.73,-0.08l0.27,0.36ZM721.45,284.51l-0.19,1.97l2.24,2.23l0.54,0.02l1.27,-1.07l2.75,-0.5l-0.9,1.21l-2.11,0.93l-0.16,0.6l2.22,3.01l-0.3,1.07l1.36,1.74l-2.26,0.85l-0.28,-0.31l0.12,-1.19l-1.64,-1.34l0.17,-2.23l-0.56,-0.39l-1.67,0.76l-0.23,0.39l0.3,6.17l-1.1,0.25l-0.69,-0.47l0.64,-2.21l-0.39,-2.42l-0.39,-0.34l-0.8,-0.01l-0.58,-1.29l0.98,-1.6l0.35,-1.96l1.32,-3.87ZM728.59,296.27l0.38,0.49l-0.02,1.28l-0.88,0.49l-0.53,-0.47l1.04,-1.79ZM729.04,286.98l0.27,-0.05l-0.02,0.13l-0.24,-0.08ZM721.68,284.05l0.16,-0.32l1.89,-1.65l1.83,0.68l3.16,0.35l2.94,-0.1l2.39,-1.66l-1.73,2.13l-1.66,0.43l-2.41,-0.48l-4.17,0.13l-2.39,0.51ZM730.55,310.47l1.11,-1.93l2.03,-0.82l0.08,0.62l-1.45,1.67l-1.77,0.46ZM728.12,305.88l-0.1,0.38l-3.46,0.66l-2.91,-0.27l-0.0,-0.25l1.54,-0.41l1.66,0.73l1.67,-0.19l1.61,-0.65ZM722.9,310.24l-0.64,0.03l-2.26,-1.2l1.11,-0.24l1.78,1.41ZM716.26,305.77l0.88,0.51l1.28,-0.17l0.2,0.35l-4.65,0.73l0.39,-0.67l1.15,-0.02l0.75,-0.73ZM711.66,293.84l-0.38,-0.16l-2.54,1.01l-1.12,-1.44l-1.69,-0.13l-1.16,-0.75l-3.04,0.77l-1.1,-1.15l-3.31,-0.11l-0.35,-3.05l-1.35,-0.95l-1.11,-1.98l-0.33,-2.06l0.27,-2.14l0.9,-1.01l0.37,1.15l2.09,1.49l1.53,-0.48l1.82,0.08l1.38,-1.19l1.0,-0.18l2.28,0.67l2.26,-0.53l1.52,-3.64l1.01,-0.99l0.78,-2.57l4.1,0.3l-1.11,1.77l0.02,0.46l1.7,2.2l-0.23,1.39l2.07,1.71l-2.33,0.42l-0.88,1.9l0.1,2.05l-2.4,1.9l-0.06,2.45l-0.7,2.79ZM692.58,302.03l0.35,0.26l4.8,0.25l0.78,-0.97l4.17,1.09l1.13,1.68l3.69,0.45l2.13,1.04l-1.8,0.6l-2.77,-0.99l-4.8,-0.12l-5.24,-1.41l-1.84,-0.25l-1.11,0.3l-4.26,-0.97l-0.7,-1.14l-1.59,-0.13l1.18,-1.65l2.74,0.13l2.87,1.13l0.26,0.68ZM685.53,299.17l-2.22,0.04l-2.06,-2.03l-3.15,-2.01l-2.93,-3.51l-3.11,-5.33l-2.2,-2.12l-1.64,-4.06l-2.32,-1.69l-1.27,-2.07l-1.96,-1.5l-2.51,-2.65l-0.11,-0.66l4.81,0.53l2.15,2.38l3.31,2.74l2.35,2.66l2.7,0.17l1.95,1.59l1.54,2.17l1.59,0.95l-0.84,1.71l0.15,0.52l1.44,0.87l0.79,0.1l0.4,1.58l0.87,1.4l1.96,0.39l1.0,1.31l-0.6,3.01l-0.09,3.5Z",name:"Indonesia"},UA:{path:"M492.5,162.44l1.28,-2.49l1.82,0.19l0.66,-0.23l0.09,-0.71l-0.25,-0.75l-0.79,-0.72l-0.33,-1.21l-0.86,-0.62l-0.02,-1.19l-1.13,-0.86l-1.15,-0.19l-2.04,-1.0l-1.66,0.32l-0.66,0.47l-0.92,-0.0l-0.84,0.78l-2.48,0.7l-1.18,-0.71l-3.07,-0.36l-0.89,0.43l-0.24,-0.55l-1.11,-0.7l0.35,-0.93l1.26,-1.02l-0.54,-1.23l2.04,-2.43l1.4,-0.62l0.25,-1.19l-1.04,-2.39l0.83,-0.13l1.28,-0.84l1.8,-0.07l2.47,0.26l2.86,0.81l1.88,0.06l0.86,0.44l1.04,-0.41l0.77,0.66l2.18,-0.15l0.92,0.3l0.52,-0.34l0.15,-1.53l0.56,-0.54l2.85,-0.05l0.84,-0.72l3.04,-0.18l1.23,1.46l-0.48,0.77l0.21,1.03l0.36,0.32l1.8,0.14l0.93,2.08l3.18,1.15l1.94,-0.45l1.67,1.49l1.4,-0.03l3.35,0.96l0.02,0.54l-0.96,1.59l0.47,1.97l-0.26,0.7l-2.36,0.28l-1.29,0.89l-0.23,1.38l-1.83,0.27l-1.58,0.97l-2.41,0.21l-2.16,1.17l-0.21,0.38l0.34,2.26l1.23,0.75l2.13,-0.08l-0.14,0.31l-2.65,0.53l-3.23,1.69l-0.87,-0.39l0.42,-1.1l-0.25,-0.52l-2.21,-0.73l2.35,-1.06l0.12,-0.65l-0.93,-0.82l-3.62,-0.74l-0.13,-0.89l-0.46,-0.34l-2.61,0.59l-0.91,1.69l-1.71,2.04l-0.86,-0.4l-1.62,0.27Z",name:"Ukraine"},QA:{path:"M549.33,221.64l-0.76,-0.23l-0.14,-1.64l0.84,-1.29l0.47,0.52l0.04,1.34l-0.45,1.3Z",name:"Qatar"},MZ:{path:"M508.58,318.75l-0.34,-2.57l0.51,-2.05l3.55,0.63l2.5,-0.38l1.02,-0.76l1.49,0.01l2.74,-0.98l1.66,-1.2l0.5,9.24l0.41,1.23l-0.68,1.67l-0.93,1.71l-1.5,1.5l-5.16,2.28l-2.78,2.73l-1.02,0.53l-1.71,1.8l-0.98,0.57l-0.35,2.41l1.16,1.94l0.49,2.17l0.43,0.31l-0.06,2.06l-0.39,1.17l0.5,0.72l-0.25,0.73l-0.92,0.83l-5.12,2.39l-1.22,1.36l0.21,1.13l0.58,0.39l-0.11,0.72l-1.22,-0.01l-0.73,-2.97l0.42,-3.09l-1.78,-5.37l2.49,-2.81l0.69,-1.89l0.44,-0.43l0.28,-1.53l-0.39,-0.93l0.59,-3.65l-0.01,-3.26l-1.49,-1.16l-1.2,-0.22l-1.74,-1.17l-1.92,0.01l-0.29,-2.08l7.06,-1.96l1.28,1.09l0.89,-0.1l0.67,0.44l0.1,0.73l-0.51,1.29l0.19,1.81l1.75,1.83l0.65,-0.13l0.71,-1.65l1.17,-0.86l-0.26,-3.47l-1.05,-1.85l-1.04,-0.94Z",name:"Mozambique"}},height:440.70631074413296,projection:{type:"mill",centralMeridian:11.5},width:900});

